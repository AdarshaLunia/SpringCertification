!SESSION 2012-03-17 09:35:03.301 -----------------------------------------------
eclipse.buildId=2.9.0.201203011000-RELEASE
java.version=1.6.0_27
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.core.resources 4 2 2012-03-17 09:47:32.619
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.core.resources".
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource '/demo/target' does not exist.
	at org.eclipse.core.internal.resources.Resource.checkExists(Resource.java:320)
	at org.eclipse.core.internal.resources.Resource.checkAccessible(Resource.java:194)
	at org.eclipse.core.internal.resources.Folder.assertCreateRequirements(Folder.java:33)
	at org.eclipse.core.internal.resources.Folder.create(Folder.java:95)
	at org.eclipse.core.internal.resources.Folder.create(Folder.java:125)
	at org.eclipse.ajdt.core.builder.AJBuilder.createFolder(AJBuilder.java:1237)
	at org.eclipse.ajdt.core.builder.AJBuilder.copyResources(AJBuilder.java:1115)
	at org.eclipse.ajdt.core.builder.AJBuilder.copyResources(AJBuilder.java:1060)
	at org.eclipse.ajdt.core.builder.AJBuilder.build(AJBuilder.java:179)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 1 org.eclipse.core.resources 4 368 2012-03-17 09:47:32.620
!MESSAGE Resource '/demo/target' does not exist.
!SUBENTRY 1 org.eclipse.core.resources 4 368 2012-03-17 09:47:32.620
!MESSAGE Resource '/demo/target' does not exist.

!ENTRY org.eclipse.core.resources 4 75 2012-03-17 09:47:32.657
!MESSAGE Errors occurred during the build.
!SUBENTRY 1 org.eclipse.ajdt.core 4 75 2012-03-17 09:47:32.657
!MESSAGE Errors running builder 'AspectJ Builder' on project 'demo'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource '/demo/target' does not exist.
	at org.eclipse.core.internal.resources.Resource.checkExists(Resource.java:320)
	at org.eclipse.core.internal.resources.Resource.checkAccessible(Resource.java:194)
	at org.eclipse.core.internal.resources.Folder.assertCreateRequirements(Folder.java:33)
	at org.eclipse.core.internal.resources.Folder.create(Folder.java:95)
	at org.eclipse.core.internal.resources.Folder.create(Folder.java:125)
	at org.eclipse.ajdt.core.builder.AJBuilder.createFolder(AJBuilder.java:1237)
	at org.eclipse.ajdt.core.builder.AJBuilder.copyResources(AJBuilder.java:1115)
	at org.eclipse.ajdt.core.builder.AJBuilder.copyResources(AJBuilder.java:1060)
	at org.eclipse.ajdt.core.builder.AJBuilder.build(AJBuilder.java:179)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 368 2012-03-17 09:47:32.657
!MESSAGE Resource '/demo/target' does not exist.
!SUBENTRY 1 org.eclipse.core.resources 4 368 2012-03-17 09:47:32.657
!MESSAGE Resource '/demo/target' does not exist.

!ENTRY org.springframework.ide.eclipse.beans.core 2 0 2012-03-17 09:47:54.261
!MESSAGE Problem loading NamespaceHandler for 'http://www.springframework.org/schema/security'.
!STACK 0
org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.security.config.SecurityNamespaceHandler]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:162)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:104)
	at org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.resolve(DefaultNamespaceHandlerResolver.java:129)
	at org.springframework.ide.eclipse.beans.core.internal.model.namespaces.DelegatingNamespaceHandlerResolver.resolve(DelegatingNamespaceHandlerResolver.java:87)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$ErrorSuppressingBeanDefinitionParserDelegate.parseCustomElement(BeansConfig.java:1385)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1409)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:184)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$ToolingFriendlyBeanDefinitionDocumentReader.doRegisterBeanDefinitions(BeansConfig.java:1329)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:111)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$2.registerBeanDefinitions(BeansConfig.java:401)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$2.loadBeanDefinitions(BeansConfig.java:387)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:444)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:1)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
	at org.springframework.security.config.SecurityNamespaceHandler.<init>(SecurityNamespaceHandler.java:41)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
	... 24 more
Caused by: java.lang.ClassNotFoundException: org.apache.commons.logging.LogFactory
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	... 30 more

!ENTRY org.springframework.ide.eclipse.beans.core 2 0 2012-03-17 09:47:54.265
!MESSAGE Problem loading NamespaceHandler for 'http://www.springframework.org/schema/security'.
!STACK 0
org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.security.config.SecurityNamespaceHandler]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:162)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:104)
	at org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.resolve(DefaultNamespaceHandlerResolver.java:129)
	at org.springframework.ide.eclipse.beans.core.internal.model.namespaces.DelegatingNamespaceHandlerResolver.resolve(DelegatingNamespaceHandlerResolver.java:87)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$ErrorSuppressingBeanDefinitionParserDelegate.parseCustomElement(BeansConfig.java:1385)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1409)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:184)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$ToolingFriendlyBeanDefinitionDocumentReader.doRegisterBeanDefinitions(BeansConfig.java:1329)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:111)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$2.registerBeanDefinitions(BeansConfig.java:401)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$2.loadBeanDefinitions(BeansConfig.java:387)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:444)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:1)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
	at org.springframework.security.config.SecurityNamespaceHandler.<init>(SecurityNamespaceHandler.java:41)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
	... 24 more

!ENTRY org.springframework.ide.eclipse.beans.core 2 0 2012-03-17 09:47:59.059
!MESSAGE Problem loading NamespaceHandler for 'http://www.springframework.org/schema/security'.
!STACK 0
org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.security.config.SecurityNamespaceHandler]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:162)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:104)
	at org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.resolve(DefaultNamespaceHandlerResolver.java:129)
	at org.springframework.ide.eclipse.beans.core.internal.model.namespaces.DelegatingNamespaceHandlerResolver.resolve(DelegatingNamespaceHandlerResolver.java:87)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$ErrorSuppressingBeanDefinitionParserDelegate.parseCustomElement(BeansConfig.java:1385)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1409)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:184)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$ToolingFriendlyBeanDefinitionDocumentReader.doRegisterBeanDefinitions(BeansConfig.java:1329)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:111)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$2.registerBeanDefinitions(BeansConfig.java:401)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$2.loadBeanDefinitions(BeansConfig.java:387)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:444)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:1)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
	at org.springframework.security.config.SecurityNamespaceHandler.<init>(SecurityNamespaceHandler.java:41)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
	... 24 more
Caused by: java.lang.ClassNotFoundException: org.apache.commons.logging.LogFactory
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	... 30 more

!ENTRY org.springframework.ide.eclipse.beans.core 2 0 2012-03-17 09:47:59.061
!MESSAGE Problem loading NamespaceHandler for 'http://www.springframework.org/schema/security'.
!STACK 0
org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.security.config.SecurityNamespaceHandler]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:162)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:104)
	at org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.resolve(DefaultNamespaceHandlerResolver.java:129)
	at org.springframework.ide.eclipse.beans.core.internal.model.namespaces.DelegatingNamespaceHandlerResolver.resolve(DelegatingNamespaceHandlerResolver.java:87)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$ErrorSuppressingBeanDefinitionParserDelegate.parseCustomElement(BeansConfig.java:1385)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1409)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:184)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$ToolingFriendlyBeanDefinitionDocumentReader.doRegisterBeanDefinitions(BeansConfig.java:1329)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:111)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$2.registerBeanDefinitions(BeansConfig.java:401)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$2.loadBeanDefinitions(BeansConfig.java:387)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:444)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:1)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
	at org.springframework.security.config.SecurityNamespaceHandler.<init>(SecurityNamespaceHandler.java:41)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
	... 24 more

!ENTRY org.eclipse.wst.common.project.facet.core 4 0 2012-03-17 09:47:59.220
!MESSAGE Project facet grails.app has not been defined. It is used in plugin com.springsource.sts.server.tc.core.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:49:33.896
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:49:33.898
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:49:33.902
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:49:33.904
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:51:28.153
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:51:28.155
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:51:28.156
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:51:28.158
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:53:46.368
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:53:46.372
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:53:46.377
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:53:46.381
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:54:40.534
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:54:40.535
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:54:40.538
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:54:40.539
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:56:04.097
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:56:04.139
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:56:04.144
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 09:56:04.148
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.jdt.core 4 1006 2012-03-17 10:39:46.931
!MESSAGE C:\Users\mknuts6173c\.m2\repository\org\springframework\spring-expression\3.0.6.RELEASE\spring-expression-3.0.6.RELEASE.jar is not on its project's build path

!ENTRY org.eclipse.jdt.core 4 1006 2012-03-17 10:39:46.937
!MESSAGE C:\Users\mknuts6173c\.m2\repository\org\springframework\spring-expression\3.0.6.RELEASE\spring-expression-3.0.6.RELEASE.jar is not on its project's build path

!ENTRY org.eclipse.jdt.core 4 1006 2012-03-17 10:39:46.938
!MESSAGE C:\Users\mknuts6173c\.m2\repository\org\springframework\spring-expression\3.0.6.RELEASE\spring-expression-3.0.6.RELEASE.jar is not on its project's build path

!ENTRY org.eclipse.jdt.core 4 1006 2012-03-17 10:39:46.940
!MESSAGE C:\Users\mknuts6173c\.m2\repository\org\springframework\spring-expression\3.0.6.RELEASE\spring-expression-3.0.6.RELEASE.jar is not on its project's build path

!ENTRY org.eclipse.jdt.core 4 1006 2012-03-17 10:39:46.941
!MESSAGE C:\Users\mknuts6173c\.m2\repository\org\springframework\spring-expression\3.0.6.RELEASE\spring-expression-3.0.6.RELEASE.jar is not on its project's build path

!ENTRY org.eclipse.jdt.core 4 1006 2012-03-17 10:39:46.942
!MESSAGE C:\Users\mknuts6173c\.m2\repository\org\springframework\spring-expression\3.0.6.RELEASE\spring-expression-3.0.6.RELEASE.jar is not on its project's build path

!ENTRY org.eclipse.jdt.core 4 1006 2012-03-17 10:39:46.943
!MESSAGE C:\Users\mknuts6173c\.m2\repository\org\springframework\spring-expression\3.0.6.RELEASE\spring-expression-3.0.6.RELEASE.jar is not on its project's build path

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 10:55:11.177
!MESSAGE File /demo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 10:55:11.178
!MESSAGE File /demo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 10:55:12.239
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 10:55:12.241
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 10:55:12.244
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 10:55:12.246
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 10:55:42.887
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 10:55:42.889
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 10:55:42.935
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-17 10:55:42.937
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1
!SESSION 2012-03-18 15:42:23.700 -----------------------------------------------
eclipse.buildId=2.9.0.201203011000-RELEASE
java.version=1.6.0_27
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-18 15:49:21.557
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-18 15:49:22.437
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-18 15:49:25.311
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-18 15:49:25.342
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-18 15:49:27.325
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-18 15:49:27.341
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.wst.common.project.facet.core 4 0 2012-03-19 07:27:38.388
!MESSAGE Project facet grails.app has not been defined. It is used in plugin com.springsource.sts.server.tc.core.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:52:18.917
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:52:18.933
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:52:36.782
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:52:36.829
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:52:52.254
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:52:52.254
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:53:19.505
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:53:19.505
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:53:27.542
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:53:27.542
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:53:53.541
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:53:53.591
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:54:05.589
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:54:05.599
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:54:22.943
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:54:22.963
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:54:24.493
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:54:24.513
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:54:56.864
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:54:56.864
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:54:56.880
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:54:56.880
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:55:34.665
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:55:34.675
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:55:34.675
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:55:34.675
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:58:05.036
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:58:05.038
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:58:05.039
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:58:05.041
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:58:07.571
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:58:07.571
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:58:07.571
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 07:58:07.571
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-19 07:59:10.792
!MESSAGE Could not read pom.xml

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-19 07:59:12.260
!MESSAGE Could not read pom.xml

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-19 07:59:20.046
!MESSAGE Failed to read Maven project: 1 problem was encountered while building the effective model
[FATAL] Non-parseable POM C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\pom.xml: expected name start and not < (position: TEXT seen ...<mockito.version>1.9.0</<... @26:28)  @ line 26, column 28
 for project  at C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\pom.xml

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-19 07:59:20.124
!MESSAGE Could not read pom.xml

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-19 08:00:10.906
!MESSAGE Failed to read Maven project: 1 problem was encountered while building the effective model
[FATAL] Non-parseable POM C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\pom.xml: expected name start and not < (position: TEXT seen ...<mockito.version>1.9.0</<... @26:28)  @ line 26, column 28
 for project  at C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\pom.xml

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-19 08:00:11.026
!MESSAGE Could not read pom.xml

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:02:36.861
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:02:36.861
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:02:36.861
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:02:36.861
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:02:43.515
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:02:43.515
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:02:43.531
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:02:43.531
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:03:47.156
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:03:47.172
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:03:47.172
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:03:47.172
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:05:53.884
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:05:53.886
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:05:53.888
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 08:05:53.890
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1
!SESSION 2012-03-19 08:50:21.749 -----------------------------------------------
eclipse.buildId=2.9.0.201203011000-RELEASE
java.version=1.6.0_27
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:39:04.878
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:39:04.908
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:39:04.908
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:39:04.908
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:39:30.602
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:39:30.602
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:39:30.612
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:39:30.612
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:39:35.375
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:39:35.375
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:39:35.375
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:39:35.385
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:40:07.012
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:40:07.012
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:40:07.012
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:40:07.012
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:40:22.597
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:40:22.607
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:40:22.607
!MESSAGE The POM for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-19 10:40:22.617
!MESSAGE Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-dependency-plugin:2.1: Plugin org.apache.maven.plugins:maven-dependency-plugin:2.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-dependency-plugin:jar:2.1
!SESSION 2012-03-20 10:11:51.286 -----------------------------------------------
eclipse.buildId=2.9.0.201203011000-RELEASE
java.version=1.6.0_27
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.ui.workbench 2 0 2012-03-20 10:12:35.700
!MESSAGE A handler conflict occurred.  This may disable some commands.
!SUBENTRY 1 org.eclipse.ui.workbench 2 0 2012-03-20 10:12:35.700
!MESSAGE Conflict for 'ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode':
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@3a54d2a3,
	expression=,sourcePriority=0)
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@16d0e940,
	expression=,sourcePriority=0)

!ENTRY org.eclipse.jdt.core 4 4 2012-03-20 10:16:17.758
!MESSAGE JavaBuilder handling CoreException
!STACK 1
org.eclipse.core.runtime.CoreException: File not found: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\classes\com\baselogic\util\ContextUtils.class.
	at org.eclipse.core.internal.filesystem.Policy.error(Policy.java:55)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:371)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:797)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsByteArray(Util.java:1132)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileCheck(IncrementalImageBuilder.java:883)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileContents(IncrementalImageBuilder.java:825)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(AbstractImageBuilder.java:823)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java:187)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:508)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:364)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:329)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:301)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:134)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:265)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:193)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Caused by: java.io.FileNotFoundException: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\classes\com\baselogic\util\ContextUtils.class (The system cannot find the path specified)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:120)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:362)
	... 26 more
!SUBENTRY 1 org.eclipse.core.filesystem 4 271 2012-03-20 10:16:17.759
!MESSAGE File not found: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\classes\com\baselogic\util\ContextUtils.class.
!STACK 0
java.io.FileNotFoundException: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\classes\com\baselogic\util\ContextUtils.class (The system cannot find the path specified)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:120)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:362)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:797)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsByteArray(Util.java:1132)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileCheck(IncrementalImageBuilder.java:883)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileContents(IncrementalImageBuilder.java:825)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(AbstractImageBuilder.java:823)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java:187)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:508)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:364)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:329)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:301)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:134)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:265)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:193)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-03-20 10:16:17.825
!MESSAGE JavaBuilder handling CoreException
!STACK 1
org.eclipse.core.runtime.CoreException: File not found: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\test-classes\com\baselogic\service\ExampleConfigurationTests.class.
	at org.eclipse.core.internal.filesystem.Policy.error(Policy.java:55)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:371)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:797)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsByteArray(Util.java:1132)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileCheck(IncrementalImageBuilder.java:883)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileContents(IncrementalImageBuilder.java:825)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(AbstractImageBuilder.java:823)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java:187)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:508)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:364)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:329)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:301)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:134)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:265)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:193)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Caused by: java.io.FileNotFoundException: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\test-classes\com\baselogic\service\ExampleConfigurationTests.class (The system cannot find the path specified)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:120)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:362)
	... 26 more
!SUBENTRY 1 org.eclipse.core.filesystem 4 271 2012-03-20 10:16:17.825
!MESSAGE File not found: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\test-classes\com\baselogic\service\ExampleConfigurationTests.class.
!STACK 0
java.io.FileNotFoundException: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\test-classes\com\baselogic\service\ExampleConfigurationTests.class (The system cannot find the path specified)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:120)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:362)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:797)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsByteArray(Util.java:1132)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileCheck(IncrementalImageBuilder.java:883)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileContents(IncrementalImageBuilder.java:825)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(AbstractImageBuilder.java:823)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java:187)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:508)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:364)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:329)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:301)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:134)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:265)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:193)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-03-20 10:16:17.840
!MESSAGE JavaBuilder handling CoreException
!STACK 1
org.eclipse.core.runtime.CoreException: File not found: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\test-classes\com\baselogic\service\OrderMockServiceTests.class.
	at org.eclipse.core.internal.filesystem.Policy.error(Policy.java:55)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:371)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:797)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsByteArray(Util.java:1132)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileCheck(IncrementalImageBuilder.java:883)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileContents(IncrementalImageBuilder.java:825)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(AbstractImageBuilder.java:823)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java:187)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:508)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:364)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:329)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:301)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:134)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:265)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:193)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Caused by: java.io.FileNotFoundException: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\test-classes\com\baselogic\service\OrderMockServiceTests.class (The system cannot find the path specified)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:120)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:362)
	... 26 more
!SUBENTRY 1 org.eclipse.core.filesystem 4 271 2012-03-20 10:16:17.841
!MESSAGE File not found: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\test-classes\com\baselogic\service\OrderMockServiceTests.class.
!STACK 0
java.io.FileNotFoundException: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\test-classes\com\baselogic\service\OrderMockServiceTests.class (The system cannot find the path specified)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:120)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:362)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:797)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsByteArray(Util.java:1132)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileCheck(IncrementalImageBuilder.java:883)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileContents(IncrementalImageBuilder.java:825)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(AbstractImageBuilder.java:823)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java:187)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:508)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:364)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:329)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:301)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:134)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:265)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:193)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-03-20 10:16:17.846
!MESSAGE JavaBuilder handling CoreException
!STACK 1
org.eclipse.core.runtime.CoreException: File not found: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\test-classes\com\baselogic\service\ExampleMockServiceTests.class.
	at org.eclipse.core.internal.filesystem.Policy.error(Policy.java:55)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:371)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:797)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsByteArray(Util.java:1132)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileCheck(IncrementalImageBuilder.java:883)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileContents(IncrementalImageBuilder.java:825)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(AbstractImageBuilder.java:823)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java:187)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:508)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:364)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:329)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:301)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:134)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:265)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:193)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Caused by: java.io.FileNotFoundException: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\test-classes\com\baselogic\service\ExampleMockServiceTests.class (The system cannot find the path specified)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:120)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:362)
	... 26 more
!SUBENTRY 1 org.eclipse.core.filesystem 4 271 2012-03-20 10:16:17.846
!MESSAGE File not found: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\test-classes\com\baselogic\service\ExampleMockServiceTests.class.
!STACK 0
java.io.FileNotFoundException: C:\usr\svn_workspaces\sandbox\SpringClass\SpringUtility\target\test-classes\com\baselogic\service\ExampleMockServiceTests.class (The system cannot find the path specified)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:120)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:362)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:797)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsByteArray(Util.java:1132)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileCheck(IncrementalImageBuilder.java:883)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileContents(IncrementalImageBuilder.java:825)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(AbstractImageBuilder.java:823)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java:187)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:508)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:364)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:329)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:301)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:134)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:265)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:193)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SESSION 2012-03-20 12:37:03.678 -----------------------------------------------
eclipse.buildId=2.9.0.201203011000-RELEASE
java.version=1.6.0_27
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.ui.workbench 2 0 2012-03-20 12:39:16.790
!MESSAGE A handler conflict occurred.  This may disable some commands.
!SUBENTRY 1 org.eclipse.ui.workbench 2 0 2012-03-20 12:39:16.790
!MESSAGE Conflict for 'ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode':
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@333903d0,
	expression=,sourcePriority=0)
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@642966f5,
	expression=,sourcePriority=0)

!ENTRY com.springsource.sts.ide.ui 1 0 2012-03-20 13:58:11.179
!MESSAGE About to uninstall: [] to make way for new version of m2eclipse
!SESSION 2012-03-20 14:00:16.503 -----------------------------------------------
eclipse.buildId=2.9.0.201203011000-RELEASE
java.version=1.6.0_27
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.ui.workbench 2 0 2012-03-20 14:01:34.905
!MESSAGE A handler conflict occurred.  This may disable some commands.
!SUBENTRY 1 org.eclipse.ui.workbench 2 0 2012-03-20 14:01:34.905
!MESSAGE Conflict for 'ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode':
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@306576aa,
	expression=,sourcePriority=0)
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@5551abb8,
	expression=,sourcePriority=0)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:43:51.948
!MESSAGE Unexpected error on close

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:43:55.340
!MESSAGE Unexpected error on close

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:43:56.223
!MESSAGE Unexpected error on close

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:43:59.836
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:43:59.872
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:44:15.013
!MESSAGE Unexpected error on close

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:44:15.165
!MESSAGE Unexpected error on close

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:44:15.327
!MESSAGE Unexpected error on close

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:44:15.732
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:44:16.083
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:44:16.089
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:44:21.062
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:44:21.112
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:47:20.531
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 21:47:20.543
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:00:35.948
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:00:35.957
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:00:37.735
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:00:37.890
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:02:54.384
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:02:54.387
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:02:55.697
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:02:55.701
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:03:07.385
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:03:07.387
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:03:08.817
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:03:08.821
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:03:19.239
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:03:19.249
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:03:28.841
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:03:28.850
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:04:09.374
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:04:09.384
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:04:11.086
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:04:11.089
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:05:25.920
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:05:25.922
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:17:49.376
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:17:50.870
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:17:50.890
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:17:53.854
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:17:53.859
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:23:14.320
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:23:17.242
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:23:17.263
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:23:18.945
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:23:18.948
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:23:37.388
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:23:37.467
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:23:37.586
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:25:32.638
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:25:32.650
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:26:07.112
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:26:07.124
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:26:18.797
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-20 22:26:18.873
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.ui 4 0 2012-03-21 11:22:42.714
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.text.BadLocationException)
	at org.eclipse.swt.SWT.error(SWT.java:4282)
	at org.eclipse.swt.SWT.error(SWT.java:4197)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4140)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
Caused by: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1055)
	at org.eclipse.jface.text.TreeLineTracker.nodeByLine(TreeLineTracker.java:301)
	at org.eclipse.jface.text.TreeLineTracker.getLineLength(TreeLineTracker.java:1129)
	at org.eclipse.jface.text.AbstractLineTracker.getLineLength(AbstractLineTracker.java:153)
	at org.eclipse.jface.text.AbstractDocument.getLineLength(AbstractDocument.java:908)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineLength(SynchronizableDocument.java:367)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:82)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:81)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.annotation.CoverageAnnotationModel.annotateLines$1(CoverageAnnotationModel.scala:81)
	at ecobertura.ui.annotation.CoverageAnnotationModel.ecobertura$ui$annotation$CoverageAnnotationModel$$initializeAnnotations(CoverageAnnotationModel.scala:74)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:65)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:62)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$class.fireSessionReset(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionModel.fireSessionReset(CoverageSessionModel.scala:38)
	at ecobertura.ui.views.session.CoverageSessionModel.addCoverageSession(CoverageSessionModel.scala:57)
	at ecobertura.ui.core.CoverageResultsUIListener$$anonfun$coverageRunCompleted$1.apply$mcV$sp(CoverageResultsUIListener.scala:57)
	at ecobertura.ui.util.Predef$$anon$3.run(Predef.scala:55)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 22 more

!ENTRY org.eclipse.ui 4 0 2012-03-21 11:23:19.808
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.text.BadLocationException)
	at org.eclipse.swt.SWT.error(SWT.java:4282)
	at org.eclipse.swt.SWT.error(SWT.java:4197)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4140)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
Caused by: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1055)
	at org.eclipse.jface.text.TreeLineTracker.nodeByLine(TreeLineTracker.java:301)
	at org.eclipse.jface.text.TreeLineTracker.getLineLength(TreeLineTracker.java:1129)
	at org.eclipse.jface.text.AbstractLineTracker.getLineLength(AbstractLineTracker.java:153)
	at org.eclipse.jface.text.AbstractDocument.getLineLength(AbstractDocument.java:908)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineLength(SynchronizableDocument.java:367)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:82)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:81)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.annotation.CoverageAnnotationModel.annotateLines$1(CoverageAnnotationModel.scala:81)
	at ecobertura.ui.annotation.CoverageAnnotationModel.ecobertura$ui$annotation$CoverageAnnotationModel$$initializeAnnotations(CoverageAnnotationModel.scala:74)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:65)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:62)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$class.fireSessionReset(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionModel.fireSessionReset(CoverageSessionModel.scala:38)
	at ecobertura.ui.views.session.CoverageSessionModel.addCoverageSession(CoverageSessionModel.scala:57)
	at ecobertura.ui.core.CoverageResultsUIListener$$anonfun$coverageRunCompleted$1.apply$mcV$sp(CoverageResultsUIListener.scala:57)
	at ecobertura.ui.util.Predef$$anon$3.run(Predef.scala:55)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 22 more

!ENTRY org.eclipse.ui 4 0 2012-03-21 12:22:52.298
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.text.BadLocationException)
	at org.eclipse.swt.SWT.error(SWT.java:4282)
	at org.eclipse.swt.SWT.error(SWT.java:4197)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4140)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
Caused by: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1055)
	at org.eclipse.jface.text.TreeLineTracker.nodeByLine(TreeLineTracker.java:301)
	at org.eclipse.jface.text.TreeLineTracker.getLineLength(TreeLineTracker.java:1129)
	at org.eclipse.jface.text.AbstractLineTracker.getLineLength(AbstractLineTracker.java:153)
	at org.eclipse.jface.text.AbstractDocument.getLineLength(AbstractDocument.java:908)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineLength(SynchronizableDocument.java:367)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:82)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:81)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.annotation.CoverageAnnotationModel.annotateLines$1(CoverageAnnotationModel.scala:81)
	at ecobertura.ui.annotation.CoverageAnnotationModel.ecobertura$ui$annotation$CoverageAnnotationModel$$initializeAnnotations(CoverageAnnotationModel.scala:74)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:65)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:62)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$class.fireSessionReset(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionModel.fireSessionReset(CoverageSessionModel.scala:38)
	at ecobertura.ui.views.session.CoverageSessionModel.addCoverageSession(CoverageSessionModel.scala:57)
	at ecobertura.ui.core.CoverageResultsUIListener$$anonfun$coverageRunCompleted$1.apply$mcV$sp(CoverageResultsUIListener.scala:57)
	at ecobertura.ui.util.Predef$$anon$3.run(Predef.scala:55)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 22 more

!ENTRY org.eclipse.ui 4 0 2012-03-21 13:22:34.659
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.text.BadLocationException)
	at org.eclipse.swt.SWT.error(SWT.java:4282)
	at org.eclipse.swt.SWT.error(SWT.java:4197)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4140)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
Caused by: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1055)
	at org.eclipse.jface.text.TreeLineTracker.nodeByLine(TreeLineTracker.java:301)
	at org.eclipse.jface.text.TreeLineTracker.getLineLength(TreeLineTracker.java:1129)
	at org.eclipse.jface.text.AbstractLineTracker.getLineLength(AbstractLineTracker.java:153)
	at org.eclipse.jface.text.AbstractDocument.getLineLength(AbstractDocument.java:908)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineLength(SynchronizableDocument.java:367)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:82)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:81)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.annotation.CoverageAnnotationModel.annotateLines$1(CoverageAnnotationModel.scala:81)
	at ecobertura.ui.annotation.CoverageAnnotationModel.ecobertura$ui$annotation$CoverageAnnotationModel$$initializeAnnotations(CoverageAnnotationModel.scala:74)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:65)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:62)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$class.fireSessionReset(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionModel.fireSessionReset(CoverageSessionModel.scala:38)
	at ecobertura.ui.views.session.CoverageSessionModel.addCoverageSession(CoverageSessionModel.scala:57)
	at ecobertura.ui.core.CoverageResultsUIListener$$anonfun$coverageRunCompleted$1.apply$mcV$sp(CoverageResultsUIListener.scala:57)
	at ecobertura.ui.util.Predef$$anon$3.run(Predef.scala:55)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 22 more

!ENTRY org.eclipse.ui 4 0 2012-03-21 13:23:11.767
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.text.BadLocationException)
	at org.eclipse.swt.SWT.error(SWT.java:4282)
	at org.eclipse.swt.SWT.error(SWT.java:4197)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4140)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
Caused by: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1055)
	at org.eclipse.jface.text.TreeLineTracker.nodeByLine(TreeLineTracker.java:301)
	at org.eclipse.jface.text.TreeLineTracker.getLineLength(TreeLineTracker.java:1129)
	at org.eclipse.jface.text.AbstractLineTracker.getLineLength(AbstractLineTracker.java:153)
	at org.eclipse.jface.text.AbstractDocument.getLineLength(AbstractDocument.java:908)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineLength(SynchronizableDocument.java:367)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:82)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:81)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.annotation.CoverageAnnotationModel.annotateLines$1(CoverageAnnotationModel.scala:81)
	at ecobertura.ui.annotation.CoverageAnnotationModel.ecobertura$ui$annotation$CoverageAnnotationModel$$initializeAnnotations(CoverageAnnotationModel.scala:74)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:65)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:62)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$class.fireSessionReset(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionModel.fireSessionReset(CoverageSessionModel.scala:38)
	at ecobertura.ui.views.session.CoverageSessionModel.addCoverageSession(CoverageSessionModel.scala:57)
	at ecobertura.ui.core.CoverageResultsUIListener$$anonfun$coverageRunCompleted$1.apply$mcV$sp(CoverageResultsUIListener.scala:57)
	at ecobertura.ui.util.Predef$$anon$3.run(Predef.scala:55)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 22 more

!ENTRY org.eclipse.ui 4 0 2012-03-21 13:24:26.885
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.text.BadLocationException)
	at org.eclipse.swt.SWT.error(SWT.java:4282)
	at org.eclipse.swt.SWT.error(SWT.java:4197)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4140)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
Caused by: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1055)
	at org.eclipse.jface.text.TreeLineTracker.nodeByLine(TreeLineTracker.java:301)
	at org.eclipse.jface.text.TreeLineTracker.getLineLength(TreeLineTracker.java:1129)
	at org.eclipse.jface.text.AbstractLineTracker.getLineLength(AbstractLineTracker.java:153)
	at org.eclipse.jface.text.AbstractDocument.getLineLength(AbstractDocument.java:908)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineLength(SynchronizableDocument.java:367)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:82)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:81)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.annotation.CoverageAnnotationModel.annotateLines$1(CoverageAnnotationModel.scala:81)
	at ecobertura.ui.annotation.CoverageAnnotationModel.ecobertura$ui$annotation$CoverageAnnotationModel$$initializeAnnotations(CoverageAnnotationModel.scala:74)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:65)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:62)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$class.fireSessionReset(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionModel.fireSessionReset(CoverageSessionModel.scala:38)
	at ecobertura.ui.views.session.CoverageSessionModel.addCoverageSession(CoverageSessionModel.scala:57)
	at ecobertura.ui.core.CoverageResultsUIListener$$anonfun$coverageRunCompleted$1.apply$mcV$sp(CoverageResultsUIListener.scala:57)
	at ecobertura.ui.util.Predef$$anon$3.run(Predef.scala:55)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 22 more

!ENTRY org.eclipse.ui 4 0 2012-03-21 13:31:21.515
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.text.BadLocationException)
	at org.eclipse.swt.SWT.error(SWT.java:4282)
	at org.eclipse.swt.SWT.error(SWT.java:4197)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4140)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
Caused by: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1055)
	at org.eclipse.jface.text.TreeLineTracker.nodeByLine(TreeLineTracker.java:301)
	at org.eclipse.jface.text.TreeLineTracker.getLineLength(TreeLineTracker.java:1129)
	at org.eclipse.jface.text.AbstractLineTracker.getLineLength(AbstractLineTracker.java:153)
	at org.eclipse.jface.text.AbstractDocument.getLineLength(AbstractDocument.java:908)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineLength(SynchronizableDocument.java:367)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:82)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:81)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.annotation.CoverageAnnotationModel.annotateLines$1(CoverageAnnotationModel.scala:81)
	at ecobertura.ui.annotation.CoverageAnnotationModel.ecobertura$ui$annotation$CoverageAnnotationModel$$initializeAnnotations(CoverageAnnotationModel.scala:74)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:65)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:62)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$class.fireSessionReset(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionModel.fireSessionReset(CoverageSessionModel.scala:38)
	at ecobertura.ui.views.session.CoverageSessionModel.addCoverageSession(CoverageSessionModel.scala:57)
	at ecobertura.ui.core.CoverageResultsUIListener$$anonfun$coverageRunCompleted$1.apply$mcV$sp(CoverageResultsUIListener.scala:57)
	at ecobertura.ui.util.Predef$$anon$3.run(Predef.scala:55)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 22 more

!ENTRY org.eclipse.ui 4 0 2012-03-21 13:36:02.031
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.text.BadLocationException)
	at org.eclipse.swt.SWT.error(SWT.java:4282)
	at org.eclipse.swt.SWT.error(SWT.java:4197)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4140)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
Caused by: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1055)
	at org.eclipse.jface.text.TreeLineTracker.nodeByLine(TreeLineTracker.java:301)
	at org.eclipse.jface.text.TreeLineTracker.getLineLength(TreeLineTracker.java:1129)
	at org.eclipse.jface.text.AbstractLineTracker.getLineLength(AbstractLineTracker.java:153)
	at org.eclipse.jface.text.AbstractDocument.getLineLength(AbstractDocument.java:908)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineLength(SynchronizableDocument.java:367)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:82)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:81)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.annotation.CoverageAnnotationModel.annotateLines$1(CoverageAnnotationModel.scala:81)
	at ecobertura.ui.annotation.CoverageAnnotationModel.ecobertura$ui$annotation$CoverageAnnotationModel$$initializeAnnotations(CoverageAnnotationModel.scala:74)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:65)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:62)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$class.fireSessionReset(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionModel.fireSessionReset(CoverageSessionModel.scala:38)
	at ecobertura.ui.views.session.CoverageSessionModel.addCoverageSession(CoverageSessionModel.scala:57)
	at ecobertura.ui.core.CoverageResultsUIListener$$anonfun$coverageRunCompleted$1.apply$mcV$sp(CoverageResultsUIListener.scala:57)
	at ecobertura.ui.util.Predef$$anon$3.run(Predef.scala:55)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 22 more

!ENTRY org.eclipse.core.resources 4 2 2012-03-21 14:38:50.405
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.core.resources".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.egit.core.Activator.getPluginId(Activator.java:72)
	at org.eclipse.egit.core.Activator$AutoShareProjects.doAutoShare(Activator.java:201)
	at org.eclipse.egit.core.Activator$AutoShareProjects.access$0(Activator.java:199)
	at org.eclipse.egit.core.Activator$AutoShareProjects$1.visit(Activator.java:215)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:69)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:49)
	at org.eclipse.egit.core.Activator$AutoShareProjects.resourceChanged(Activator.java:211)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:291)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:285)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:149)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:395)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1530)
	at org.eclipse.core.internal.resources.Marker.delete(Marker.java:71)
	at org.eclipse.debug.core.model.Breakpoint.delete(Breakpoint.java:117)
	at org.eclipse.wst.jsdt.debug.internal.core.JavaScriptPreferencesManager.stop(JavaScriptPreferencesManager.java:113)
	at org.eclipse.wst.jsdt.debug.internal.core.JavaScriptDebugPlugin.stop(JavaScriptDebugPlugin.java:187)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:771)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(BundleContextImpl.java:764)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:510)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.suspend(AbstractBundle.java:565)
	at org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1161)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.decFWSL(StartLevelManager.java:595)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:257)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.shutdown(StartLevelManager.java:215)
	at org.eclipse.osgi.framework.internal.core.InternalSystemBundle.suspend(InternalSystemBundle.java:284)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:691)
	at org.eclipse.osgi.framework.internal.core.Framework.close(Framework.java:598)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.shutdown(EclipseStarter.java:390)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
!SESSION 2012-03-21 14:46:56.116 -----------------------------------------------
eclipse.buildId=2.9.0.201203011000-RELEASE
java.version=1.6.0_27
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.ui.workbench 2 0 2012-03-21 15:07:37.298
!MESSAGE A handler conflict occurred.  This may disable some commands.
!SUBENTRY 1 org.eclipse.ui.workbench 2 0 2012-03-21 15:07:37.298
!MESSAGE Conflict for 'ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode':
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@15674a26,
	expression=,sourcePriority=0)
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@30350fc4,
	expression=,sourcePriority=0)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-22 10:38:04.246
!MESSAGE File /SpringUtility/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-22 10:38:04.247
!MESSAGE File /SpringUtility/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.ui 4 0 2012-03-22 11:33:01.807
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.text.BadLocationException)
	at org.eclipse.swt.SWT.error(SWT.java:4282)
	at org.eclipse.swt.SWT.error(SWT.java:4197)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4140)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
Caused by: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.ListLineTracker.getLineLength(ListLineTracker.java:126)
	at org.eclipse.jface.text.AbstractLineTracker.getLineLength(AbstractLineTracker.java:153)
	at org.eclipse.jface.text.AbstractDocument.getLineLength(AbstractDocument.java:908)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineLength(SynchronizableDocument.java:367)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:82)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:81)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.annotation.CoverageAnnotationModel.annotateLines$1(CoverageAnnotationModel.scala:81)
	at ecobertura.ui.annotation.CoverageAnnotationModel.ecobertura$ui$annotation$CoverageAnnotationModel$$initializeAnnotations(CoverageAnnotationModel.scala:74)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:65)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$2.apply(CoverageAnnotationModel.scala:62)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$$anonfun$fireSessionReset$1.apply(CoverageSessionResetPublisher.scala:39)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.views.session.CoverageSessionResetPublisher$class.fireSessionReset(CoverageSessionResetPublisher.scala:39)
	at ecobertura.ui.views.session.CoverageSessionModel.fireSessionReset(CoverageSessionModel.scala:38)
	at ecobertura.ui.views.session.CoverageSessionModel.addCoverageSession(CoverageSessionModel.scala:57)
	at ecobertura.ui.core.CoverageResultsUIListener$$anonfun$coverageRunCompleted$1.apply$mcV$sp(CoverageResultsUIListener.scala:57)
	at ecobertura.ui.util.Predef$$anon$3.run(Predef.scala:55)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 22 more

!ENTRY org.eclipse.ui.workbench 4 2 2012-03-22 16:38:03.207
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.ListLineTracker.getLineLength(ListLineTracker.java:126)
	at org.eclipse.jface.text.AbstractLineTracker.getLineLength(AbstractLineTracker.java:153)
	at org.eclipse.jface.text.AbstractDocument.getLineLength(AbstractDocument.java:908)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineLength(SynchronizableDocument.java:367)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:82)
	at ecobertura.ui.annotation.CoverageAnnotationModel$$anonfun$annotateLines$1$2.apply(CoverageAnnotationModel.scala:81)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at ecobertura.ui.annotation.CoverageAnnotationModel.annotateLines$1(CoverageAnnotationModel.scala:81)
	at ecobertura.ui.annotation.CoverageAnnotationModel.ecobertura$ui$annotation$CoverageAnnotationModel$$initializeAnnotations(CoverageAnnotationModel.scala:74)
	at ecobertura.ui.annotation.CoverageAnnotationModel.<init>(CoverageAnnotationModel.scala:56)
	at ecobertura.ui.annotation.CoverageAnnotationModel$.createForEditorDocument(CoverageAnnotationModel.scala:45)
	at ecobertura.ui.annotation.AnnotationModelAttacher.attach$1(AnnotationModelAttacher.scala:65)
	at ecobertura.ui.annotation.AnnotationModelAttacher.attachIfNecessary(AnnotationModelAttacher.scala:58)
	at ecobertura.ui.annotation.AnnotationModelAttacher.<init>(AnnotationModelAttacher.scala:40)
	at ecobertura.ui.annotation.AnnotationModelAttacher$.attachTo(AnnotationModelAttacher.scala:32)
	at ecobertura.ui.annotation.CoverageAnnotationModel$.attachTo(CoverageAnnotationModel.scala:42)
	at ecobertura.ui.editors.EditorsAnnotator.annotateEditor(EditorsAnnotator.scala:62)
	at ecobertura.ui.editors.WindowListener$$anon$1.partOpened(WindowListener.scala:28)
	at org.eclipse.ui.internal.PartListenerList2$5.run(PartListenerList2.java:130)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.runtime.Platform.run(Platform.java:888)
	at org.eclipse.ui.internal.PartListenerList2.fireEvent(PartListenerList2.java:55)
	at org.eclipse.ui.internal.PartListenerList2.firePartOpened(PartListenerList2.java:128)
	at org.eclipse.ui.internal.PartService.firePartOpened(PartService.java:280)
	at org.eclipse.ui.internal.WWinPartService$WWinListener.partOpened(WWinPartService.java:54)
	at org.eclipse.ui.internal.PartListenerList2$5.run(PartListenerList2.java:130)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.runtime.Platform.run(Platform.java:888)
	at org.eclipse.ui.internal.PartListenerList2.fireEvent(PartListenerList2.java:55)
	at org.eclipse.ui.internal.PartListenerList2.firePartOpened(PartListenerList2.java:128)
	at org.eclipse.ui.internal.PartService.firePartOpened(PartService.java:280)
	at org.eclipse.ui.internal.WorkbenchPagePartList.firePartOpened(WorkbenchPagePartList.java:35)
	at org.eclipse.ui.internal.PartList.partOpened(PartList.java:241)
	at org.eclipse.ui.internal.PartList.addPart(PartList.java:97)
	at org.eclipse.ui.internal.WorkbenchPage.partAdded(WorkbenchPage.java:1779)
	at org.eclipse.ui.internal.EditorAreaHelper.addEditor(EditorAreaHelper.java:217)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:808)
	at org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:707)
	at org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:666)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2942)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:368)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:174)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
!SESSION 2012-03-23 10:05:16.688 -----------------------------------------------
eclipse.buildId=2.9.0.201203011000-RELEASE
java.version=1.7.0_03
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.core.resources 2 10035 2012-03-23 10:07:15.786
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.osgi 2 0 2012-03-23 10:07:46.125
!MESSAGE While loading class "org.eclipse.m2e.core.project.IMavenProjectChangedListener", thread "Thread[Worker-15,5,main]" timed out waiting (5008ms) for thread "Thread[Worker-16,5,main]" to finish starting bundle "org.eclipse.m2e.core_1.0.200.20111228-1245 [571]". To avoid deadlock, thread "Thread[Worker-15,5,main]" is proceeding but "org.eclipse.m2e.core.project.IMavenProjectChangedListener" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: State change in progress for bundle "reference:file:plugins/org.eclipse.m2e.core_1.0.200.20111228-1245.jar" by thread "Worker-16".
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.beginStateChange(AbstractBundle.java:1087)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:297)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:440)
	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:268)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:463)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:400)
	at org.eclipse.osgi.internal.loader.SingleSourcePackage.loadClass(SingleSourcePackage.java:35)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:473)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:429)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:417)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Unknown Source)
	at java.lang.Class.getConstructor0(Unknown Source)
	at java.lang.Class.newInstance0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:166)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:679)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:381)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:299)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:440)
	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:268)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:463)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:400)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:476)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:429)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:417)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.eclipse.osgi.internal.loader.BundleLoader.loadClass(BundleLoader.java:345)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:229)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1207)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.jdt.core.JavaCore.computeClasspathContainerInitializer(JavaCore.java:2858)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainerInitializer(JavaCore.java:2834)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:2822)
	at org.eclipse.jdt.internal.core.JavaModelManager$11.run(JavaModelManager.java:2747)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers(JavaModelManager.java:2787)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:1871)
	at org.eclipse.jdt.core.JavaCore.initializeAfterLoad(JavaCore.java:3569)
	at org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob.run(InitializeAfterLoadJob.java:36)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Caused by: org.eclipse.osgi.framework.internal.core.AbstractBundle$BundleStatusException
	... 51 more
Root exception:
org.eclipse.osgi.framework.internal.core.AbstractBundle$BundleStatusException
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.beginStateChange(AbstractBundle.java:1087)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:297)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:440)
	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:268)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:463)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:400)
	at org.eclipse.osgi.internal.loader.SingleSourcePackage.loadClass(SingleSourcePackage.java:35)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:473)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:429)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:417)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Unknown Source)
	at java.lang.Class.getConstructor0(Unknown Source)
	at java.lang.Class.newInstance0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:166)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:679)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:381)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:299)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:440)
	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:268)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:463)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:400)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:476)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:429)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:417)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.eclipse.osgi.internal.loader.BundleLoader.loadClass(BundleLoader.java:345)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:229)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1207)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.jdt.core.JavaCore.computeClasspathContainerInitializer(JavaCore.java:2858)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainerInitializer(JavaCore.java:2834)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:2822)
	at org.eclipse.jdt.internal.core.JavaModelManager$11.run(JavaModelManager.java:2747)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers(JavaModelManager.java:2787)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:1871)
	at org.eclipse.jdt.core.JavaCore.initializeAfterLoad(JavaCore.java:3569)
	at org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob.run(InitializeAfterLoadJob.java:36)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.ui.workbench 2 0 2012-03-23 11:12:00.904
!MESSAGE A handler conflict occurred.  This may disable some commands.
!SUBENTRY 1 org.eclipse.ui.workbench 2 0 2012-03-23 11:12:00.904
!MESSAGE Conflict for 'ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode':
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@3cc906b,
	expression=,sourcePriority=0)
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@6b1d62bf,
	expression=,sourcePriority=0)

!ENTRY org.eclipse.jst.jsp.core 4 4 2012-03-23 11:12:20.899
!MESSAGE A workspace crash was detected. The previous session did not exit normally. Not using saved taglib indexes.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-23 11:56:18.674
!MESSAGE File /SpringUtility/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-23 11:56:18.676
!MESSAGE File /SpringUtility/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.ui 4 4 2012-03-23 15:14:55.058
!MESSAGE Save All Failed

!ENTRY org.eclipse.ui 2 0 2012-03-23 15:14:55.063
!MESSAGE Save All Failed
!STACK 0
java.lang.IllegalArgumentException: Illegal value: -1
	at org.eclipse.core.internal.resources.Resource.revertModificationStamp(Resource.java:1702)
	at org.eclipse.core.internal.filebuffers.ResourceTextFileBuffer.commitFileBufferContent(ResourceTextFileBuffer.java:396)
	at org.eclipse.core.internal.filebuffers.ResourceFileBuffer.commit(ResourceFileBuffer.java:325)
	at org.eclipse.jdt.internal.ui.javaeditor.DocumentAdapter.save(DocumentAdapter.java:472)
	at org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:123)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:793)
	at org.eclipse.jdt.internal.core.CompilationUnit.commitWorkingCopy(CompilationUnit.java:391)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1377)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.execute(CompilationUnitDocumentProvider.java:1450)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:132)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:69)
	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:106)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:118)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:75)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:65)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:456)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:772)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5048)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1247)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1301)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7177)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:214)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:349)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:1269)
	at org.eclipse.ui.internal.SaveableHelper$5.run(SaveableHelper.java:277)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:759)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:756)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2649)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:285)
	at org.eclipse.ui.internal.EditorManager.saveAll(EditorManager.java:1279)
	at org.eclipse.ui.internal.Workbench$19.run(Workbench.java:1189)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.Workbench.saveAllEditors(Workbench.java:1138)
	at org.eclipse.jdt.ui.refactoring.RefactoringSaveHelper.saveEditors(RefactoringSaveHelper.java:137)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.canActivate(RefactoringStarter.java:56)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:33)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:80)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:283)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.performDrop(SelectionTransferDropAdapter.java:220)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:246)
	at org.eclipse.jface.util.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:211)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.util.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:209)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:90)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:774)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:456)
	at org.eclipse.swt.dnd.DropTarget.Drop_64(DropTarget.java:392)
	at org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:260)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:119)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:363)
	at org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:289)
	at org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:172)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.ui 4 4 2012-03-23 15:15:06.020
!MESSAGE Save All Failed

!ENTRY org.eclipse.ui 2 0 2012-03-23 15:15:06.024
!MESSAGE Save All Failed
!STACK 0
java.lang.IllegalArgumentException: Illegal value: -1
	at org.eclipse.core.internal.resources.Resource.revertModificationStamp(Resource.java:1702)
	at org.eclipse.core.internal.filebuffers.ResourceTextFileBuffer.commitFileBufferContent(ResourceTextFileBuffer.java:396)
	at org.eclipse.core.internal.filebuffers.ResourceFileBuffer.commit(ResourceFileBuffer.java:325)
	at org.eclipse.jdt.internal.ui.javaeditor.DocumentAdapter.save(DocumentAdapter.java:472)
	at org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:123)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:793)
	at org.eclipse.jdt.internal.core.CompilationUnit.commitWorkingCopy(CompilationUnit.java:391)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1377)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.execute(CompilationUnitDocumentProvider.java:1450)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:132)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:69)
	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:106)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:118)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:75)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:65)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:456)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:772)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5048)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1247)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1301)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7177)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:214)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:349)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:1269)
	at org.eclipse.ui.internal.SaveableHelper$5.run(SaveableHelper.java:277)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:759)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:756)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2649)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:285)
	at org.eclipse.ui.internal.EditorManager.saveAll(EditorManager.java:1279)
	at org.eclipse.ui.internal.Workbench$19.run(Workbench.java:1189)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.Workbench.saveAllEditors(Workbench.java:1138)
	at org.eclipse.jdt.ui.refactoring.RefactoringSaveHelper.saveEditors(RefactoringSaveHelper.java:137)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.canActivate(RefactoringStarter.java:56)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:33)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:80)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:283)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.performDrop(SelectionTransferDropAdapter.java:220)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:246)
	at org.eclipse.jface.util.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:211)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.util.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:209)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:90)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:774)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:456)
	at org.eclipse.swt.dnd.DropTarget.Drop_64(DropTarget.java:392)
	at org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:260)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:119)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:363)
	at org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:289)
	at org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:172)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.ui.workbench 4 0 2012-03-23 15:15:09.579
!MESSAGE WARNING: Blocked recursive attempt to close part org.eclipse.jdt.ui.CompilationUnitEditor while still in the middle of activating it
!STACK 0
java.lang.RuntimeException: WARNING: Blocked recursive attempt to close part org.eclipse.jdt.ui.CompilationUnitEditor while still in the middle of activating it
	at org.eclipse.ui.internal.WorkbenchPage.closeEditors(WorkbenchPage.java:1378)
	at org.eclipse.ui.internal.WorkbenchPage.closeEditor(WorkbenchPage.java:1514)
	at org.eclipse.ui.internal.EditorPane.doHide(EditorPane.java:61)
	at org.eclipse.ui.internal.PartStack.close(PartStack.java:537)
	at org.eclipse.ui.internal.EditorStack.close(EditorStack.java:206)
	at org.eclipse.ui.internal.PartStack$1.close(PartStack.java:120)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation$1.handleEvent(TabbedStackPresentation.java:83)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:269)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:278)
	at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder.access$1(DefaultTabFolder.java:1)
	at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder$1.closeButtonPressed(DefaultTabFolder.java:71)
	at org.eclipse.ui.internal.presentations.PaneFolder.notifyCloseListeners(PaneFolder.java:631)
	at org.eclipse.ui.internal.presentations.PaneFolder$3.close(PaneFolder.java:206)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1599)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:261)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:825)
	at org.eclipse.jface.window.Window.open(Window.java:801)
	at org.eclipse.jface.dialogs.MessageDialog.open(MessageDialog.java:334)
	at org.eclipse.jface.dialogs.MessageDialog.open(MessageDialog.java:364)
	at org.eclipse.jface.dialogs.MessageDialog.openQuestion(MessageDialog.java:463)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handleEditorInputChanged(AbstractTextEditor.java:4757)
	at org.eclipse.ui.texteditor.StatusTextEditor.handleEditorInputChanged(StatusTextEditor.java:267)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handleEditorInputChanged(AbstractDecoratedTextEditor.java:1474)
	at org.eclipse.ui.texteditor.AbstractTextEditor.sanityCheckState(AbstractTextEditor.java:4887)
	at org.eclipse.ui.texteditor.StatusTextEditor.sanityCheckState(StatusTextEditor.java:257)
	at org.eclipse.ui.texteditor.AbstractTextEditor.safelySanityCheckState(AbstractTextEditor.java:4865)
	at org.eclipse.ui.texteditor.AbstractTextEditor$ActivationListener.handleActivation(AbstractTextEditor.java:984)
	at org.eclipse.ui.texteditor.AbstractTextEditor$ActivationListener.partActivated(AbstractTextEditor.java:941)
	at org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java:72)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.runtime.Platform.run(Platform.java:888)
	at org.eclipse.ui.internal.PartListenerList.fireEvent(PartListenerList.java:57)
	at org.eclipse.ui.internal.PartListenerList.firePartActivated(PartListenerList.java:70)
	at org.eclipse.ui.internal.PartService.firePartActivated(PartService.java:187)
	at org.eclipse.ui.internal.PartService.setActivePart(PartService.java:306)
	at org.eclipse.ui.internal.WWinPartService.updateActivePart(WWinPartService.java:134)
	at org.eclipse.ui.internal.WWinPartService.access$0(WWinPartService.java:125)
	at org.eclipse.ui.internal.WWinPartService$WWinListener.partDeactivated(WWinPartService.java:50)
	at org.eclipse.ui.internal.PartListenerList2$4.run(PartListenerList2.java:115)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.runtime.Platform.run(Platform.java:888)
	at org.eclipse.ui.internal.PartListenerList2.fireEvent(PartListenerList2.java:55)
	at org.eclipse.ui.internal.PartListenerList2.firePartDeactivated(PartListenerList2.java:113)
	at org.eclipse.ui.internal.PartService.firePartDeactivated(PartService.java:242)
	at org.eclipse.ui.internal.PartService.setActivePart(PartService.java:300)
	at org.eclipse.ui.internal.WorkbenchPagePartList.fireActivePartChanged(WorkbenchPagePartList.java:57)
	at org.eclipse.ui.internal.PartList.setActivePart(PartList.java:136)
	at org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:3636)
	at org.eclipse.ui.internal.WorkbenchPage.requestActivation(WorkbenchPage.java:3159)
	at org.eclipse.ui.internal.PartPane.requestActivation(PartPane.java:279)
	at org.eclipse.ui.internal.EditorPane.requestActivation(EditorPane.java:98)
	at org.eclipse.ui.internal.presentations.PresentablePart.setFocus(PresentablePart.java:192)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation$1.handleEvent(TabbedStackPresentation.java:94)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:269)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:274)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.handleMouseDown(AbstractTabFolder.java:344)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder$3.mouseDown(AbstractTabFolder.java:78)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:191)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.ui 4 4 2012-03-23 15:15:17.051
!MESSAGE Save All Failed

!ENTRY org.eclipse.ui 2 0 2012-03-23 15:15:17.053
!MESSAGE Save All Failed
!STACK 0
java.lang.IllegalArgumentException: Illegal value: -1
	at org.eclipse.core.internal.resources.Resource.revertModificationStamp(Resource.java:1702)
	at org.eclipse.core.internal.filebuffers.ResourceTextFileBuffer.commitFileBufferContent(ResourceTextFileBuffer.java:396)
	at org.eclipse.core.internal.filebuffers.ResourceFileBuffer.commit(ResourceFileBuffer.java:325)
	at org.eclipse.jdt.internal.ui.javaeditor.DocumentAdapter.save(DocumentAdapter.java:472)
	at org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:123)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:793)
	at org.eclipse.jdt.internal.core.CompilationUnit.commitWorkingCopy(CompilationUnit.java:391)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1377)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.execute(CompilationUnitDocumentProvider.java:1450)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:132)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:69)
	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:106)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:118)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:75)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:65)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:456)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:772)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5048)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1247)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1301)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7177)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:214)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:349)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:1269)
	at org.eclipse.ui.internal.SaveableHelper$5.run(SaveableHelper.java:277)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:759)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:756)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2649)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:285)
	at org.eclipse.ui.internal.EditorManager.saveAll(EditorManager.java:1279)
	at org.eclipse.ui.internal.Workbench$19.run(Workbench.java:1189)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.Workbench.saveAllEditors(Workbench.java:1138)
	at org.eclipse.jdt.ui.refactoring.RefactoringSaveHelper.saveEditors(RefactoringSaveHelper.java:137)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.canActivate(RefactoringStarter.java:56)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:33)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:80)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:283)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.performDrop(SelectionTransferDropAdapter.java:220)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:246)
	at org.eclipse.jface.util.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:211)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.util.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:209)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:90)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:774)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:456)
	at org.eclipse.swt.dnd.DropTarget.Drop_64(DropTarget.java:392)
	at org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:260)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:119)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:363)
	at org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:289)
	at org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:172)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.jdt.core 4 0 2012-03-23 17:21:01.083
!MESSAGE Code assist internal error
!STACK 0
org.eclipse.jdt.internal.compiler.problem.AbortCompilation: 
	at org.eclipse.jdt.internal.core.CancelableNameEnvironment.checkCanceled(CancelableNameEnvironment.java:34)
	at org.eclipse.jdt.internal.core.CancelableNameEnvironment.findType(CancelableNameEnvironment.java:49)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:113)
	at org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:49)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:122)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass(BinaryTypeBinding.java:1140)
	at org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isSuperclassOf(ReferenceBinding.java:1203)
	at org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith0(ReferenceBinding.java:1092)
	at org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith(ReferenceBinding.java:1039)
	at org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getVisibleElements(InternalExtendedCompletionContext.java:386)
	at org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getVisibleElements(InternalCompletionContext.java:318)
	at org.eclipse.jdt.internal.ui.text.java.ParameterGuessingProposal.getAssignableElements(ParameterGuessingProposal.java:110)
	at org.eclipse.jdt.internal.ui.text.java.ParameterGuessingProposal.guessParameters(ParameterGuessingProposal.java:293)
	at org.eclipse.jdt.internal.ui.text.java.ParameterGuessingProposal.computeGuessingCompletion(ParameterGuessingProposal.java:228)
	at org.eclipse.jdt.internal.ui.text.java.ParameterGuessingProposal.computeReplacementString(ParameterGuessingProposal.java:194)
	at org.eclipse.jdt.internal.ui.text.java.LazyJavaCompletionProposal.getReplacementString(LazyJavaCompletionProposal.java:330)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.apply(AbstractJavaCompletionProposal.java:364)
	at org.eclipse.jdt.internal.ui.text.java.JavaMethodCompletionProposal.apply(JavaMethodCompletionProposal.java:57)
	at org.eclipse.jdt.internal.ui.text.java.ParameterGuessingProposal.apply(ParameterGuessingProposal.java:121)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.apply(AbstractJavaCompletionProposal.java:477)
	at org.eclipse.jdt.internal.ui.text.java.LazyJavaCompletionProposal.apply(LazyJavaCompletionProposal.java:488)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:930)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:881)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$27(CompletionProposalPopup.java:877)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$5.widgetDefaultSelected(CompletionProposalPopup.java:657)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:119)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.equinox.p2.touchpoint.natives 2 0 2012-03-23 21:21:34.372
!MESSAGE Could not remove temporary backup directory (it is safe to manually delete it and its contents): C:\Users\MKNUTS~1\AppData\Local\Temp\com.springsource.sts.ide_26c84967a7a0_c0a8016cc749
!SESSION 2012-03-23 21:26:14.559 -----------------------------------------------
eclipse.buildId=2.9.1.201203221000-RELEASE
java.version=1.7.0_03
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.ui.workbench 2 0 2012-03-24 06:13:48.006
!MESSAGE A handler conflict occurred.  This may disable some commands.
!SUBENTRY 1 org.eclipse.ui.workbench 2 0 2012-03-24 06:13:48.006
!MESSAGE Conflict for 'ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode':
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@56d5c2ab,
	expression=,sourcePriority=0)
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@6bdf9516,
	expression=,sourcePriority=0)
!SESSION 2012-03-26 07:30:20.423 -----------------------------------------------
eclipse.buildId=2.9.1.201203221000-RELEASE
java.version=1.7.0_03
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -data C:\usr\SYNCH\projects\Git-Hub\SpringCertification -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.ui.workbench 2 0 2012-03-26 08:30:06.123
!MESSAGE A handler conflict occurred.  This may disable some commands.
!SUBENTRY 1 org.eclipse.ui.workbench 2 0 2012-03-26 08:30:06.123
!MESSAGE Conflict for 'ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode':
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@67543738,
	expression=,sourcePriority=0)
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@49f57287,
	expression=,sourcePriority=0)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-26 08:40:03.455
!MESSAGE Could not read pom.xml
!SESSION 2012-03-26 08:46:28.695 -----------------------------------------------
eclipse.buildId=2.9.1.201203221000-RELEASE
java.version=1.7.0_03
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -data C:\usr\SYNCH\projects\Git-Hub\SpringCertification -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.ui.workbench 2 0 2012-03-26 08:46:40.743
!MESSAGE A handler conflict occurred.  This may disable some commands.
!SUBENTRY 1 org.eclipse.ui.workbench 2 0 2012-03-26 08:46:40.743
!MESSAGE Conflict for 'ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode':
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@3a0557b7,
	expression=,sourcePriority=0)
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@34c1cd23,
	expression=,sourcePriority=0)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-26 08:53:45.061
!MESSAGE File /SpringUtility/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-26 08:53:45.065
!MESSAGE File /SpringUtility/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.ltk.core.refactoring 4 10009 2012-03-26 17:03:39.506
!MESSAGE Participant 'org.eclipse.jdt.debug.refactoring.breakpoint.projectRename' removed due to the following exception
!STACK 1
org.eclipse.debug.core.DebugException: Resource '/SpringCore/java/com/baselogic/service/OrderMockServiceTests.java' does not exist.
	at org.eclipse.debug.core.model.Breakpoint.run(Breakpoint.java:331)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.<init>(JavaLineBreakpoint.java:153)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.<init>(JavaLineBreakpoint.java:132)
	at org.eclipse.jdt.debug.core.JDIDebugModel.createLineBreakpoint(JDIDebugModel.java:274)
	at org.eclipse.jdt.internal.debug.core.refactoring.LineBreakpointTypeChange.perform(LineBreakpointTypeChange.java:59)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:278)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:306)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:92)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:218)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)
!SUBENTRY 1 org.eclipse.core.resources 4 368 2012-03-26 17:03:39.507
!MESSAGE Resource '/SpringCore/java/com/baselogic/service/OrderMockServiceTests.java' does not exist.

!ENTRY org.eclipse.ltk.ui.refactoring 4 10000 2012-03-26 17:03:40.066
!MESSAGE Internal Error
!STACK 1
org.eclipse.debug.core.DebugException: Resource '/SpringCore/java/com/baselogic/service/OrderMockServiceTests.java' does not exist.
	at org.eclipse.debug.core.model.Breakpoint.run(Breakpoint.java:331)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.<init>(JavaLineBreakpoint.java:153)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.<init>(JavaLineBreakpoint.java:132)
	at org.eclipse.jdt.debug.core.JDIDebugModel.createLineBreakpoint(JDIDebugModel.java:274)
	at org.eclipse.jdt.internal.debug.core.refactoring.LineBreakpointTypeChange.perform(LineBreakpointTypeChange.java:59)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:278)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:306)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:92)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:218)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)
!SUBENTRY 1 org.eclipse.core.resources 4 368 2012-03-26 17:03:40.066
!MESSAGE Resource '/SpringCore/java/com/baselogic/service/OrderMockServiceTests.java' does not exist.

!ENTRY org.eclipse.core.resources 4 368 2012-03-26 17:03:40.068
!MESSAGE Resource '/SpringCore/java/com/baselogic/service/OrderMockServiceTests.java' does not exist.

!ENTRY org.eclipse.wst.sse.ui 4 4 2012-03-26 17:22:46.978
!MESSAGE Preference node "org.eclipse.wst.validation" has been removed.
!STACK 0
java.lang.IllegalStateException: Preference node "org.eclipse.wst.validation" has been removed.
	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:193)
	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:601)
	at org.eclipse.core.internal.preferences.EclipsePreferences.getInt(EclipsePreferences.java:551)
	at org.eclipse.wst.validation.internal.PreferencesWrapper$PreferencesWrapperPersistent.getInt(PreferencesWrapper.java:124)
	at org.eclipse.wst.validation.internal.ValPrefManagerProject.loadProjectPreferences(ValPrefManagerProject.java:204)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:611)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:592)
	at org.eclipse.wst.validation.ValidationFramework.getProjectSettings(ValidationFramework.java:298)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.setDocument(ValidatorStrategy.java:320)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.setDocument(DocumentRegionProcessor.java:353)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.setDocument(StructuredRegionProcessor.java:284)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.handleInputDocumentChanged(DirtyRegionProcessor.java:555)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$TextInputListener.inputDocumentChanged(DirtyRegionProcessor.java:167)
	at org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2888)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2937)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:640)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:376)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.setDocument(StructuredTextViewer.java:805)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:588)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:4030)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3558)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:54)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:440)
	at org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1508)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:241)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:325)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:211)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:308)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.createSourcePage(AbstractConfigEditor.java:324)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.addPages(AbstractConfigEditor.java:243)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:289)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2945)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.ui 4 4 2012-03-26 20:31:03.698
!MESSAGE Preference node "org.eclipse.wst.validation" has been removed.
!STACK 0
java.lang.IllegalStateException: Preference node "org.eclipse.wst.validation" has been removed.
	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:193)
	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:601)
	at org.eclipse.core.internal.preferences.EclipsePreferences.getInt(EclipsePreferences.java:551)
	at org.eclipse.wst.validation.internal.PreferencesWrapper$PreferencesWrapperPersistent.getInt(PreferencesWrapper.java:124)
	at org.eclipse.wst.validation.internal.ValPrefManagerProject.loadProjectPreferences(ValPrefManagerProject.java:204)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:611)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:592)
	at org.eclipse.wst.validation.ValidationFramework.getProjectSettings(ValidationFramework.java:298)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.setDocument(ValidatorStrategy.java:320)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.setDocument(DocumentRegionProcessor.java:353)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.setDocument(StructuredRegionProcessor.java:284)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.handleInputDocumentChanged(DirtyRegionProcessor.java:555)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$TextInputListener.inputDocumentChanged(DirtyRegionProcessor.java:167)
	at org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2888)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2937)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:640)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:376)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.setDocument(StructuredTextViewer.java:805)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:588)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:4030)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3558)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:54)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:440)
	at org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1508)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:241)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:325)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:211)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:308)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.createSourcePage(AbstractConfigEditor.java:324)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.addPages(AbstractConfigEditor.java:243)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:313)
	at org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:180)
	at org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:270)
	at org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:473)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1245)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1198)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1597)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:493)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:103)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:479)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:112)
	at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63)
	at org.eclipse.ui.internal.EditorAreaHelper.addToLayout(EditorAreaHelper.java:225)
	at org.eclipse.ui.internal.EditorAreaHelper.addEditor(EditorAreaHelper.java:213)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:808)
	at org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:707)
	at org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:666)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2942)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-26 20:43:02.197
!MESSAGE CatalogItem org.eclipse.m2e.discovery.lifecyclemapping.m2e-egit does not contain lifecycle mapping metadata

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-26 20:43:02.199
!MESSAGE CatalogItem org.eclipse.m2e.discovery.lifecyclemapping.m2e-cvs does not contain lifecycle mapping metadata

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-26 20:43:02.201
!MESSAGE CatalogItem org.eclipse.m2e.discovery.lifecyclemapping.m2e-subversive does not contain lifecycle mapping metadata

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-26 20:43:02.204
!MESSAGE CatalogItem org.eclipse.m2e.discovery.lifecyclemapping.m2e-subclipse does not contain lifecycle mapping metadata

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-26 20:43:02.206
!MESSAGE CatalogItem org.eclipse.m2e.discovery.maven-runtime-3.0.3 does not contain lifecycle mapping metadata

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-26 20:43:02.223
!MESSAGE CatalogItem org.codehaus.groovy.m2eclipse does not contain lifecycle mapping metadata

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-26 20:43:07.149
!MESSAGE File /SpringAop/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-26 20:43:07.151
!MESSAGE File /SpringAop/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.wst.sse.ui 4 4 2012-03-26 22:02:21.722
!MESSAGE Preference node "org.eclipse.wst.validation" has been removed.
!STACK 0
java.lang.IllegalStateException: Preference node "org.eclipse.wst.validation" has been removed.
	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:193)
	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:601)
	at org.eclipse.core.internal.preferences.EclipsePreferences.getInt(EclipsePreferences.java:551)
	at org.eclipse.wst.validation.internal.PreferencesWrapper$PreferencesWrapperPersistent.getInt(PreferencesWrapper.java:124)
	at org.eclipse.wst.validation.internal.ValPrefManagerProject.loadProjectPreferences(ValPrefManagerProject.java:204)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:611)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:592)
	at org.eclipse.wst.validation.ValidationFramework.getProjectSettings(ValidationFramework.java:298)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.setDocument(ValidatorStrategy.java:320)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.setDocument(DocumentRegionProcessor.java:353)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.setDocument(StructuredRegionProcessor.java:284)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.handleInputDocumentChanged(DirtyRegionProcessor.java:555)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$TextInputListener.inputDocumentChanged(DirtyRegionProcessor.java:167)
	at org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2888)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2937)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:640)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:376)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.setDocument(StructuredTextViewer.java:805)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:588)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:4030)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3558)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:54)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:440)
	at org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1508)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:241)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:325)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:211)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:308)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.createSourcePage(AbstractConfigEditor.java:324)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.addPages(AbstractConfigEditor.java:243)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:289)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2945)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.ui 4 4 2012-03-26 22:20:51.899
!MESSAGE Preference node "org.eclipse.wst.validation" has been removed.
!STACK 0
java.lang.IllegalStateException: Preference node "org.eclipse.wst.validation" has been removed.
	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:193)
	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:601)
	at org.eclipse.core.internal.preferences.EclipsePreferences.getInt(EclipsePreferences.java:551)
	at org.eclipse.wst.validation.internal.PreferencesWrapper$PreferencesWrapperPersistent.getInt(PreferencesWrapper.java:124)
	at org.eclipse.wst.validation.internal.ValPrefManagerProject.loadProjectPreferences(ValPrefManagerProject.java:204)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:611)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:592)
	at org.eclipse.wst.validation.ValidationFramework.getProjectSettings(ValidationFramework.java:298)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.setDocument(ValidatorStrategy.java:320)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.setDocument(DocumentRegionProcessor.java:353)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.setDocument(StructuredRegionProcessor.java:284)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.handleInputDocumentChanged(DirtyRegionProcessor.java:555)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$TextInputListener.inputDocumentChanged(DirtyRegionProcessor.java:167)
	at org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2888)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2937)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:640)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:376)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.setDocument(StructuredTextViewer.java:805)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:588)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:4030)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3558)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:54)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:440)
	at org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1508)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:241)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:325)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:211)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:308)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.createSourcePage(AbstractConfigEditor.java:324)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.addPages(AbstractConfigEditor.java:243)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:289)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2945)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.ui 4 4 2012-03-26 22:20:58.486
!MESSAGE Preference node "org.eclipse.wst.validation" has been removed.
!STACK 0
java.lang.IllegalStateException: Preference node "org.eclipse.wst.validation" has been removed.
	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:193)
	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:601)
	at org.eclipse.core.internal.preferences.EclipsePreferences.getInt(EclipsePreferences.java:551)
	at org.eclipse.wst.validation.internal.PreferencesWrapper$PreferencesWrapperPersistent.getInt(PreferencesWrapper.java:124)
	at org.eclipse.wst.validation.internal.ValPrefManagerProject.loadProjectPreferences(ValPrefManagerProject.java:204)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:611)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:592)
	at org.eclipse.wst.validation.ValidationFramework.getProjectSettings(ValidationFramework.java:298)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.setDocument(ValidatorStrategy.java:320)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.setDocument(DocumentRegionProcessor.java:353)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.setDocument(StructuredRegionProcessor.java:284)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.handleInputDocumentChanged(DirtyRegionProcessor.java:555)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$TextInputListener.inputDocumentChanged(DirtyRegionProcessor.java:167)
	at org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2888)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2937)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:640)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:376)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.setDocument(StructuredTextViewer.java:805)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:588)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:4030)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3558)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:54)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:440)
	at org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1508)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:241)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:325)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:211)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:308)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.createSourcePage(AbstractConfigEditor.java:324)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.addPages(AbstractConfigEditor.java:243)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:289)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2945)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.ui 4 4 2012-03-26 22:26:57.461
!MESSAGE Preference node "org.eclipse.wst.validation" has been removed.
!STACK 0
java.lang.IllegalStateException: Preference node "org.eclipse.wst.validation" has been removed.
	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:193)
	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:601)
	at org.eclipse.core.internal.preferences.EclipsePreferences.getInt(EclipsePreferences.java:551)
	at org.eclipse.wst.validation.internal.PreferencesWrapper$PreferencesWrapperPersistent.getInt(PreferencesWrapper.java:124)
	at org.eclipse.wst.validation.internal.ValPrefManagerProject.loadProjectPreferences(ValPrefManagerProject.java:204)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:611)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:592)
	at org.eclipse.wst.validation.ValidationFramework.getProjectSettings(ValidationFramework.java:298)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.setDocument(ValidatorStrategy.java:320)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.setDocument(DocumentRegionProcessor.java:353)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.setDocument(StructuredRegionProcessor.java:284)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.handleInputDocumentChanged(DirtyRegionProcessor.java:555)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$TextInputListener.inputDocumentChanged(DirtyRegionProcessor.java:167)
	at org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2888)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2937)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:640)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:376)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.setDocument(StructuredTextViewer.java:805)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:588)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:4030)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3558)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:54)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:440)
	at org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1508)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:241)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:325)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:211)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:308)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.createSourcePage(AbstractConfigEditor.java:324)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.addPages(AbstractConfigEditor.java:243)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:313)
	at org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:180)
	at org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:270)
	at org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:473)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1245)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1198)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1597)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:493)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:103)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:479)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:112)
	at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63)
	at org.eclipse.ui.internal.EditorAreaHelper.addToLayout(EditorAreaHelper.java:225)
	at org.eclipse.ui.internal.EditorAreaHelper.addEditor(EditorAreaHelper.java:213)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:808)
	at org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:707)
	at org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:666)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2942)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.ui 4 4 2012-03-26 22:27:18.607
!MESSAGE Preference node "org.eclipse.wst.validation" has been removed.
!STACK 0
java.lang.IllegalStateException: Preference node "org.eclipse.wst.validation" has been removed.
	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:193)
	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:601)
	at org.eclipse.core.internal.preferences.EclipsePreferences.getInt(EclipsePreferences.java:551)
	at org.eclipse.wst.validation.internal.PreferencesWrapper$PreferencesWrapperPersistent.getInt(PreferencesWrapper.java:124)
	at org.eclipse.wst.validation.internal.ValPrefManagerProject.loadProjectPreferences(ValPrefManagerProject.java:204)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:611)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:592)
	at org.eclipse.wst.validation.ValidationFramework.getProjectSettings(ValidationFramework.java:298)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.setDocument(ValidatorStrategy.java:320)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.setDocument(DocumentRegionProcessor.java:353)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.setDocument(StructuredRegionProcessor.java:284)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.handleInputDocumentChanged(DirtyRegionProcessor.java:555)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$TextInputListener.inputDocumentChanged(DirtyRegionProcessor.java:167)
	at org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2888)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2937)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:640)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:376)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.setDocument(StructuredTextViewer.java:805)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:588)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:4030)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3558)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:54)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:440)
	at org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1508)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:241)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:325)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:211)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:308)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.createSourcePage(AbstractConfigEditor.java:324)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.addPages(AbstractConfigEditor.java:243)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:289)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2945)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.ui 4 4 2012-03-26 22:34:36.080
!MESSAGE Preference node "org.eclipse.wst.validation" has been removed.
!STACK 0
java.lang.IllegalStateException: Preference node "org.eclipse.wst.validation" has been removed.
	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:193)
	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:601)
	at org.eclipse.core.internal.preferences.EclipsePreferences.getInt(EclipsePreferences.java:551)
	at org.eclipse.wst.validation.internal.PreferencesWrapper$PreferencesWrapperPersistent.getInt(PreferencesWrapper.java:124)
	at org.eclipse.wst.validation.internal.ValPrefManagerProject.loadProjectPreferences(ValPrefManagerProject.java:204)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:611)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:592)
	at org.eclipse.wst.validation.ValidationFramework.getProjectSettings(ValidationFramework.java:298)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.setDocument(ValidatorStrategy.java:320)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.setDocument(DocumentRegionProcessor.java:353)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.setDocument(StructuredRegionProcessor.java:284)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.handleInputDocumentChanged(DirtyRegionProcessor.java:555)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$TextInputListener.inputDocumentChanged(DirtyRegionProcessor.java:167)
	at org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2888)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2937)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:640)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:376)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.setDocument(StructuredTextViewer.java:805)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:588)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:4030)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3558)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:54)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:440)
	at org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1508)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:241)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:325)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:211)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:308)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.createSourcePage(AbstractConfigEditor.java:324)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.addPages(AbstractConfigEditor.java:243)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:289)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2945)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.ui 4 4 2012-03-26 22:35:12.208
!MESSAGE Preference node "org.eclipse.wst.validation" has been removed.
!STACK 0
java.lang.IllegalStateException: Preference node "org.eclipse.wst.validation" has been removed.
	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:193)
	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:601)
	at org.eclipse.core.internal.preferences.EclipsePreferences.getInt(EclipsePreferences.java:551)
	at org.eclipse.wst.validation.internal.PreferencesWrapper$PreferencesWrapperPersistent.getInt(PreferencesWrapper.java:124)
	at org.eclipse.wst.validation.internal.ValPrefManagerProject.loadProjectPreferences(ValPrefManagerProject.java:204)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:611)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:592)
	at org.eclipse.wst.validation.ValidationFramework.getProjectSettings(ValidationFramework.java:298)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.setDocument(ValidatorStrategy.java:320)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.setDocument(DocumentRegionProcessor.java:353)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.setDocument(StructuredRegionProcessor.java:284)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.handleInputDocumentChanged(DirtyRegionProcessor.java:555)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$TextInputListener.inputDocumentChanged(DirtyRegionProcessor.java:167)
	at org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2888)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2937)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:640)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:376)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.setDocument(StructuredTextViewer.java:805)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:588)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:4030)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3558)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:54)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:440)
	at org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1508)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:241)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:325)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:211)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:308)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.createSourcePage(AbstractConfigEditor.java:324)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.addPages(AbstractConfigEditor.java:243)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:289)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2945)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.ui 4 4 2012-03-26 22:38:58.807
!MESSAGE Preference node "org.eclipse.wst.validation" has been removed.
!STACK 0
java.lang.IllegalStateException: Preference node "org.eclipse.wst.validation" has been removed.
	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:193)
	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:601)
	at org.eclipse.core.internal.preferences.EclipsePreferences.getInt(EclipsePreferences.java:551)
	at org.eclipse.wst.validation.internal.PreferencesWrapper$PreferencesWrapperPersistent.getInt(PreferencesWrapper.java:124)
	at org.eclipse.wst.validation.internal.ValPrefManagerProject.loadProjectPreferences(ValPrefManagerProject.java:204)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:611)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:592)
	at org.eclipse.wst.validation.ValidationFramework.getProjectSettings(ValidationFramework.java:298)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.setDocument(ValidatorStrategy.java:320)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.setDocument(DocumentRegionProcessor.java:353)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.setDocument(StructuredRegionProcessor.java:284)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.handleInputDocumentChanged(DirtyRegionProcessor.java:555)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$TextInputListener.inputDocumentChanged(DirtyRegionProcessor.java:167)
	at org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2888)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2937)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:640)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:376)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.setDocument(StructuredTextViewer.java:805)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:588)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:4030)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3558)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:54)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:440)
	at org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1508)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:241)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:325)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:211)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:308)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.createSourcePage(AbstractConfigEditor.java:324)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.addPages(AbstractConfigEditor.java:243)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:289)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2945)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.ui 4 4 2012-03-26 22:39:07.968
!MESSAGE Preference node "org.eclipse.wst.validation" has been removed.
!STACK 0
java.lang.IllegalStateException: Preference node "org.eclipse.wst.validation" has been removed.
	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:193)
	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:601)
	at org.eclipse.core.internal.preferences.EclipsePreferences.getInt(EclipsePreferences.java:551)
	at org.eclipse.wst.validation.internal.PreferencesWrapper$PreferencesWrapperPersistent.getInt(PreferencesWrapper.java:124)
	at org.eclipse.wst.validation.internal.ValPrefManagerProject.loadProjectPreferences(ValPrefManagerProject.java:204)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:611)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:592)
	at org.eclipse.wst.validation.ValidationFramework.getProjectSettings(ValidationFramework.java:298)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.setDocument(ValidatorStrategy.java:320)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.setDocument(DocumentRegionProcessor.java:353)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.setDocument(StructuredRegionProcessor.java:284)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.handleInputDocumentChanged(DirtyRegionProcessor.java:555)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$TextInputListener.inputDocumentChanged(DirtyRegionProcessor.java:167)
	at org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2888)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2937)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:640)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:376)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.setDocument(StructuredTextViewer.java:805)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:588)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:4030)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3558)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:54)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:440)
	at org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1508)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:241)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:325)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:211)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:308)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.createSourcePage(AbstractConfigEditor.java:324)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.addPages(AbstractConfigEditor.java:243)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:289)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2945)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.ui 4 4 2012-03-26 22:39:22.131
!MESSAGE Preference node "org.eclipse.wst.validation" has been removed.
!STACK 0
java.lang.IllegalStateException: Preference node "org.eclipse.wst.validation" has been removed.
	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:193)
	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:601)
	at org.eclipse.core.internal.preferences.EclipsePreferences.getInt(EclipsePreferences.java:551)
	at org.eclipse.wst.validation.internal.PreferencesWrapper$PreferencesWrapperPersistent.getInt(PreferencesWrapper.java:124)
	at org.eclipse.wst.validation.internal.ValPrefManagerProject.loadProjectPreferences(ValPrefManagerProject.java:204)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:611)
	at org.eclipse.wst.validation.internal.ValManager.getProjectPreferences(ValManager.java:592)
	at org.eclipse.wst.validation.ValidationFramework.getProjectSettings(ValidationFramework.java:298)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.setDocument(ValidatorStrategy.java:320)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.setDocument(DocumentRegionProcessor.java:353)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.setDocument(StructuredRegionProcessor.java:284)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.handleInputDocumentChanged(DirtyRegionProcessor.java:555)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$TextInputListener.inputDocumentChanged(DirtyRegionProcessor.java:167)
	at org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2888)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2937)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:640)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:376)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.setDocument(StructuredTextViewer.java:805)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:588)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:4030)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3558)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:54)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:440)
	at org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1508)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:241)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:325)
	at org.eclipse.ui.part.MultiPageEditorPart.addPage(MultiPageEditorPart.java:211)
	at org.eclipse.ui.forms.editor.FormEditor.addPage(FormEditor.java:308)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.createSourcePage(AbstractConfigEditor.java:324)
	at com.springsource.sts.config.ui.editors.AbstractConfigEditor.addPages(AbstractConfigEditor.java:243)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:289)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2945)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)
!SESSION 2012-03-27 07:16:45.320 -----------------------------------------------
eclipse.buildId=2.9.1.201203221000-RELEASE
java.version=1.7.0_03
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.ui.workbench 2 0 2012-03-27 07:18:48.609
!MESSAGE A handler conflict occurred.  This may disable some commands.
!SUBENTRY 1 org.eclipse.ui.workbench 2 0 2012-03-27 07:18:48.609
!MESSAGE Conflict for 'ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode':
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@5625f063,
	expression=,sourcePriority=0)
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@54c91fc4,
	expression=,sourcePriority=0)

!ENTRY org.eclipse.equinox.p2.core 4 0 2012-03-27 07:18:54.219
!MESSAGE Provisioning exception
!STACK 1
org.eclipse.equinox.p2.core.ProvisionException: Artifact not found: http://findbugs.cs.umd.edu/eclipse/edu.umd.cs.findbugs.plugin.eclipse_1.3.9.20090821.jar.
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.parseFeature(UpdateSite.java:279)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.loadFeaturesFromSite(UpdateSite.java:531)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.loadFeatures(UpdateSite.java:437)
	at org.eclipse.equinox.internal.p2.updatesite.RemoteFeaturesAction.perform(RemoteFeaturesAction.java:39)
	at org.eclipse.equinox.internal.p2.updatesite.RemoteUpdateSiteAction.perform(RemoteUpdateSiteAction.java:50)
	at org.eclipse.equinox.p2.publisher.Publisher$ArtifactProcess.run(Publisher.java:207)
	at org.eclipse.equinox.p2.publisher.Publisher.publish(Publisher.java:237)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.generateMetadata(UpdateSiteMetadataRepositoryFactory.java:108)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.initializeRepository(UpdateSiteMetadataRepositoryFactory.java:93)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.load(UpdateSiteMetadataRepositoryFactory.java:56)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:749)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:651)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker.getAvailableRepositories(UpdateChecker.java:150)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker.checkForUpdates(UpdateChecker.java:128)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker$UpdateCheckThread.run(UpdateChecker.java:72)
Caused by: java.io.FileNotFoundException: http://findbugs.cs.umd.edu/eclipse/edu.umd.cs.findbugs.plugin.eclipse_1.3.9.20090821.jar
	at org.eclipse.equinox.internal.p2.transport.ecf.RepositoryStatusHelper.checkFileNotFound(RepositoryStatusHelper.java:297)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.checkException(FileReader.java:384)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.sendRetrieveRequest(FileReader.java:358)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.readInto(FileReader.java:295)
	at org.eclipse.equinox.internal.p2.transport.ecf.RepositoryTransport.download(RepositoryTransport.java:87)
	at org.eclipse.equinox.internal.p2.transport.ecf.RepositoryTransport.download(RepositoryTransport.java:137)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.parseFeature(UpdateSite.java:264)
	... 17 more
!SUBENTRY 1 org.eclipse.equinox.p2.transport.ecf 4 1200 2012-03-27 07:18:54.248
!MESSAGE Artifact not found: http://findbugs.cs.umd.edu/eclipse/edu.umd.cs.findbugs.plugin.eclipse_1.3.9.20090821.jar.
!STACK 0
java.io.FileNotFoundException: http://findbugs.cs.umd.edu/eclipse/edu.umd.cs.findbugs.plugin.eclipse_1.3.9.20090821.jar
	at org.eclipse.equinox.internal.p2.transport.ecf.RepositoryStatusHelper.checkFileNotFound(RepositoryStatusHelper.java:297)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.checkException(FileReader.java:384)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.sendRetrieveRequest(FileReader.java:358)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.readInto(FileReader.java:295)
	at org.eclipse.equinox.internal.p2.transport.ecf.RepositoryTransport.download(RepositoryTransport.java:87)
	at org.eclipse.equinox.internal.p2.transport.ecf.RepositoryTransport.download(RepositoryTransport.java:137)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.parseFeature(UpdateSite.java:264)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.loadFeaturesFromSite(UpdateSite.java:531)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.loadFeatures(UpdateSite.java:437)
	at org.eclipse.equinox.internal.p2.updatesite.RemoteFeaturesAction.perform(RemoteFeaturesAction.java:39)
	at org.eclipse.equinox.internal.p2.updatesite.RemoteUpdateSiteAction.perform(RemoteUpdateSiteAction.java:50)
	at org.eclipse.equinox.p2.publisher.Publisher$ArtifactProcess.run(Publisher.java:207)
	at org.eclipse.equinox.p2.publisher.Publisher.publish(Publisher.java:237)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.generateMetadata(UpdateSiteMetadataRepositoryFactory.java:108)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.initializeRepository(UpdateSiteMetadataRepositoryFactory.java:93)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.load(UpdateSiteMetadataRepositoryFactory.java:56)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:749)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:651)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker.getAvailableRepositories(UpdateChecker.java:150)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker.checkForUpdates(UpdateChecker.java:128)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker$UpdateCheckThread.run(UpdateChecker.java:72)

!ENTRY org.eclipse.equinox.p2.updatesite 4 0 2012-03-27 07:18:54.248
!MESSAGE Error reading feature http://findbugs.cs.umd.edu/eclipse/edu.umd.cs.findbugs.plugin.eclipse_1.3.9.20090821.jar.

!ENTRY org.eclipse.core.resources 4 273 2012-03-27 07:25:08.328
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 1 org.eclipse.core.resources 4 273 2012-03-27 07:25:08.328
!MESSAGE Could not delete '/SpringCore/target/classes/META-INF'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:352)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:352)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:798)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1941)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:780)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:746)
	at org.eclipse.ajdt.core.builder.AJBuilder$1WipeResources.visit(AJBuilder.java:1365)
	at org.eclipse.core.internal.resources.Resource$2.visit(Resource.java:106)
	at org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:65)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:82)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:86)
	at org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:127)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:75)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:104)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:88)
	at org.eclipse.ajdt.core.builder.AJBuilder.wipeFiles(AJBuilder.java:1378)
	at org.eclipse.ajdt.core.builder.AJBuilder.cleanFolder(AJBuilder.java:1326)
	at org.eclipse.ajdt.core.builder.AJBuilder.cleanOutputFolders(AJBuilder.java:1299)
	at org.eclipse.ajdt.core.builder.AJBuilder.build(AJBuilder.java:226)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Contains: Problems encountered while deleting files.
Contains: Could not delete: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringCore\target\classes\META-INF.
!SUBENTRY 2 org.eclipse.core.resources 4 273 2012-03-27 07:25:08.328
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 3 org.eclipse.core.filesystem 4 273 2012-03-27 07:25:08.328
!MESSAGE Problems encountered while deleting files.
!SUBENTRY 4 org.eclipse.core.filesystem 4 273 2012-03-27 07:25:08.328
!MESSAGE Could not delete: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringCore\target\classes\META-INF.
!SESSION 2012-03-27 21:03:20.571 -----------------------------------------------
eclipse.buildId=2.9.1.201203221000-RELEASE
java.version=1.7.0_03
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.ui.workbench 2 0 2012-03-27 21:03:34.360
!MESSAGE A handler conflict occurred.  This may disable some commands.
!SUBENTRY 1 org.eclipse.ui.workbench 2 0 2012-03-27 21:03:34.360
!MESSAGE Conflict for 'ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode':
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@33ca6705,
	expression=,sourcePriority=0)
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@51d043e5,
	expression=,sourcePriority=0)

!ENTRY org.eclipse.search 4 0 2012-03-28 06:48:42.507
!MESSAGE Problems encountered during text search.
!SUBENTRY 1 org.eclipse.search 4 4 2012-03-28 06:48:42.507
!MESSAGE File 'SpringAop/target/test-classes/test-context.xml' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/SpringAop/target/test-classes/test-context.xml'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/SpringAop/target/test-classes/test-context.xml'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:54)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-28 06:48:42.534
!MESSAGE Resource is out of sync with the file system: '/SpringAop/target/test-classes/test-context.xml'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-03-28 06:48:42.534
!MESSAGE File 'SpringAop/target/test-classes/logback.xml' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/SpringAop/target/test-classes/logback.xml'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/SpringAop/target/test-classes/logback.xml'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:54)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-28 06:48:42.535
!MESSAGE Resource is out of sync with the file system: '/SpringAop/target/test-classes/logback.xml'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-03-28 06:48:42.535
!MESSAGE File 'SpringAop/target/test-classes/log4j.xml' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/SpringAop/target/test-classes/log4j.xml'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/SpringAop/target/test-classes/log4j.xml'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:54)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-28 06:48:42.535
!MESSAGE Resource is out of sync with the file system: '/SpringAop/target/test-classes/log4j.xml'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-03-28 06:48:42.535
!MESSAGE File 'SpringAop/target/classes/builddef.lst' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/SpringAop/target/classes/builddef.lst'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/SpringAop/target/classes/builddef.lst'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:54)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-28 06:48:42.535
!MESSAGE Resource is out of sync with the file system: '/SpringAop/target/classes/builddef.lst'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-03-28 06:48:42.535
!MESSAGE File 'SpringAop/target/classes/app.properties' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/SpringAop/target/classes/app.properties'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/SpringAop/target/classes/app.properties'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:54)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-28 06:48:42.535
!MESSAGE Resource is out of sync with the file system: '/SpringAop/target/classes/app.properties'.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-28 06:50:24.301
!MESSAGE File /SpringAop/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-28 06:50:24.334
!MESSAGE File /SpringAop/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-28 06:50:24.792
!MESSAGE File /SpringCore/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-28 06:50:24.793
!MESSAGE File /SpringCore/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-28 06:52:00.714
!MESSAGE File /SpringAop/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-28 06:52:00.716
!MESSAGE File /SpringAop/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-28 06:52:01.178
!MESSAGE File /SpringCore/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-28 06:52:01.180
!MESSAGE File /SpringCore/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 07:44:06.524
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 07:44:06.529
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 07:44:06.551
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 07:44:06.557
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 07:44:06.561
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 07:44:06.577
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 08:18:39.613
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 08:18:39.617
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 08:18:39.630
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 08:18:39.634
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 08:18:39.643
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 08:18:39.654
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 08:20:18.672
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 08:20:18.676
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 08:20:18.689
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 08:20:18.694
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 08:20:18.698
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 08:20:18.723
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 10:38:49.727
!MESSAGE Launch configuration SpringAop Tests references closed project SpringAop

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 10:38:49.728
!MESSAGE Launch configuration SpringAop Tests references closed project SpringAop

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 10:38:49.736
!MESSAGE Launch configuration SpringAop Tests references closed project SpringAop

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-28 13:46:34.256
!MESSAGE File /SpringCore/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-28 13:46:34.311
!MESSAGE File /SpringCore/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 16:00:00.085
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 16:00:00.087
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 16:00:00.092
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 16:00:00.095
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 16:00:00.097
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-28 16:00:00.103
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore
!SESSION 2012-03-29 07:01:07.596 -----------------------------------------------
eclipse.buildId=2.9.1.201203221000-RELEASE
java.version=1.7.0_03
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.core.resources 2 10035 2012-03-29 07:02:06.321
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:12.027
!MESSAGE Compiler configuration for project SpringAop doesn't know previous state, so assuming EVERYTHING has changed.

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:14.422
!MESSAGE ===========================================================================================

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:14.425
!MESSAGE Build kind = FULLBUILD

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:20.516
!MESSAGE Project=SpringAop, kind of build requested=Full AspectJ compilation

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:20.900
!MESSAGE Timer event: 61ms: Flush included source file cache

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:20.901
!MESSAGE Timer event: 0ms: Check delta

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:21.077
!MESSAGE Builder: Tidied output folder(s), removed class files and derived resources

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:21.318
!MESSAGE AJC: Starting new build for project SpringAop

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:21.522
!MESSAGE Classpath = C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\target\classes;C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\target\test-classes;C:/usr/bin/Java/jdk1.6.0_31/jre/lib/resources.jar;C:/usr/bin/Java/jdk1.6.0_31/jre/lib/rt.jar;C:/usr/bin/Java/jdk1.6.0_31/jre/lib/jsse.jar;C:/usr/bin/Java/jdk1.6.0_31/jre/lib/jce.jar;C:/usr/bin/Java/jdk1.6.0_31/jre/lib/charsets.jar;C:/usr/bin/Java/jdk1.6.0_31/jre/lib/ext/dnsns.jar;C:/usr/bin/Java/jdk1.6.0_31/jre/lib/ext/localedata.jar;C:/usr/bin/Java/jdk1.6.0_31/jre/lib/ext/sunjce_provider.jar;C:/Users/mknuts6173c/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar;C:/Users/mknuts6173c/.m2/repository/org/springframework/spring-context/3.1.0.RELEASE/spring-context-3.1.0.RELEASE.jar;C:/Users/mknuts6173c/.m2/repository/org/springframework/spring-beans/3.1.0.RELEASE/spring-beans-3.1.0.RELEASE.jar;C:/Users/mknuts6173c/.m2/repository/org/springframework/spring-core/3.1.0.RELEASE/spring-core-3.1.0.RELEASE.jar;C:/Users/mknuts6173c/.m2/repository/org/springframework/spring-expression/3.1.0.RELEASE/spring-expression-3.1.0.RELEASE.jar;C:/Users/mknuts6173c/.m2/repository/org/springframework/spring-asm/3.1.0.RELEASE/spring-asm-3.1.0.RELEASE.jar;C:/Users/mknuts6173c/.m2/repository/org/springframework/spring-context-support/3.1.0.RELEASE/spring-context-support-3.1.0.RELEASE.jar;C:/Users/mknuts6173c/.m2/repository/org/springframework/spring-aop/3.1.0.RELEASE/spring-aop-3.1.0.RELEASE.jar;C:/Users/mknuts6173c/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar;C:/Users/mknuts6173c/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar;C:/Users/mknuts6173c/.m2/repository/org/aspectj/aspectjtools/1.6.9/aspectjtools-1.6.9.jar;C:/Users/mknuts6173c/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar;C:/Users/mknuts6173c/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar;C:/Users/mknuts6173c/.m2/repository/org/apache/commons/commons-lang3/3.1/commons-lang3-3.1.jar;C:/Users/mknuts6173c/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar;C:/Users/mknuts6173c/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.4/jcl-over-slf4j-1.6.4.jar;C:/Users/mknuts6173c/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar;C:/Users/mknuts6173c/.m2/repository/ch/qos/logback/logback-classic/1.0.0/logback-classic-1.0.0.jar;C:/Users/mknuts6173c/.m2/repository/ch/qos/logback/logback-core/1.0.1/logback-core-1.0.1.jar;C:/Users/mknuts6173c/.m2/repository/junit/junit/4.10/junit-4.10.jar;C:/Users/mknuts6173c/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar;C:/Users/mknuts6173c/.m2/repository/org/hamcrest/hamcrest-all/1.1/hamcrest-all-1.1.jar;C:/Users/mknuts6173c/.m2/repository/org/springframework/spring-test/3.1.0.RELEASE/spring-test-3.1.0.RELEASE.jar;C:/Users/mknuts6173c/.m2/repository/org/mockito/mockito-all/1.9.0/mockito-all-1.9.0.jar;C:/Users/mknuts6173c/.m2/repository/org/powermock/powermock-module-junit4/1.4.11/powermock-module-junit4-1.4.11.jar;C:/Users/mknuts6173c/.m2/repository/org/powermock/powermock-module-junit4-common/1.4.11/powermock-module-junit4-common-1.4.11.jar;C:/Users/mknuts6173c/.m2/repository/org/powermock/powermock-core/1.4.11/powermock-core-1.4.11.jar;C:/Users/mknuts6173c/.m2/repository/org/javassist/javassist/3.15.0-GA/javassist-3.15.0-GA.jar;C:/Users/mknuts6173c/.m2/repository/org/powermock/powermock-reflect/1.4.11/powermock-reflect-1.4.11.jar;C:/Users/mknuts6173c/.m2/repository/org/objenesis/objenesis/1.2/objenesis-1.2.jar;C:/Users/mknuts6173c/.m2/repository/org/powermock/powermock-api-mockito/1.4.11/powermock-api-mockito-1.4.11.jar;C:/Users/mknuts6173c/.m2/repository/org/powermock/powermock-api-support/1.4.11/powermock-api-support-1.4.11.jar;

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:21.524
!MESSAGE Timer event: 7145ms: Pre compile

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:22.698
!MESSAGE Compiler configuration for project SpringAop has been read by compiler.  Resetting.

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:22.700
!MESSAGE      Configuration was [PROJECTSOURCEFILES_CHANGED, JAVAOPTIONS_CHANGED, ASPECTPATH_CHANGED, CLASSPATH_CHANGED, INPATH_CHANGED, NONSTANDARDOPTIONS_CHANGED, OUTJAR_CHANGED, PROJECTSOURCERESOURCES_CHANGED, OUTPUTDESTINATIONS_CHANGED, INJARS_CHANGED]

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:22.702
!MESSAGE Resetting list of modified source files.  Was null

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:27.173
!MESSAGE AJC: compiling source files

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:29.625
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AroundAdvice.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:29.733
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterAdvice.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:29.746
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\BeforeAdvice.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:29.754
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterReturningAdvice.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:29.761
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterThrowingAdvice.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.022
!MESSAGE AJC: woven aspect com.baselogic.aspects.AroundAdvice (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AroundAdvice.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.036
!MESSAGE AJC: woven aspect com.baselogic.aspects.AfterAdvice (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterAdvice.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.040
!MESSAGE AJC: woven aspect com.baselogic.aspects.BeforeAdvice (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\BeforeAdvice.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.043
!MESSAGE AJC: woven aspect com.baselogic.aspects.AfterReturningAdvice (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterReturningAdvice.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.046
!MESSAGE AJC: woven aspect com.baselogic.aspects.AfterThrowingAdvice (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterThrowingAdvice.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.055
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AroundAdvice.java:3:0::0 The import java.lang.reflect.Method is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.056
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AroundAdvice.java:6:0::0 The import org.aspectj.lang.annotation.Around is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.059
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AroundAdvice.java:8:0::0 The import org.aspectj.lang.annotation.Before is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.060
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AroundAdvice.java:12:0::0 The import org.springframework.aop.MethodBeforeAdvice is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.061
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AroundAdvice.java:14:0::0 The import com.baselogic.dao.OrderDAO is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.063
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AroundAdvice.java:15:0::0 The import com.baselogic.domain.Order is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.068
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterAdvice.java:3:0::0 The import java.lang.reflect.Method is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.070
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterAdvice.java:7:0::0 The import org.aspectj.lang.annotation.Before is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.071
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterAdvice.java:11:0::0 The import org.springframework.aop.MethodBeforeAdvice is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.073
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterAdvice.java:13:0::0 The import com.baselogic.dao.OrderDAO is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.086
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\BeforeAdvice.java:3:0::0 The import java.lang.reflect.Method is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.087
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\BeforeAdvice.java:10:0::0 The import org.springframework.aop.MethodBeforeAdvice is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.088
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\BeforeAdvice.java:12:0::0 The import com.baselogic.dao.OrderDAO is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.093
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterReturningAdvice.java:3:0::0 The import java.lang.reflect.Method is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.094
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterReturningAdvice.java:6:0::0 The import org.aspectj.lang.annotation.Before is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.095
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterReturningAdvice.java:10:0::0 The import org.springframework.aop.MethodBeforeAdvice is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.096
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterReturningAdvice.java:12:0::0 The import com.baselogic.dao.OrderDAO is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.097
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterReturningAdvice.java:13:0::0 The import com.baselogic.domain.Order is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.098
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterReturningAdvice.java:70:0::0 The value of the field AfterReturningAdvice.logger is not used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.102
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterThrowingAdvice.java:3:0::0 The import java.lang.reflect.Method is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.103
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterThrowingAdvice.java:6:0::0 The import org.aspectj.lang.annotation.Before is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.104
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterThrowingAdvice.java:10:0::0 The import org.springframework.aop.MethodBeforeAdvice is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.105
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterThrowingAdvice.java:12:0::0 The import com.baselogic.dao.OrderDAO is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.106
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterThrowingAdvice.java:13:0::0 The import com.baselogic.domain.Order is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.107
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\AfterThrowingAdvice.java:70:0::0 The value of the field AfterThrowingAdvice.logger is not used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.212
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\domain\Activity.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.215
!MESSAGE AJC: woven class com.baselogic.domain.Activity (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\domain\Activity.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.318
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\configuration\JavaConfiguration.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.320
!MESSAGE AJC: woven class com.baselogic.configuration.JavaConfiguration (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\configuration\JavaConfiguration.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.325
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\configuration\JavaConfiguration.java:3:0::0 The import java.util.LinkedList is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.326
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\configuration\JavaConfiguration.java:4:0::0 The import java.util.Random is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.327
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\configuration\JavaConfiguration.java:5:0::0 The import java.util.UUID is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.328
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\configuration\JavaConfiguration.java:7:0::0 The import org.springframework.beans.factory.annotation.Value is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.330
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\configuration\JavaConfiguration.java:8:0::0 The import org.springframework.context.annotation.Bean is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.331
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\configuration\JavaConfiguration.java:10:0::0 The import org.springframework.context.annotation.PropertySource is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.332
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\configuration\JavaConfiguration.java:11:0::0 The import org.springframework.context.annotation.Scope is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.333
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\configuration\JavaConfiguration.java:13:0::0 The import com.baselogic.domain.Customer is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.334
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\configuration\JavaConfiguration.java:14:0::0 The import com.baselogic.domain.Item is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.335
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\configuration\JavaConfiguration.java:15:0::0 The import com.baselogic.domain.Order is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.368
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\BeforeAdviceTests.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.371
!MESSAGE AJC: woven class com.baselogic.demos.BeforeAdviceTests (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\BeforeAdviceTests.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.376
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\BeforeAdviceTests.java:3:0::0 The import org.junit.Assert.assertTrue is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.377
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\BeforeAdviceTests.java:4:0::0 The import org.junit.Assert.fail is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.378
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\BeforeAdviceTests.java:6:0::0 The import java.util.zip.DataFormatException is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.379
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\BeforeAdviceTests.java:8:0::0 The import javax.naming.InsufficientResourcesException is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.380
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\BeforeAdviceTests.java:12:0::0 The import org.mockito.InjectMocks is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.381
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\BeforeAdviceTests.java:22:0::0 The import com.baselogic.service.OrderServiceImpl is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.411
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\domain\Item.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.415
!MESSAGE AJC: woven class com.baselogic.domain.Item (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\domain\Item.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.427
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\dao\OrderDAO.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.429
!MESSAGE AJC: woven class com.baselogic.dao.OrderDAO (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\dao\OrderDAO.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.439
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\common\ComponentProxyFactoryBean.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.442
!MESSAGE AJC: woven class com.baselogic.common.ComponentProxyFactoryBean (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\common\ComponentProxyFactoryBean.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.452
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\service\OrderService.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.454
!MESSAGE AJC: woven class com.baselogic.service.OrderService (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\service\OrderService.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.467
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\domain\PhoneNumber.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.471
!MESSAGE AJC: woven class com.baselogic.domain.PhoneNumber (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\domain\PhoneNumber.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.482
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\domain\Customer.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.485
!MESSAGE AJC: woven class com.baselogic.domain.Customer (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\domain\Customer.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.500
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\common\SimpleBean.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.502
!MESSAGE AJC: woven class com.baselogic.common.SimpleBean (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\common\SimpleBean.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.509
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\service\UnImplementedService.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.511
!MESSAGE AJC: woven class com.baselogic.service.UnImplementedService (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\service\UnImplementedService.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.555
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\service\OrderServiceImpl.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.603
!MESSAGE AJC: woven class com.baselogic.service.OrderServiceImpl (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\service\OrderServiceImpl.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.645
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\service\OrderServiceImpl.java:10:0::0 The import org.springframework.context.ApplicationContext is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.646
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\service\OrderServiceImpl.java:11:0::0 The import org.springframework.context.support.ClassPathXmlApplicationContext is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.654
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\AroundAdviceTests.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.656
!MESSAGE AJC: woven class com.baselogic.demos.AroundAdviceTests (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\AroundAdviceTests.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.661
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\AroundAdviceTests.java:3:0::0 The import org.junit.Assert.assertTrue is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.662
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\AroundAdviceTests.java:4:0::0 The import org.junit.Assert.fail is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.663
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\AroundAdviceTests.java:6:0::0 The import java.util.zip.DataFormatException is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.664
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\AroundAdviceTests.java:8:0::0 The import javax.naming.InsufficientResourcesException is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.665
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\AroundAdviceTests.java:12:0::0 The import org.mockito.InjectMocks is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.666
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\test\java\com\baselogic\demos\AroundAdviceTests.java:22:0::0 The import com.baselogic.service.OrderServiceImpl is never used

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.742
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\dao\OrderHibernateDAOImpl.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.758
!MESSAGE AJC: woven class com.baselogic.dao.OrderHibernateDAOImpl (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\dao\OrderHibernateDAOImpl.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.820
!MESSAGE AJC: compiled: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\domain\Order.java

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.828
!MESSAGE AJC: woven class com.baselogic.domain.Order (from C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\domain\Order.java)

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.836
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\BeforeAdvice.java:139::0 advice defined in com.baselogic.aspects.BeforeAdvice has not been applied [Xlint:adviceDidNotMatch]

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.837
!MESSAGE AJC: warning at C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringAop\src\main\java\com\baselogic\aspects\BeforeAdvice.java:125::0 advice defined in com.baselogic.aspects.BeforeAdvice has not been applied [Xlint:adviceDidNotMatch]

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.839
!MESSAGE AJC: Build finished. Was full build: true

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.840
!MESSAGE Timer event: 9315ms: Total time spent in AJDE

!ENTRY org.eclipse.ajdt.core 1 0 2012-03-29 07:02:30.841
!MESSAGE Timer event: 0ms: Refresh after build

!ENTRY org.eclipse.ui.workbench 2 0 2012-03-29 08:21:50.065
!MESSAGE A handler conflict occurred.  This may disable some commands.
!SUBENTRY 1 org.eclipse.ui.workbench 2 0 2012-03-29 08:21:50.065
!MESSAGE Conflict for 'ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode':
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@2044c5f2,
	expression=,sourcePriority=0)
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@31fa36b,
	expression=,sourcePriority=0)

!ENTRY org.eclipse.contribution.weaving.jdt 4 0 2012-03-29 09:28:17.863
!MESSAGE All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("com.baselogic.service.OrderServiceImpl.placeOrder() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("com.baselogic.service.OrderServiceImpl.placeOrder() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testAroundAdvice(){
		Order original = new Order();
		original.adviceGiven.add("created in AroundAdviceTests");
		
		Order returned = orderService.placeDelayedOrder(original, 100L);

		logger.info(">>> returned: {}", returned);
	}
	

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() &&" +
	        "args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.service;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component("orderService")
public class OrderServiceImpl implements OrderService {
	
	private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

	@Autowired
	private OrderDAO orderDao;
	
	//@Autowired
	private String message;


	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	// PointCut on 'placeOrder()'
	// joinPoint: @Before
	// Advice: order.adviceGiven.add("@Before advice");
	public Order placeOrder(Order order){

		// Apply an Audit Aspect
		order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		
		// Give direct Advice:
		somePrivateFunction(order);
		
		try {
			
			// Give direct Advice:
			return orderDao.placeOrder(order);
			
		} catch (Exception e) {
			//logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	
	
	/**
	 * Code cluttering example
	 * @param order
	 * @return
	 */
	public Order placeSecuredOrder(Order order){
		
		// Cluttered with logging code
		logger.debug("> placing order...");
		
		// Cluttering with Audit log information
		if(true /* order.isAuditable() */){
			// create an audit log
			order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		}		

		// Cluttering with Security information
		if(true /* user.isAuthenticated() */){
			somePrivateFunction(order);
		}
		
		try {
			// Did transaction complete?
			return orderDao.placeOrder(order);
			// Throw exceptions
			
		} catch (Exception e) {
			
			// Cluttered with logging code
			logger.error(e.getMessage());
		}
		
		return null;
	}	

	public Order placeDelayedOrder(Order order, long delay){
		
		logger.debug("> placing order...");
		
		order.adviceGiven.add("OrderServiceImpl.placeDelayedOrder advice");
		
		somePrivateFunction(order);
		
		try {
			return orderDao.placeDelayedOrder(order, delay);
		} catch (Exception e) {		
			logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	

	private void somePrivateFunction(Order order){
		logger.debug("somePrivateFunction...");
		order.adviceGiven.add("OrderServiceImpl.somePrivateFunction advice");
	}
	
	@PostConstruct
	public void initService(){
        if (orderDao != null) {
            logger.debug("MY DEP BEAN {}", orderDao.toString());
        }
        logger.debug("> {}: @PostConstruct <", this.getClass());
	}
	
	@PreDestroy
	public void destroyService(){
		logger.debug("> {}: @PreDestroy <", this.getClass());
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}    
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
!STACK 1
Java Model Exception: java.lang.RuntimeException: All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("com.baselogic.service.OrderServiceImpl.placeOrder() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("com.baselogic.service.OrderServiceImpl.placeOrder() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testAroundAdvice(){
		Order original = new Order();
		original.adviceGiven.add("created in AroundAdviceTests");
		
		Order returned = orderService.placeDelayedOrder(original, 100L);

		logger.info(">>> returned: {}", returned);
	}
	

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() &&" +
	        "args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.service;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component("orderService")
public class OrderServiceImpl implements OrderService {
	
	private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

	@Autowired
	private OrderDAO orderDao;
	
	//@Autowired
	private String message;


	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	// PointCut on 'placeOrder()'
	// joinPoint: @Before
	// Advice: order.adviceGiven.add("@Before advice");
	public Order placeOrder(Order order){

		// Apply an Audit Aspect
		order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		
		// Give direct Advice:
		somePrivateFunction(order);
		
		try {
			
			// Give direct Advice:
			return orderDao.placeOrder(order);
			
		} catch (Exception e) {
			//logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	
	
	/**
	 * Code cluttering example
	 * @param order
	 * @return
	 */
	public Order placeSecuredOrder(Order order){
		
		// Cluttered with logging code
		logger.debug("> placing order...");
		
		// Cluttering with Audit log information
		if(true /* order.isAuditable() */){
			// create an audit log
			order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		}		

		// Cluttering with Security information
		if(true /* user.isAuthenticated() */){
			somePrivateFunction(order);
		}
		
		try {
			// Did transaction complete?
			return orderDao.placeOrder(order);
			// Throw exceptions
			
		} catch (Exception e) {
			
			// Cluttered with logging code
			logger.error(e.getMessage());
		}
		
		return null;
	}	

	public Order placeDelayedOrder(Order order, long delay){
		
		logger.debug("> placing order...");
		
		order.adviceGiven.add("OrderServiceImpl.placeDelayedOrder advice");
		
		somePrivateFunction(order);
		
		try {
			return orderDao.placeDelayedOrder(order, delay);
		} catch (Exception e) {		
			logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	

	private void somePrivateFunction(Order order){
		logger.debug("somePrivateFunction...");
		order.adviceGiven.add("OrderServiceImpl.somePrivateFunction advice");
	}
	
	@PostConstruct
	public void initService(){
        if (orderDao != null) {
            logger.debug("MY DEP BEAN {}", orderDao.toString());
        }
        logger.debug("> {}: @PostConstruct <", this.getClass());
	}
	
	@PreDestroy
	public void destroyService(){
		logger.debug("> {}: @PreDestroy <", this.getClass());
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}    
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:299)
	at org.eclipse.ajdt.ui.AJDTNameEnvironmentProvider.problemFind(AJDTNameEnvironmentProvider.java:79)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process_aroundBody1$advice(CompilationUnitProblemFinder.java:234)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:1)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:195)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1079)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.RuntimeException: All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("com.baselogic.service.OrderServiceImpl.placeOrder() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("com.baselogic.service.OrderServiceImpl.placeOrder() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testAroundAdvice(){
		Order original = new Order();
		original.adviceGiven.add("created in AroundAdviceTests");
		
		Order returned = orderService.placeDelayedOrder(original, 100L);

		logger.info(">>> returned: {}", returned);
	}
	

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() &&" +
	        "args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.service;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component("orderService")
public class OrderServiceImpl implements OrderService {
	
	private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

	@Autowired
	private OrderDAO orderDao;
	
	//@Autowired
	private String message;


	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	// PointCut on 'placeOrder()'
	// joinPoint: @Before
	// Advice: order.adviceGiven.add("@Before advice");
	public Order placeOrder(Order order){

		// Apply an Audit Aspect
		order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		
		// Give direct Advice:
		somePrivateFunction(order);
		
		try {
			
			// Give direct Advice:
			return orderDao.placeOrder(order);
			
		} catch (Exception e) {
			//logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	
	
	/**
	 * Code cluttering example
	 * @param order
	 * @return
	 */
	public Order placeSecuredOrder(Order order){
		
		// Cluttered with logging code
		logger.debug("> placing order...");
		
		// Cluttering with Audit log information
		if(true /* order.isAuditable() */){
			// create an audit log
			order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		}		

		// Cluttering with Security information
		if(true /* user.isAuthenticated() */){
			somePrivateFunction(order);
		}
		
		try {
			// Did transaction complete?
			return orderDao.placeOrder(order);
			// Throw exceptions
			
		} catch (Exception e) {
			
			// Cluttered with logging code
			logger.error(e.getMessage());
		}
		
		return null;
	}	

	public Order placeDelayedOrder(Order order, long delay){
		
		logger.debug("> placing order...");
		
		order.adviceGiven.add("OrderServiceImpl.placeDelayedOrder advice");
		
		somePrivateFunction(order);
		
		try {
			return orderDao.placeDelayedOrder(order, delay);
		} catch (Exception e) {		
			logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	

	private void somePrivateFunction(Order order){
		logger.debug("somePrivateFunction...");
		order.adviceGiven.add("OrderServiceImpl.somePrivateFunction advice");
	}
	
	@PostConstruct
	public void initService(){
        if (orderDao != null) {
            logger.debug("MY DEP BEAN {}", orderDao.toString());
        }
        logger.debug("> {}: @PostConstruct <", this.getClass());
	}
	
	@PreDestroy
	public void destroyService(){
		logger.debug("> {}: @PreDestroy <", this.getClass());
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}    
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
	... 23 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: 0
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:385)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:577)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:504)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:159)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.buildCompilationUnit(SourceTypeConverter.java:94)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.accept(CompilationUnitProblemFinder.java:112)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:154)
	at org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:183)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(CompilationUnitScope.java:487)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(CompilationUnitScope.java:541)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports(CompilationUnitScope.java:369)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:466)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:906)
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:236)
	... 22 more
Caused by: java.lang.RuntimeException: All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("com.baselogic.service.OrderServiceImpl.placeOrder() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("com.baselogic.service.OrderServiceImpl.placeOrder() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testAroundAdvice(){
		Order original = new Order();
		original.adviceGiven.add("created in AroundAdviceTests");
		
		Order returned = orderService.placeDelayedOrder(original, 100L);

		logger.info(">>> returned: {}", returned);
	}
	

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() &&" +
	        "args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.service;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component("orderService")
public class OrderServiceImpl implements OrderService {
	
	private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

	@Autowired
	private OrderDAO orderDao;
	
	//@Autowired
	private String message;


	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	// PointCut on 'placeOrder()'
	// joinPoint: @Before
	// Advice: order.adviceGiven.add("@Before advice");
	public Order placeOrder(Order order){

		// Apply an Audit Aspect
		order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		
		// Give direct Advice:
		somePrivateFunction(order);
		
		try {
			
			// Give direct Advice:
			return orderDao.placeOrder(order);
			
		} catch (Exception e) {
			//logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	
	
	/**
	 * Code cluttering example
	 * @param order
	 * @return
	 */
	public Order placeSecuredOrder(Order order){
		
		// Cluttered with logging code
		logger.debug("> placing order...");
		
		// Cluttering with Audit log information
		if(true /* order.isAuditable() */){
			// create an audit log
			order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		}		

		// Cluttering with Security information
		if(true /* user.isAuthenticated() */){
			somePrivateFunction(order);
		}
		
		try {
			// Did transaction complete?
			return orderDao.placeOrder(order);
			// Throw exceptions
			
		} catch (Exception e) {
			
			// Cluttered with logging code
			logger.error(e.getMessage());
		}
		
		return null;
	}	

	public Order placeDelayedOrder(Order order, long delay){
		
		logger.debug("> placing order...");
		
		order.adviceGiven.add("OrderServiceImpl.placeDelayedOrder advice");
		
		somePrivateFunction(order);
		
		try {
			return orderDao.placeDelayedOrder(order, delay);
		} catch (Exception e) {		
			logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	

	private void somePrivateFunction(Order order){
		logger.debug("somePrivateFunction...");
		order.adviceGiven.add("OrderServiceImpl.somePrivateFunction advice");
	}
	
	@PostConstruct
	public void initService(){
        if (orderDao != null) {
            logger.debug("MY DEP BEAN {}", orderDao.toString());
        }
        logger.debug("> {}: @PostConstruct <", this.getClass());
	}
	
	@PreDestroy
	public void destroyService(){
		logger.debug("> {}: @PreDestroy <", this.getClass());
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}    
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:299)
	at org.eclipse.ajdt.ui.AJDTNameEnvironmentProvider.problemFind(AJDTNameEnvironmentProvider.java:79)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process_aroundBody1$advice(CompilationUnitProblemFinder.java:234)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:1)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:195)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1079)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 0
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:385)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:577)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:504)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:159)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.buildCompilationUnit(SourceTypeConverter.java:94)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.accept(CompilationUnitProblemFinder.java:112)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:154)
	at org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:183)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(CompilationUnitScope.java:487)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(CompilationUnitScope.java:541)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports(CompilationUnitScope.java:369)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:466)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:906)
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:236)
	... 22 more
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2012-03-29 09:28:17.869
!MESSAGE All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("com.baselogic.service.OrderServiceImpl.placeOrder() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("com.baselogic.service.OrderServiceImpl.placeOrder() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testAroundAdvice(){
		Order original = new Order();
		original.adviceGiven.add("created in AroundAdviceTests");
		
		Order returned = orderService.placeDelayedOrder(original, 100L);

		logger.info(">>> returned: {}", returned);
	}
	

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() &&" +
	        "args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.service;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component("orderService")
public class OrderServiceImpl implements OrderService {
	
	private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

	@Autowired
	private OrderDAO orderDao;
	
	//@Autowired
	private String message;


	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	// PointCut on 'placeOrder()'
	// joinPoint: @Before
	// Advice: order.adviceGiven.add("@Before advice");
	public Order placeOrder(Order order){

		// Apply an Audit Aspect
		order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		
		// Give direct Advice:
		somePrivateFunction(order);
		
		try {
			
			// Give direct Advice:
			return orderDao.placeOrder(order);
			
		} catch (Exception e) {
			//logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	
	
	/**
	 * Code cluttering example
	 * @param order
	 * @return
	 */
	public Order placeSecuredOrder(Order order){
		
		// Cluttered with logging code
		logger.debug("> placing order...");
		
		// Cluttering with Audit log information
		if(true /* order.isAuditable() */){
			// create an audit log
			order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		}		

		// Cluttering with Security information
		if(true /* user.isAuthenticated() */){
			somePrivateFunction(order);
		}
		
		try {
			// Did transaction complete?
			return orderDao.placeOrder(order);
			// Throw exceptions
			
		} catch (Exception e) {
			
			// Cluttered with logging code
			logger.error(e.getMessage());
		}
		
		return null;
	}	

	public Order placeDelayedOrder(Order order, long delay){
		
		logger.debug("> placing order...");
		
		order.adviceGiven.add("OrderServiceImpl.placeDelayedOrder advice");
		
		somePrivateFunction(order);
		
		try {
			return orderDao.placeDelayedOrder(order, delay);
		} catch (Exception e) {		
			logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	

	private void somePrivateFunction(Order order){
		logger.debug("somePrivateFunction...");
		order.adviceGiven.add("OrderServiceImpl.somePrivateFunction advice");
	}
	
	@PostConstruct
	public void initService(){
        if (orderDao != null) {
            logger.debug("MY DEP BEAN {}", orderDao.toString());
        }
        logger.debug("> {}: @PostConstruct <", this.getClass());
	}
	
	@PreDestroy
	public void destroyService(){
		logger.debug("> {}: @PreDestroy <", this.getClass());
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}    
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
!STACK 0
java.lang.RuntimeException: All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("com.baselogic.service.OrderServiceImpl.placeOrder() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("com.baselogic.service.OrderServiceImpl.placeOrder() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testAroundAdvice(){
		Order original = new Order();
		original.adviceGiven.add("created in AroundAdviceTests");
		
		Order returned = orderService.placeDelayedOrder(original, 100L);

		logger.info(">>> returned: {}", returned);
	}
	

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() &&" +
	        "args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.service;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component("orderService")
public class OrderServiceImpl implements OrderService {
	
	private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

	@Autowired
	private OrderDAO orderDao;
	
	//@Autowired
	private String message;


	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	// PointCut on 'placeOrder()'
	// joinPoint: @Before
	// Advice: order.adviceGiven.add("@Before advice");
	public Order placeOrder(Order order){

		// Apply an Audit Aspect
		order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		
		// Give direct Advice:
		somePrivateFunction(order);
		
		try {
			
			// Give direct Advice:
			return orderDao.placeOrder(order);
			
		} catch (Exception e) {
			//logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	
	
	/**
	 * Code cluttering example
	 * @param order
	 * @return
	 */
	public Order placeSecuredOrder(Order order){
		
		// Cluttered with logging code
		logger.debug("> placing order...");
		
		// Cluttering with Audit log information
		if(true /* order.isAuditable() */){
			// create an audit log
			order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		}		

		// Cluttering with Security information
		if(true /* user.isAuthenticated() */){
			somePrivateFunction(order);
		}
		
		try {
			// Did transaction complete?
			return orderDao.placeOrder(order);
			// Throw exceptions
			
		} catch (Exception e) {
			
			// Cluttered with logging code
			logger.error(e.getMessage());
		}
		
		return null;
	}	

	public Order placeDelayedOrder(Order order, long delay){
		
		logger.debug("> placing order...");
		
		order.adviceGiven.add("OrderServiceImpl.placeDelayedOrder advice");
		
		somePrivateFunction(order);
		
		try {
			return orderDao.placeDelayedOrder(order, delay);
		} catch (Exception e) {		
			logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	

	private void somePrivateFunction(Order order){
		logger.debug("somePrivateFunction...");
		order.adviceGiven.add("OrderServiceImpl.somePrivateFunction advice");
	}
	
	@PostConstruct
	public void initService(){
        if (orderDao != null) {
            logger.debug("MY DEP BEAN {}", orderDao.toString());
        }
        logger.debug("> {}: @PostConstruct <", this.getClass());
	}
	
	@PreDestroy
	public void destroyService(){
		logger.debug("> {}: @PreDestroy <", this.getClass());
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}    
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:299)
	at org.eclipse.ajdt.ui.AJDTNameEnvironmentProvider.problemFind(AJDTNameEnvironmentProvider.java:79)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process_aroundBody1$advice(CompilationUnitProblemFinder.java:234)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:1)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:195)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1079)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 0
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:385)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:577)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:504)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:159)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.buildCompilationUnit(SourceTypeConverter.java:94)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.accept(CompilationUnitProblemFinder.java:112)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:154)
	at org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:183)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(CompilationUnitScope.java:487)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(CompilationUnitScope.java:541)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports(CompilationUnitScope.java:369)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:466)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:906)
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:236)
	... 22 more

!ENTRY org.eclipse.contribution.weaving.jdt 4 0 2012-03-29 09:28:24.952
!MESSAGE All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("placeOrderService() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("placeOrderService() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testAroundAdvice(){
		Order original = new Order();
		original.adviceGiven.add("created in AroundAdviceTests");
		
		Order returned = orderService.placeDelayedOrder(original, 100L);

		logger.info(">>> returned: {}", returned);
	}
	

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() &&" +
	        "args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.service;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component("orderService")
public class OrderServiceImpl implements OrderService {
	
	private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

	@Autowired
	private OrderDAO orderDao;
	
	//@Autowired
	private String message;


	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	// PointCut on 'placeOrder()'
	// joinPoint: @Before
	// Advice: order.adviceGiven.add("@Before advice");
	public Order placeOrder(Order order){

		// Apply an Audit Aspect
		order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		
		// Give direct Advice:
		somePrivateFunction(order);
		
		try {
			
			// Give direct Advice:
			return orderDao.placeOrder(order);
			
		} catch (Exception e) {
			//logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	
	
	/**
	 * Code cluttering example
	 * @param order
	 * @return
	 */
	public Order placeSecuredOrder(Order order){
		
		// Cluttered with logging code
		logger.debug("> placing order...");
		
		// Cluttering with Audit log information
		if(true /* order.isAuditable() */){
			// create an audit log
			order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		}		

		// Cluttering with Security information
		if(true /* user.isAuthenticated() */){
			somePrivateFunction(order);
		}
		
		try {
			// Did transaction complete?
			return orderDao.placeOrder(order);
			// Throw exceptions
			
		} catch (Exception e) {
			
			// Cluttered with logging code
			logger.error(e.getMessage());
		}
		
		return null;
	}	

	public Order placeDelayedOrder(Order order, long delay){
		
		logger.debug("> placing order...");
		
		order.adviceGiven.add("OrderServiceImpl.placeDelayedOrder advice");
		
		somePrivateFunction(order);
		
		try {
			return orderDao.placeDelayedOrder(order, delay);
		} catch (Exception e) {		
			logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	

	private void somePrivateFunction(Order order){
		logger.debug("somePrivateFunction...");
		order.adviceGiven.add("OrderServiceImpl.somePrivateFunction advice");
	}
	
	@PostConstruct
	public void initService(){
        if (orderDao != null) {
            logger.debug("MY DEP BEAN {}", orderDao.toString());
        }
        logger.debug("> {}: @PostConstruct <", this.getClass());
	}
	
	@PreDestroy
	public void destroyService(){
		logger.debug("> {}: @PreDestroy <", this.getClass());
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}    
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
!STACK 1
Java Model Exception: java.lang.RuntimeException: All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("placeOrderService() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("placeOrderService() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testAroundAdvice(){
		Order original = new Order();
		original.adviceGiven.add("created in AroundAdviceTests");
		
		Order returned = orderService.placeDelayedOrder(original, 100L);

		logger.info(">>> returned: {}", returned);
	}
	

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() &&" +
	        "args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.service;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component("orderService")
public class OrderServiceImpl implements OrderService {
	
	private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

	@Autowired
	private OrderDAO orderDao;
	
	//@Autowired
	private String message;


	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	// PointCut on 'placeOrder()'
	// joinPoint: @Before
	// Advice: order.adviceGiven.add("@Before advice");
	public Order placeOrder(Order order){

		// Apply an Audit Aspect
		order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		
		// Give direct Advice:
		somePrivateFunction(order);
		
		try {
			
			// Give direct Advice:
			return orderDao.placeOrder(order);
			
		} catch (Exception e) {
			//logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	
	
	/**
	 * Code cluttering example
	 * @param order
	 * @return
	 */
	public Order placeSecuredOrder(Order order){
		
		// Cluttered with logging code
		logger.debug("> placing order...");
		
		// Cluttering with Audit log information
		if(true /* order.isAuditable() */){
			// create an audit log
			order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		}		

		// Cluttering with Security information
		if(true /* user.isAuthenticated() */){
			somePrivateFunction(order);
		}
		
		try {
			// Did transaction complete?
			return orderDao.placeOrder(order);
			// Throw exceptions
			
		} catch (Exception e) {
			
			// Cluttered with logging code
			logger.error(e.getMessage());
		}
		
		return null;
	}	

	public Order placeDelayedOrder(Order order, long delay){
		
		logger.debug("> placing order...");
		
		order.adviceGiven.add("OrderServiceImpl.placeDelayedOrder advice");
		
		somePrivateFunction(order);
		
		try {
			return orderDao.placeDelayedOrder(order, delay);
		} catch (Exception e) {		
			logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	

	private void somePrivateFunction(Order order){
		logger.debug("somePrivateFunction...");
		order.adviceGiven.add("OrderServiceImpl.somePrivateFunction advice");
	}
	
	@PostConstruct
	public void initService(){
        if (orderDao != null) {
            logger.debug("MY DEP BEAN {}", orderDao.toString());
        }
        logger.debug("> {}: @PostConstruct <", this.getClass());
	}
	
	@PreDestroy
	public void destroyService(){
		logger.debug("> {}: @PreDestroy <", this.getClass());
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}    
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:299)
	at org.eclipse.ajdt.ui.AJDTNameEnvironmentProvider.problemFind(AJDTNameEnvironmentProvider.java:79)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process_aroundBody1$advice(CompilationUnitProblemFinder.java:234)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:1)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:195)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1079)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.RuntimeException: All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("placeOrderService() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("placeOrderService() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testAroundAdvice(){
		Order original = new Order();
		original.adviceGiven.add("created in AroundAdviceTests");
		
		Order returned = orderService.placeDelayedOrder(original, 100L);

		logger.info(">>> returned: {}", returned);
	}
	

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() &&" +
	        "args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.service;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component("orderService")
public class OrderServiceImpl implements OrderService {
	
	private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

	@Autowired
	private OrderDAO orderDao;
	
	//@Autowired
	private String message;


	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	// PointCut on 'placeOrder()'
	// joinPoint: @Before
	// Advice: order.adviceGiven.add("@Before advice");
	public Order placeOrder(Order order){

		// Apply an Audit Aspect
		order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		
		// Give direct Advice:
		somePrivateFunction(order);
		
		try {
			
			// Give direct Advice:
			return orderDao.placeOrder(order);
			
		} catch (Exception e) {
			//logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	
	
	/**
	 * Code cluttering example
	 * @param order
	 * @return
	 */
	public Order placeSecuredOrder(Order order){
		
		// Cluttered with logging code
		logger.debug("> placing order...");
		
		// Cluttering with Audit log information
		if(true /* order.isAuditable() */){
			// create an audit log
			order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		}		

		// Cluttering with Security information
		if(true /* user.isAuthenticated() */){
			somePrivateFunction(order);
		}
		
		try {
			// Did transaction complete?
			return orderDao.placeOrder(order);
			// Throw exceptions
			
		} catch (Exception e) {
			
			// Cluttered with logging code
			logger.error(e.getMessage());
		}
		
		return null;
	}	

	public Order placeDelayedOrder(Order order, long delay){
		
		logger.debug("> placing order...");
		
		order.adviceGiven.add("OrderServiceImpl.placeDelayedOrder advice");
		
		somePrivateFunction(order);
		
		try {
			return orderDao.placeDelayedOrder(order, delay);
		} catch (Exception e) {		
			logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	

	private void somePrivateFunction(Order order){
		logger.debug("somePrivateFunction...");
		order.adviceGiven.add("OrderServiceImpl.somePrivateFunction advice");
	}
	
	@PostConstruct
	public void initService(){
        if (orderDao != null) {
            logger.debug("MY DEP BEAN {}", orderDao.toString());
        }
        logger.debug("> {}: @PostConstruct <", this.getClass());
	}
	
	@PreDestroy
	public void destroyService(){
		logger.debug("> {}: @PreDestroy <", this.getClass());
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}    
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
	... 23 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: 0
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:385)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:577)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:504)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:159)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.buildCompilationUnit(SourceTypeConverter.java:94)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.accept(CompilationUnitProblemFinder.java:112)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:154)
	at org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:183)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(CompilationUnitScope.java:487)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(CompilationUnitScope.java:541)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports(CompilationUnitScope.java:369)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:466)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:906)
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:236)
	... 22 more
Caused by: java.lang.RuntimeException: All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("placeOrderService() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("placeOrderService() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testAroundAdvice(){
		Order original = new Order();
		original.adviceGiven.add("created in AroundAdviceTests");
		
		Order returned = orderService.placeDelayedOrder(original, 100L);

		logger.info(">>> returned: {}", returned);
	}
	

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() &&" +
	        "args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.service;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component("orderService")
public class OrderServiceImpl implements OrderService {
	
	private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

	@Autowired
	private OrderDAO orderDao;
	
	//@Autowired
	private String message;


	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	// PointCut on 'placeOrder()'
	// joinPoint: @Before
	// Advice: order.adviceGiven.add("@Before advice");
	public Order placeOrder(Order order){

		// Apply an Audit Aspect
		order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		
		// Give direct Advice:
		somePrivateFunction(order);
		
		try {
			
			// Give direct Advice:
			return orderDao.placeOrder(order);
			
		} catch (Exception e) {
			//logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	
	
	/**
	 * Code cluttering example
	 * @param order
	 * @return
	 */
	public Order placeSecuredOrder(Order order){
		
		// Cluttered with logging code
		logger.debug("> placing order...");
		
		// Cluttering with Audit log information
		if(true /* order.isAuditable() */){
			// create an audit log
			order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		}		

		// Cluttering with Security information
		if(true /* user.isAuthenticated() */){
			somePrivateFunction(order);
		}
		
		try {
			// Did transaction complete?
			return orderDao.placeOrder(order);
			// Throw exceptions
			
		} catch (Exception e) {
			
			// Cluttered with logging code
			logger.error(e.getMessage());
		}
		
		return null;
	}	

	public Order placeDelayedOrder(Order order, long delay){
		
		logger.debug("> placing order...");
		
		order.adviceGiven.add("OrderServiceImpl.placeDelayedOrder advice");
		
		somePrivateFunction(order);
		
		try {
			return orderDao.placeDelayedOrder(order, delay);
		} catch (Exception e) {		
			logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	

	private void somePrivateFunction(Order order){
		logger.debug("somePrivateFunction...");
		order.adviceGiven.add("OrderServiceImpl.somePrivateFunction advice");
	}
	
	@PostConstruct
	public void initService(){
        if (orderDao != null) {
            logger.debug("MY DEP BEAN {}", orderDao.toString());
        }
        logger.debug("> {}: @PostConstruct <", this.getClass());
	}
	
	@PreDestroy
	public void destroyService(){
		logger.debug("> {}: @PreDestroy <", this.getClass());
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}    
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:299)
	at org.eclipse.ajdt.ui.AJDTNameEnvironmentProvider.problemFind(AJDTNameEnvironmentProvider.java:79)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process_aroundBody1$advice(CompilationUnitProblemFinder.java:234)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:1)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:195)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1079)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 0
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:385)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:577)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:504)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:159)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.buildCompilationUnit(SourceTypeConverter.java:94)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.accept(CompilationUnitProblemFinder.java:112)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:154)
	at org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:183)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(CompilationUnitScope.java:487)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(CompilationUnitScope.java:541)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports(CompilationUnitScope.java:369)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:466)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:906)
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:236)
	... 22 more
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2012-03-29 09:28:24.958
!MESSAGE All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("placeOrderService() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("placeOrderService() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testAroundAdvice(){
		Order original = new Order();
		original.adviceGiven.add("created in AroundAdviceTests");
		
		Order returned = orderService.placeDelayedOrder(original, 100L);

		logger.info(">>> returned: {}", returned);
	}
	

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() &&" +
	        "args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.service;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component("orderService")
public class OrderServiceImpl implements OrderService {
	
	private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

	@Autowired
	private OrderDAO orderDao;
	
	//@Autowired
	private String message;


	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	// PointCut on 'placeOrder()'
	// joinPoint: @Before
	// Advice: order.adviceGiven.add("@Before advice");
	public Order placeOrder(Order order){

		// Apply an Audit Aspect
		order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		
		// Give direct Advice:
		somePrivateFunction(order);
		
		try {
			
			// Give direct Advice:
			return orderDao.placeOrder(order);
			
		} catch (Exception e) {
			//logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	
	
	/**
	 * Code cluttering example
	 * @param order
	 * @return
	 */
	public Order placeSecuredOrder(Order order){
		
		// Cluttered with logging code
		logger.debug("> placing order...");
		
		// Cluttering with Audit log information
		if(true /* order.isAuditable() */){
			// create an audit log
			order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		}		

		// Cluttering with Security information
		if(true /* user.isAuthenticated() */){
			somePrivateFunction(order);
		}
		
		try {
			// Did transaction complete?
			return orderDao.placeOrder(order);
			// Throw exceptions
			
		} catch (Exception e) {
			
			// Cluttered with logging code
			logger.error(e.getMessage());
		}
		
		return null;
	}	

	public Order placeDelayedOrder(Order order, long delay){
		
		logger.debug("> placing order...");
		
		order.adviceGiven.add("OrderServiceImpl.placeDelayedOrder advice");
		
		somePrivateFunction(order);
		
		try {
			return orderDao.placeDelayedOrder(order, delay);
		} catch (Exception e) {		
			logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	

	private void somePrivateFunction(Order order){
		logger.debug("somePrivateFunction...");
		order.adviceGiven.add("OrderServiceImpl.somePrivateFunction advice");
	}
	
	@PostConstruct
	public void initService(){
        if (orderDao != null) {
            logger.debug("MY DEP BEAN {}", orderDao.toString());
        }
        logger.debug("> {}: @PostConstruct <", this.getClass());
	}
	
	@PreDestroy
	public void destroyService(){
		logger.debug("> {}: @PreDestroy <", this.getClass());
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}    
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
!STACK 0
java.lang.RuntimeException: All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("placeOrderService() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);
	
	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl=OrderService.class)
	public static UsageTracked mixin;

	/*@DeclareParents(value="com.xzy.myapp.service.*+",
            defaultImpl=DefaultUsageTracked.class)*/
	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	//execution(* com.baselogic.*.placeOrder(..))
	@Before("placeOrderService() &&" +
	    "this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.getMessage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testAroundAdvice(){
		Order original = new Order();
		original.adviceGiven.add("created in AroundAdviceTests");
		
		Order returned = orderService.placeDelayedOrder(original, 100L);

		logger.info(">>> returned: {}", returned);
	}
	

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() &&" +
	        "args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.service;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component("orderService")
public class OrderServiceImpl implements OrderService {
	
	private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

	@Autowired
	private OrderDAO orderDao;
	
	//@Autowired
	private String message;


	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	// PointCut on 'placeOrder()'
	// joinPoint: @Before
	// Advice: order.adviceGiven.add("@Before advice");
	public Order placeOrder(Order order){

		// Apply an Audit Aspect
		order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		
		// Give direct Advice:
		somePrivateFunction(order);
		
		try {
			
			// Give direct Advice:
			return orderDao.placeOrder(order);
			
		} catch (Exception e) {
			//logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	
	
	/**
	 * Code cluttering example
	 * @param order
	 * @return
	 */
	public Order placeSecuredOrder(Order order){
		
		// Cluttered with logging code
		logger.debug("> placing order...");
		
		// Cluttering with Audit log information
		if(true /* order.isAuditable() */){
			// create an audit log
			order.adviceGiven.add("OrderServiceImpl.placeOrder advice");
		}		

		// Cluttering with Security information
		if(true /* user.isAuthenticated() */){
			somePrivateFunction(order);
		}
		
		try {
			// Did transaction complete?
			return orderDao.placeOrder(order);
			// Throw exceptions
			
		} catch (Exception e) {
			
			// Cluttered with logging code
			logger.error(e.getMessage());
		}
		
		return null;
	}	

	public Order placeDelayedOrder(Order order, long delay){
		
		logger.debug("> placing order...");
		
		order.adviceGiven.add("OrderServiceImpl.placeDelayedOrder advice");
		
		somePrivateFunction(order);
		
		try {
			return orderDao.placeDelayedOrder(order, delay);
		} catch (Exception e) {		
			logger.error(e.getMessage());
			//e.printStackTrace();
		}
		
		return null;
	}	

	private void somePrivateFunction(Order order){
		logger.debug("somePrivateFunction...");
		order.adviceGiven.add("OrderServiceImpl.somePrivateFunction advice");
	}
	
	@PostConstruct
	public void initService(){
        if (orderDao != null) {
            logger.debug("MY DEP BEAN {}", orderDao.toString());
        }
        logger.debug("> {}: @PostConstruct <", this.getClass());
	}
	
	@PreDestroy
	public void destroyService(){
		logger.debug("> {}: @PreDestroy <", this.getClass());
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}    
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:299)
	at org.eclipse.ajdt.ui.AJDTNameEnvironmentProvider.problemFind(AJDTNameEnvironmentProvider.java:79)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process_aroundBody1$advice(CompilationUnitProblemFinder.java:234)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:1)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:195)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1079)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 0
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:385)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:577)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:504)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceTypeConverter.java:159)
	at org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.buildCompilationUnit(SourceTypeConverter.java:94)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.accept(CompilationUnitProblemFinder.java:112)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:154)
	at org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:183)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(CompilationUnitScope.java:487)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(CompilationUnitScope.java:541)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports(CompilationUnitScope.java:369)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:466)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:906)
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:236)
	... 22 more

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 09:42:23.911
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 09:42:23.913
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 09:42:23.919
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 09:42:23.921
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 09:42:23.923
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 09:42:23.929
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.ui 4 4 2012-03-29 09:50:12.674
!MESSAGE Part already exists in page layout: org.eclipse.jdt.ui.PackageExplorer.

!ENTRY org.eclipse.ui 4 4 2012-03-29 09:52:08.098
!MESSAGE Referenced part does not exist yet: org.eclipse.ui.views.TaskList.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 09:54:07.730
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 09:54:07.735
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 09:54:07.748
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 09:54:07.771
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 09:54:07.773
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 09:54:07.780
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.contribution.weaving.jdt 4 0 2012-03-29 11:36:22.958
!MESSAGE All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.components.ParentalAdvisor;
import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);


	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl = ParentalAdvisor.class)
	public static UsageTracked mixin;

	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}

    
    
    
    
	@Before("placeOrderService() && this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.components.ParentalAdvisor;
import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);


	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl = ParentalAdvisor.class)
	public static UsageTracked mixin;

	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}

    
    
    
    
	@Before("placeOrderService() && this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Customer;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testParentalAdviceNewInterface(){
		Order original = new Order();

		Order returned = orderService.placeOrder(original);

		logger.info(">>> testParentalAdviceTrackedAdvice returned: {}", returned);
		
		assertThat(orderService instanceof UsageTracked, is(true));
	}

	@Test
	public void testParentalAdviceTrackedAdvice(){
		Order original = new Order();

		Order returned = orderService.placeOrder(original);

		logger.info(">>> testParentalAdviceTrackedAdvice returned: {}", returned);
		
		assertThat(orderService instanceof UsageTracked, is(true));
		
		UsageTracked parentalAdvisor = applicationContext.getBean("orderService", UsageTracked.class);

		logger.info(">>> UsageTracked parentalAdvisor: {}", parentalAdvisor.trackUsage());
		logger.info(">>> UsageTracked parentalAdvisor: {}", parentalAdvisor.toString());
	}
	
}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() && args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.components;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.baselogic.service.UsageTracked;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component
public class ParentalAdvisor implements UsageTracked {
	
	private static final Logger logger = LoggerFactory.getLogger(ParentalAdvisor.class);

	public String trackUsage() {
		return ">>> --- trackUsage() >>>";
	}
   
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
!STACK 1
Java Model Exception: java.lang.RuntimeException: All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.components.ParentalAdvisor;
import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);


	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl = ParentalAdvisor.class)
	public static UsageTracked mixin;

	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}

    
    
    
    
	@Before("placeOrderService() && this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.components.ParentalAdvisor;
import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);


	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl = ParentalAdvisor.class)
	public static UsageTracked mixin;

	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}

    
    
    
    
	@Before("placeOrderService() && this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Customer;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testParentalAdviceNewInterface(){
		Order original = new Order();

		Order returned = orderService.placeOrder(original);

		logger.info(">>> testParentalAdviceTrackedAdvice returned: {}", returned);
		
		assertThat(orderService instanceof UsageTracked, is(true));
	}

	@Test
	public void testParentalAdviceTrackedAdvice(){
		Order original = new Order();

		Order returned = orderService.placeOrder(original);

		logger.info(">>> testParentalAdviceTrackedAdvice returned: {}", returned);
		
		assertThat(orderService instanceof UsageTracked, is(true));
		
		UsageTracked parentalAdvisor = applicationContext.getBean("orderService", UsageTracked.class);

		logger.info(">>> UsageTracked parentalAdvisor: {}", parentalAdvisor.trackUsage());
		logger.info(">>> UsageTracked parentalAdvisor: {}", parentalAdvisor.toString());
	}
	
}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() && args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.components;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.baselogic.service.UsageTracked;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component
public class ParentalAdvisor implements UsageTracked {
	
	private static final Logger logger = LoggerFactory.getLogger(ParentalAdvisor.class);

	public String trackUsage() {
		return ">>> --- trackUsage() >>>";
	}
   
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:299)
	at org.eclipse.ajdt.ui.AJDTNameEnvironmentProvider.problemFind(AJDTNameEnvironmentProvider.java:79)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process_aroundBody1$advice(CompilationUnitProblemFinder.java:234)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:1)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:195)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1079)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.RuntimeException: All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.components.ParentalAdvisor;
import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);


	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl = ParentalAdvisor.class)
	public static UsageTracked mixin;

	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}

    
    
    
    
	@Before("placeOrderService() && this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.components.ParentalAdvisor;
import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);


	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl = ParentalAdvisor.class)
	public static UsageTracked mixin;

	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}

    
    
    
    
	@Before("placeOrderService() && this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Customer;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testParentalAdviceNewInterface(){
		Order original = new Order();

		Order returned = orderService.placeOrder(original);

		logger.info(">>> testParentalAdviceTrackedAdvice returned: {}", returned);
		
		assertThat(orderService instanceof UsageTracked, is(true));
	}

	@Test
	public void testParentalAdviceTrackedAdvice(){
		Order original = new Order();

		Order returned = orderService.placeOrder(original);

		logger.info(">>> testParentalAdviceTrackedAdvice returned: {}", returned);
		
		assertThat(orderService instanceof UsageTracked, is(true));
		
		UsageTracked parentalAdvisor = applicationContext.getBean("orderService", UsageTracked.class);

		logger.info(">>> UsageTracked parentalAdvisor: {}", parentalAdvisor.trackUsage());
		logger.info(">>> UsageTracked parentalAdvisor: {}", parentalAdvisor.toString());
	}
	
}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() && args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.components;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.baselogic.service.UsageTracked;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component
public class ParentalAdvisor implements UsageTracked {
	
	private static final Logger logger = LoggerFactory.getLogger(ParentalAdvisor.class);

	public String trackUsage() {
		return ">>> --- trackUsage() >>>";
	}
   
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
	... 23 more
Caused by: java.lang.ArrayIndexOutOfBoundsException
Caused by: java.lang.RuntimeException: All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.components.ParentalAdvisor;
import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);


	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl = ParentalAdvisor.class)
	public static UsageTracked mixin;

	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}

    
    
    
    
	@Before("placeOrderService() && this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.components.ParentalAdvisor;
import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);


	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl = ParentalAdvisor.class)
	public static UsageTracked mixin;

	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}

    
    
    
    
	@Before("placeOrderService() && this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Customer;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testParentalAdviceNewInterface(){
		Order original = new Order();

		Order returned = orderService.placeOrder(original);

		logger.info(">>> testParentalAdviceTrackedAdvice returned: {}", returned);
		
		assertThat(orderService instanceof UsageTracked, is(true));
	}

	@Test
	public void testParentalAdviceTrackedAdvice(){
		Order original = new Order();

		Order returned = orderService.placeOrder(original);

		logger.info(">>> testParentalAdviceTrackedAdvice returned: {}", returned);
		
		assertThat(orderService instanceof UsageTracked, is(true));
		
		UsageTracked parentalAdvisor = applicationContext.getBean("orderService", UsageTracked.class);

		logger.info(">>> UsageTracked parentalAdvisor: {}", parentalAdvisor.trackUsage());
		logger.info(">>> UsageTracked parentalAdvisor: {}", parentalAdvisor.toString());
	}
	
}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() && args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.components;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.baselogic.service.UsageTracked;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component
public class ParentalAdvisor implements UsageTracked {
	
	private static final Logger logger = LoggerFactory.getLogger(ParentalAdvisor.class);

	public String trackUsage() {
		return ">>> --- trackUsage() >>>";
	}
   
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:299)
	at org.eclipse.ajdt.ui.AJDTNameEnvironmentProvider.problemFind(AJDTNameEnvironmentProvider.java:79)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process_aroundBody1$advice(CompilationUnitProblemFinder.java:234)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:1)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:195)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1079)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.ArrayIndexOutOfBoundsException
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2012-03-29 11:36:22.961
!MESSAGE All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.components.ParentalAdvisor;
import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);


	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl = ParentalAdvisor.class)
	public static UsageTracked mixin;

	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}

    
    
    
    
	@Before("placeOrderService() && this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.components.ParentalAdvisor;
import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);


	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl = ParentalAdvisor.class)
	public static UsageTracked mixin;

	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}

    
    
    
    
	@Before("placeOrderService() && this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Customer;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testParentalAdviceNewInterface(){
		Order original = new Order();

		Order returned = orderService.placeOrder(original);

		logger.info(">>> testParentalAdviceTrackedAdvice returned: {}", returned);
		
		assertThat(orderService instanceof UsageTracked, is(true));
	}

	@Test
	public void testParentalAdviceTrackedAdvice(){
		Order original = new Order();

		Order returned = orderService.placeOrder(original);

		logger.info(">>> testParentalAdviceTrackedAdvice returned: {}", returned);
		
		assertThat(orderService instanceof UsageTracked, is(true));
		
		UsageTracked parentalAdvisor = applicationContext.getBean("orderService", UsageTracked.class);

		logger.info(">>> UsageTracked parentalAdvisor: {}", parentalAdvisor.trackUsage());
		logger.info(">>> UsageTracked parentalAdvisor: {}", parentalAdvisor.toString());
	}
	
}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() && args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.components;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.baselogic.service.UsageTracked;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component
public class ParentalAdvisor implements UsageTracked {
	
	private static final Logger logger = LoggerFactory.getLogger(ParentalAdvisor.class);

	public String trackUsage() {
		return ">>> --- trackUsage() >>>";
	}
   
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
!STACK 0
java.lang.RuntimeException: All Source code being worked on:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.components.ParentalAdvisor;
import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);


	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl = ParentalAdvisor.class)
	public static UsageTracked mixin;

	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}

    
    
    
    
	@Before("placeOrderService() && this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
	}

}
----------------------------------- SOURCE END ------------------------------------------------------------------------ WORKING COPIES ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.DeclareParents;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.components.ParentalAdvisor;
import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.UnImplementedService;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdvice
 * 
 * Introductions (known as inter-type declarations in AspectJ) enable an 
 * aspect to declare that advised objects implement a given interface, 
 * and to provide an implementation of that interface on behalf of 
 * those objects.
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class ParentalAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(ParentalAdvice.class);


	@DeclareParents(value="com.baselogic.service.OrderService*+",
			defaultImpl = ParentalAdvisor.class)
	public static UsageTracked mixin;

	
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}

    
    
    
    
	@Before("placeOrderService() && this(usageTracked)")
	public void recordUsage(UsageTracked usageTracked) {
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
		logger.info(">>> Parental Advice: {}", usageTracked.trackUsage());
	}

}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.demos;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.zip.DataFormatException;

import javax.naming.InsufficientResourcesException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.domain.Customer;
import com.baselogic.domain.Order;
import com.baselogic.service.OrderService;
import com.baselogic.service.OrderServiceImpl;
import com.baselogic.service.UsageTracked;

/**
 * ParentalAdviceTests
 * 
 * <p>Spring Certification objective: 1.2 Lifecycle</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#beans">Objective 1.2 Lifecycle</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@ContextConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class ParentalAdviceTests {
	
	private final Logger logger = LoggerFactory
			.getLogger(ParentalAdviceTests.class);

	@Autowired
	ApplicationContext applicationContext;
	
	@Autowired
	OrderService orderService;

	@Test
	public void testParentalAdviceNewInterface(){
		Order original = new Order();

		Order returned = orderService.placeOrder(original);

		logger.info(">>> testParentalAdviceTrackedAdvice returned: {}", returned);
		
		assertThat(orderService instanceof UsageTracked, is(true));
	}

	@Test
	public void testParentalAdviceTrackedAdvice(){
		Order original = new Order();

		Order returned = orderService.placeOrder(original);

		logger.info(">>> testParentalAdviceTrackedAdvice returned: {}", returned);
		
		assertThat(orderService instanceof UsageTracked, is(true));
		
		UsageTracked parentalAdvisor = applicationContext.getBean("orderService", UsageTracked.class);

		logger.info(">>> UsageTracked parentalAdvisor: {}", parentalAdvisor.trackUsage());
		logger.info(">>> UsageTracked parentalAdvisor: {}", parentalAdvisor.toString());
	}
	
}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.aspects;

import java.lang.reflect.Method;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.aop.MethodBeforeAdvice;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;

/**
 * BeforeAdvice
 * 
 * Spring supported types of pointcuts:
 * 
 * <b>execution</b> - for matching method execution join points, this is the primary pointcut designator you
 * will use when working with Spring AOP
 * 
 * <b>within</b> - limits matching to join points within certain types (simply the execution of a method
 * declared within a matching type when using Spring AOP)
 * 
 * <b>this</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * bean reference (Spring AOP proxy) is an instance of the given type
 * 
 * <b>target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * target object (application object being proxied) is an instance of the given type
 * 
 * <b>args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * arguments are instances of the given types
 * 
 * <b>@target</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * class of the executing object has an annotation of the given type
 * 
 * <b>@args</b> - limits matching to join points (the execution of methods when using Spring AOP) where the
 * runtime type of the actual arguments passed have annotations of the given type(s)
 * 
 * <b>@within</b> - limits matching to join points within types that have the given annotation (the execution
 * of methods declared in types with the given annotation when using Spring AOP)
 * 
 * <b>@annotation</b> - limits matching to join points where the subject of the join point (method being
 * executed in Spring AOP) has the given annotation
 * 
 * <p>Spring Certification objective: 2.1 AOP Recommendations</p>
 * <p>Spring Certification objective: 2.2 AOP Pointcuts</p>
 * <p>Spring Certification objective: 2.3 AOP Advice</p>
 * 
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.1 AOP Recommendations</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.2 AOP Pointcuts</a>
 * @see <a href="http://springcert.sourceforge.net/core-3/index.html#aop">Objective 2.3 AOP Advice</a>
 *
 * @author Mick Knutson
 * @see <a href="http://www.baselogic.com">Blog: http://baselogic.com</a>
 * @see <a href="http://linkedin.com/in/mickknutson">LinkedIN: http://linkedin.com/in/mickknutson</a>
 * @see <a href="http://twitter.com/mickknutson">Twitter: http://twitter.com/mickknutson</a>
 * @see <a href="http://github.com/mickknutson">Git hub: http://github.com/mickknutson</a>
 * 
 * @see <a href="http://www.packtpub.com/java-ee6-securing-tuning-extending-enterprise-applications-cookbook/book">JavaEE 7 Cookbook Packt</a>
 * @see <a href="http://www.amazon.com/Cookbook-securing-extending-enterprise-applications/dp/1849683166">JavaEE 7 Cookbook Amazon</a>
 * 
 * @since 2012
 * 
 */
@Aspect
public class BeforeAdvice {
	
	private final Logger logger = LoggerFactory.getLogger(BeforeAdvice.class);
	
    /**
     * Any public method execution
     */
	/*@Pointcut("execution(public * *(..))")
    private void anyPublicOperation() {}*/
	
	/**
	 * Specific method execution
	 */
    @Pointcut("execution(* com.baselogic.*.placeOrder(..))")
    public void placeOrderService() {}

	/**
	 * Specific method execution
	 */
    /*@Pointcut("execution(* com.baselogic.*.placeOrder(order))")
    public void placeOrderServiceWithArgument() {}*/

    /**
     * Any private method execution
     */
	@Pointcut("execution(private * *(..))")
    private void anyPrivateOperation() {}
    
	/**
	 * Within a given package
	 */
    @Pointcut("within(com.baselogic.service..*)")
    private void inService() {}
       
    /**
     * Execution in any method in any class in a package
     */
    @Pointcut("execution(* com.baselogic.dao.*.*(..))")
    public void dataAccessOperation() {}

    
    
    
    //=== Join Points =======================================================//
    
    

	/**
	 * Advice on multiple pointcut's
	 * @throws Throwable
	 */
	@Before("anyPrivateOperation() && inService()")
	public void beforePrivateMethodsInService() throws Throwable {
		logger.info(">>> ----- beforePrivateMethodsInService...>>>");
	}

	
	/**
	 * Advice with pointcut in different class.
	 * @throws Throwable
	 */
	@Before("dataAccessOperation() && args(order,..)")
	public void beforeOrderDao(Order order) throws Throwable {
		logger.info(">>> ----- beforeOrderDao...>>> {}", order);
		order.adviceGiven.add("beforeOrderDao advice");
	}	


}
----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPY SOURCE BEGIN -------------------------------------
package com.baselogic.components;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.baselogic.service.UsageTracked;

/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component
public class ParentalAdvisor implements UsageTracked {
	
	private static final Logger logger = LoggerFactory.getLogger(ParentalAdvisor.class);

	public String trackUsage() {
		return ">>> --- trackUsage() >>>";
	}
   
}

----------------------------------- WORKING COPY SOURCE END ------------------------------------------------------------------------ WORKING COPIES END -------------------------------------
	at org.eclipse.ajdt.core.parserbridge.AJCompilationUnitProblemFinder.processAJ(AJCompilationUnitProblemFinder.java:299)
	at org.eclipse.ajdt.ui.AJDTNameEnvironmentProvider.problemFind(AJDTNameEnvironmentProvider.java:79)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process_aroundBody1$advice(CompilationUnitProblemFinder.java:234)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:1)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:195)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1079)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.ArrayIndexOutOfBoundsException

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 12:38:12.549
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 12:38:12.552
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 12:38:12.559
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 12:38:12.561
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 12:38:12.563
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-29 12:38:12.571
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.springframework.ide.eclipse.beans.core 4 2 2012-03-29 12:57:58.131
!MESSAGE Problems occurred when invoking code from plug-in: "org.springframework.ide.eclipse.beans.core".
!STACK 0
java.lang.IllegalArgumentException: Attribute 'name' not found
	at org.springframework.util.Assert.notNull(Assert.java:112)
	at org.springframework.core.annotation.AnnotationAttributes.doGet(AnnotationAttributes.java:126)
	at org.springframework.core.annotation.AnnotationAttributes.getStringArray(AnnotationAttributes.java:88)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:192)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:118)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:294)
	at com.springsource.sts.ide.metadata.process.JdtConfigurationClassPostProcessor.postProcess(JdtConfigurationClassPostProcessor.java:64)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$4.run(BeansConfig.java:748)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.executePostProcessor(BeansConfig.java:741)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.postProcess(BeansConfig.java:625)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.access$8(BeansConfig.java:584)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:450)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:1)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

!ENTRY org.springframework.ide.eclipse.beans.core 4 0 2012-03-29 12:57:58.135
!MESSAGE Internal Error
!STACK 0
java.lang.IllegalArgumentException: Attribute 'name' not found
	at org.springframework.util.Assert.notNull(Assert.java:112)
	at org.springframework.core.annotation.AnnotationAttributes.doGet(AnnotationAttributes.java:126)
	at org.springframework.core.annotation.AnnotationAttributes.getStringArray(AnnotationAttributes.java:88)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:192)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:118)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:294)
	at com.springsource.sts.ide.metadata.process.JdtConfigurationClassPostProcessor.postProcess(JdtConfigurationClassPostProcessor.java:64)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$4.run(BeansConfig.java:748)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.executePostProcessor(BeansConfig.java:741)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.postProcess(BeansConfig.java:625)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.access$8(BeansConfig.java:584)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:450)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:1)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

!ENTRY org.springframework.ide.eclipse.beans.core 4 2 2012-03-29 12:57:58.152
!MESSAGE Problems occurred when invoking code from plug-in: "org.springframework.ide.eclipse.beans.core".
!STACK 0
java.lang.IllegalArgumentException: Attribute 'name' not found
	at org.springframework.util.Assert.notNull(Assert.java:112)
	at org.springframework.core.annotation.AnnotationAttributes.doGet(AnnotationAttributes.java:126)
	at org.springframework.core.annotation.AnnotationAttributes.getStringArray(AnnotationAttributes.java:88)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:192)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:118)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:294)
	at com.springsource.sts.ide.metadata.process.JdtConfigurationClassPostProcessor.postProcess(JdtConfigurationClassPostProcessor.java:64)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$4.run(BeansConfig.java:748)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.executePostProcessor(BeansConfig.java:741)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.postProcess(BeansConfig.java:625)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.access$8(BeansConfig.java:584)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:450)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:1)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

!ENTRY org.springframework.ide.eclipse.beans.core 4 0 2012-03-29 12:57:58.157
!MESSAGE Internal Error
!STACK 0
java.lang.IllegalArgumentException: Attribute 'name' not found
	at org.springframework.util.Assert.notNull(Assert.java:112)
	at org.springframework.core.annotation.AnnotationAttributes.doGet(AnnotationAttributes.java:126)
	at org.springframework.core.annotation.AnnotationAttributes.getStringArray(AnnotationAttributes.java:88)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:192)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:118)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:294)
	at com.springsource.sts.ide.metadata.process.JdtConfigurationClassPostProcessor.postProcess(JdtConfigurationClassPostProcessor.java:64)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$4.run(BeansConfig.java:748)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.executePostProcessor(BeansConfig.java:741)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.postProcess(BeansConfig.java:625)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.access$8(BeansConfig.java:584)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:450)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:1)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

!ENTRY org.springframework.ide.eclipse.beans.core 4 2 2012-03-29 12:57:58.292
!MESSAGE Problems occurred when invoking code from plug-in: "org.springframework.ide.eclipse.beans.core".
!STACK 0
java.lang.IllegalArgumentException: Attribute 'name' not found
	at org.springframework.util.Assert.notNull(Assert.java:112)
	at org.springframework.core.annotation.AnnotationAttributes.doGet(AnnotationAttributes.java:126)
	at org.springframework.core.annotation.AnnotationAttributes.getStringArray(AnnotationAttributes.java:88)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:192)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:118)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:294)
	at com.springsource.sts.ide.metadata.process.JdtConfigurationClassPostProcessor.postProcess(JdtConfigurationClassPostProcessor.java:64)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$4.run(BeansConfig.java:748)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.executePostProcessor(BeansConfig.java:741)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.postProcess(BeansConfig.java:625)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.access$8(BeansConfig.java:584)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:450)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:1)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

!ENTRY org.springframework.ide.eclipse.beans.core 4 0 2012-03-29 12:57:58.294
!MESSAGE Internal Error
!STACK 0
java.lang.IllegalArgumentException: Attribute 'name' not found
	at org.springframework.util.Assert.notNull(Assert.java:112)
	at org.springframework.core.annotation.AnnotationAttributes.doGet(AnnotationAttributes.java:126)
	at org.springframework.core.annotation.AnnotationAttributes.getStringArray(AnnotationAttributes.java:88)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:192)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:118)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:294)
	at com.springsource.sts.ide.metadata.process.JdtConfigurationClassPostProcessor.postProcess(JdtConfigurationClassPostProcessor.java:64)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$4.run(BeansConfig.java:748)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.executePostProcessor(BeansConfig.java:741)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.postProcess(BeansConfig.java:625)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig.access$8(BeansConfig.java:584)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:450)
	at org.springframework.ide.eclipse.beans.core.internal.model.BeansConfig$3.call(BeansConfig.java:1)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 12:58:07.990
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 12:58:08.013
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:07:12.749
!MESSAGE The POM for com.h2database:h2:jar:3.165 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:07:15.860
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:07:15.866
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:08:58.274
!MESSAGE The POM for com.h2database:h2:jar:3.165 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:09:22.340
!MESSAGE The POM for com.h2database:h2:jar:3.165 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:14:59.600
!MESSAGE The POM for com.h2database:h2:jar:3.165 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:15:19.864
!MESSAGE The POM for com.h2database:h2:jar:3.165 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:15:59.415
!MESSAGE The POM for com.h2database:h2:jar:3.165 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:16:11.303
!MESSAGE The POM for com.h2database:h2:jar:3.165 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:16:11.562
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:16:11.567
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:16:12.050
!MESSAGE The POM for com.h2database:h2:jar:3.165 is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:30:43.844
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:30:43.847
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:30:44.394
!MESSAGE File /SpringMvc/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:30:44.397
!MESSAGE File /SpringMvc/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.wst.common.project.facet.core 4 0 2012-03-29 13:30:44.660
!MESSAGE Project facet grails.app has not been defined. It is used in plugin com.springsource.sts.server.tc.core.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:34:41.501
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 13:34:41.502
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:25:40.224
!MESSAGE Unexpected error on close

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:25:41.456
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:25:41.490
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:25:43.267
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:25:43.272
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.jdt.core 4 4 2012-03-29 15:25:45.341
!MESSAGE JavaBuilder handling ImageBuilderInternalException while building: SpringHibernate
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:793)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:114)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:46)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:254)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:184)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Contains: Could not delete '/SpringHibernate/target/classes/com'.
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:352)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:352)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:798)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1941)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:780)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:114)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:46)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:254)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:184)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Contains: Problems encountered while deleting files.
Contains: Could not delete: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringHibernate\target\classes\com\baselogic.
Contains: Could not delete: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringHibernate\target\classes\com.
!SUBENTRY 1 org.eclipse.core.resources 4 273 2012-03-29 15:25:45.342
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 2 org.eclipse.core.resources 4 273 2012-03-29 15:25:45.342
!MESSAGE Could not delete '/SpringHibernate/target/classes/com'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:352)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:352)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:798)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1941)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:780)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:114)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:46)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:254)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:184)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Contains: Problems encountered while deleting files.
Contains: Could not delete: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringHibernate\target\classes\com\baselogic.
Contains: Could not delete: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringHibernate\target\classes\com.
!SUBENTRY 3 org.eclipse.core.resources 4 273 2012-03-29 15:25:45.342
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 4 org.eclipse.core.filesystem 4 273 2012-03-29 15:25:45.342
!MESSAGE Problems encountered while deleting files.
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2012-03-29 15:25:45.342
!MESSAGE Could not delete: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringHibernate\target\classes\com\baselogic.
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2012-03-29 15:25:45.342
!MESSAGE Could not delete: C:\usr\SYNCH\projects\Git-Hub\SpringCertification\SpringHibernate\target\classes\com.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:25:45.357
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:25:45.370
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:27:01.626
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:27:01.632
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:28:38.033
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:28:38.037
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:28:39.298
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:28:39.350
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:33:35.801
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:33:35.804
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:33:37.039
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:33:37.043
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:34:35.762
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:34:35.765
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:35:15.121
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:35:15.126
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:35:16.371
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:35:16.375
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:35:30.103
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:35:30.107
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:36:47.453
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:36:47.458
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:37:04.146
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:37:04.164
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:38:48.143
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:38:48.147
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:38:48.667
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:38:48.715
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:38:49.887
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:38:50.539
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:40:04.066
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:40:04.069
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:41:40.825
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:41:40.829
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:45:32.594
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:45:32.598
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:46:27.735
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:46:27.740
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:47:48.877
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:47:48.891
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:48:04.771
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:48:04.776
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:56:16.297
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:56:16.304
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:56:54.977
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:56:54.984
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:58:27.810
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 15:58:27.815
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:01:56.924
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:01:56.976
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:02:09.158
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:02:09.161
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:05:01.655
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:05:01.661
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:06:23.080
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:06:23.086
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:08:50.031
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:08:50.065
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:11:00.101
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:11:00.105
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:12:38.760
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:12:38.764
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:15:52.204
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:15:52.242
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:16:34.105
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:16:34.109
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:18:03.594
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:18:03.597
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:26:41.764
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:26:41.769
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:27:56.409
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:27:56.442
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:29:54.258
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:29:54.263
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:30:35.492
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:30:35.495
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:30:48.606
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:30:48.612
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:32:14.633
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:32:14.666
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:35:41.206
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:35:41.212
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:37:55.573
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:37:55.575
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:42:55.638
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:42:55.643
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:47:44.182
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:47:44.246
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:48:07.456
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:48:07.460
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:52:45.618
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:52:45.621
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:53:11.732
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:53:11.734
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:53:28.937
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:53:28.939
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:53:55.000
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:53:55.003
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:54:01.940
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:54:01.942
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:54:06.519
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:54:06.522
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:54:09.544
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:54:09.548
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:54:22.029
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:54:22.032
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:56:03.488
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:56:03.491
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:56:57.411
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:56:57.414
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:56:59.514
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:56:59.517
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:58:29.806
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:58:29.809
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:59:29.724
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 16:59:29.728
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:00:12.536
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:00:12.539
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:00:55.078
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:00:55.082
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:04:17.741
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:04:17.747
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:06:12.372
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:06:12.375
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:06:35.520
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:06:35.523
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:08:12.936
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:08:12.941
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:08:17.872
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:08:17.875
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:09:16.245
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:09:16.248
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:09:27.377
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:09:27.382
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:12:09.710
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:12:09.712
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:12:27.836
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:12:27.838
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:13:05.512
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:13:05.515
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:14:43.756
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:14:43.882
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:15:24.860
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:15:24.863
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:16:24.595
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:16:24.598
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:22:44.724
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:22:44.726
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:23:41.745
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:23:41.757
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:24:00.363
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:24:00.367
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:24:26.368
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-29 17:24:26.371
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:33:53.390
!MESSAGE File /SpringAop/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:33:53.398
!MESSAGE File /SpringAop/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:33:53.712
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:33:53.742
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:33:55.079
!MESSAGE The POM for org.hibernate:hibernate-validator:jar:3.6.0.Final is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:33:56.800
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:33:56.802
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:33:58.539
!MESSAGE The POM for org.hibernate:hibernate-validator:jar:3.6.0.Final is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:34:58.616
!MESSAGE The POM for org.hibernate:hibernate-validator:jar:3.6.0.Final is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:36:02.567
!MESSAGE File /SpringAop/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:36:02.569
!MESSAGE File /SpringAop/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:36:02.916
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:36:02.918
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:36:11.422
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:36:11.423
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 07:39:02.188
!MESSAGE Launch configuration SpringAop Tests references closed project SpringAop

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 07:39:02.192
!MESSAGE Launch configuration SpringAop Tests references closed project SpringAop

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 07:39:02.207
!MESSAGE Launch configuration SpringAop Tests references closed project SpringAop

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 07:42:00.049
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 07:42:00.053
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 07:42:00.065
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 07:42:00.069
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 07:42:00.072
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 07:42:00.084
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:43:19.581
!MESSAGE File /MvcDemo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:43:19.584
!MESSAGE File /MvcDemo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:43:20.279
!MESSAGE File /SpringMvc/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:43:20.281
!MESSAGE File /SpringMvc/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:52:24.274
!MESSAGE File /MvcDemo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:52:24.275
!MESSAGE File /MvcDemo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:52:24.752
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:52:24.788
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:52:25.492
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:52:25.495
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:52:26.039
!MESSAGE File /SpringMvc/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:52:26.040
!MESSAGE File /SpringMvc/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY com.springsource.sts.wizard 4 0 2012-03-30 07:53:31.449
!MESSAGE Exception during template project creation
!STACK 0
org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:4282)
	at org.eclipse.swt.SWT.error(SWT.java:4197)
	at org.eclipse.swt.SWT.error(SWT.java:4168)
	at org.eclipse.swt.widgets.Display.error(Display.java:1258)
	at org.eclipse.swt.widgets.Display.checkDevice(Display.java:764)
	at org.eclipse.swt.widgets.Display.getActiveShell(Display.java:1467)
	at com.springsource.sts.ui.UiUtil.getShell(UiUtil.java:88)
	at com.springsource.sts.ui.UiStatusHandler.logAndDisplay(UiStatusHandler.java:21)
	at com.springsource.sts.wizard.template.infrastructure.processor.TemplateProjectCreator.createProject(TemplateProjectCreator.java:129)
	at com.springsource.sts.wizard.template.infrastructure.processor.DirectoryProcessor.process(DirectoryProcessor.java:49)
	at com.springsource.sts.wizard.template.infrastructure.processor.Processor.process(Processor.java:37)
	at com.springsource.sts.wizard.template.TemplateWizard$1.run(TemplateWizard.java:106)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)

!ENTRY com.springsource.sts.wizard 4 0 2012-03-30 07:53:39.485
!MESSAGE Exception during template project creation
!STACK 0
org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:4282)
	at org.eclipse.swt.SWT.error(SWT.java:4197)
	at org.eclipse.swt.SWT.error(SWT.java:4168)
	at org.eclipse.swt.widgets.Display.error(Display.java:1258)
	at org.eclipse.swt.widgets.Display.checkDevice(Display.java:764)
	at org.eclipse.swt.widgets.Display.getActiveShell(Display.java:1467)
	at com.springsource.sts.ui.UiUtil.getShell(UiUtil.java:88)
	at com.springsource.sts.ui.UiStatusHandler.logAndDisplay(UiStatusHandler.java:21)
	at com.springsource.sts.wizard.template.infrastructure.processor.TemplateProjectCreator.createProject(TemplateProjectCreator.java:129)
	at com.springsource.sts.wizard.template.infrastructure.processor.DirectoryProcessor.process(DirectoryProcessor.java:49)
	at com.springsource.sts.wizard.template.infrastructure.processor.Processor.process(Processor.java:37)
	at com.springsource.sts.wizard.template.TemplateWizard$1.run(TemplateWizard.java:106)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:53:55.915
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:53:55.919
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:54:00.503
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 07:54:00.507
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2012-03-30 08:06:55.629 -----------------------------------------------
eclipse.buildId=2.9.1.201203221000-RELEASE
java.version=1.7.0_03
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product com.springsource.sts.ide

!ENTRY org.eclipse.ui.workbench 2 0 2012-03-30 08:08:04.445
!MESSAGE A handler conflict occurred.  This may disable some commands.
!SUBENTRY 1 org.eclipse.ui.workbench 2 0 2012-03-30 08:08:04.445
!MESSAGE Conflict for 'ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode':
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@724c6de5,
	expression=,sourcePriority=0)
HandlerActivation(commandId=ecobertura.ui.launching.javaApplicationLaunchShortcut.ecobertura.core.coverageLaunchMode,
	handler=org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@77c31002,
	expression=,sourcePriority=0)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:08:45.995
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:08:46.012
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:08:55.094
!MESSAGE File /MvcDemo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:08:55.096
!MESSAGE File /MvcDemo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:08:56.123
!MESSAGE File /SpringCore/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:08:56.129
!MESSAGE File /SpringCore/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:08:56.877
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:08:56.879
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:08:57.653
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:08:58.017
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:09:00.377
!MESSAGE File /SpringMvc/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:09:00.379
!MESSAGE File /SpringMvc/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:09:12.747
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:09:12.759
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:11:01.163
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:11:01.182
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:11:03.087
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:11:03.121
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:11:12.960
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:11:12.963
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.core.jobs 4 2 2012-03-30 08:11:19.902
!MESSAGE An internal error occurred during: "reload maven project".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.configureExecutionRequest(ProjectRegistryManager.java:792)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.createExecutionRequest(ProjectRegistryManager.java:787)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.readProjectWithDependencies(ProjectRegistryManager.java:742)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.create(ProjectRegistryManager.java:167)
	at org.eclipse.m2e.core.internal.project.registry.MavenProjectManager.create(MavenProjectManager.java:70)
	at org.eclipse.m2e.core.ui.internal.actions.SelectionUtil.getMavenProject(SelectionUtil.java:276)
	at org.eclipse.m2e.editor.pom.MavenPomEditor.readMavenProject(MavenPomEditor.java:744)
	at org.eclipse.m2e.editor.pom.MavenPomEditor$7.run(MavenPomEditor.java:1070)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 08:11:20.325
!MESSAGE The file does not exist.

!ENTRY org.eclipse.wst.sse.core 4 4 2012-03-30 08:11:21.356
!MESSAGE can not calculate a model ID without a document reference
!STACK 0
java.lang.IllegalArgumentException: can not calculate a model ID without a document reference
	at org.eclipse.wst.sse.core.internal.FileBufferModelManager.calculateId(FileBufferModelManager.java:408)
	at org.eclipse.wst.sse.core.internal.model.ModelManagerImpl._getModelFor(ModelManagerImpl.java:613)
	at org.eclipse.wst.sse.core.internal.model.ModelManagerImpl.getModelForRead(ModelManagerImpl.java:1433)
	at org.eclipse.m2e.core.ui.internal.editing.PomEdits.performOnDOMDocument(PomEdits.java:384)
	at org.eclipse.m2e.editor.pom.MavenPomEditorPage.updateParentAction(MavenPomEditorPage.java:375)
	at org.eclipse.m2e.editor.pom.MavenPomEditorPage.createFormContent(MavenPomEditorPage.java:191)
	at org.eclipse.m2e.editor.pom.OverviewPage.createFormContent(OverviewPage.java:248)
	at org.eclipse.ui.forms.editor.FormPage$1.run(FormPage.java:152)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.forms.editor.FormPage.createPartControl(FormPage.java:150)
	at org.eclipse.ui.forms.editor.FormEditor.pageChange(FormEditor.java:471)
	at org.eclipse.m2e.editor.pom.MavenPomEditor.pageChange(MavenPomEditor.java:390)
	at org.eclipse.ui.part.MultiPageEditorPart.setActivePage(MultiPageEditorPart.java:1067)
	at org.eclipse.ui.forms.editor.FormEditor.setActivePage(FormEditor.java:603)
	at org.eclipse.m2e.editor.pom.MavenPomEditor.setActivePage(MavenPomEditor.java:1041)
	at org.eclipse.m2e.editor.pom.MavenPomEditor.selectActivePage(MavenPomEditor.java:377)
	at org.eclipse.m2e.editor.pom.MavenPomEditor.addPages(MavenPomEditor.java:370)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:313)
	at org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:180)
	at org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:270)
	at org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:473)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1245)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1198)
	at org.eclipse.ui.internal.PartStack.presentationSelectionChanged(PartStack.java:834)
	at org.eclipse.ui.internal.PartStack.access$1(PartStack.java:823)
	at org.eclipse.ui.internal.PartStack$1.selectPart(PartStack.java:137)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation$1.handleEvent(TabbedStackPresentation.java:133)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:269)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:278)
	at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder.access$1(DefaultTabFolder.java:1)
	at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder$2.handleEvent(DefaultTabFolder.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:774)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:2746)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1433)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:257)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 08:11:21.382
!MESSAGE Resource '/SpringJpa2/pom.xml' does not exist.

!ENTRY org.eclipse.m2e.editor 4 0 2012-03-30 08:11:21.384
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.m2e.editor.pom.MavenPomEditorPage.setActive(MavenPomEditorPage.java:213)
	at org.eclipse.ui.forms.editor.FormEditor.pageChange(FormEditor.java:486)
	at org.eclipse.m2e.editor.pom.MavenPomEditor.pageChange(MavenPomEditor.java:390)
	at org.eclipse.ui.part.MultiPageEditorPart.setActivePage(MultiPageEditorPart.java:1067)
	at org.eclipse.ui.forms.editor.FormEditor.setActivePage(FormEditor.java:603)
	at org.eclipse.m2e.editor.pom.MavenPomEditor.setActivePage(MavenPomEditor.java:1041)
	at org.eclipse.m2e.editor.pom.MavenPomEditor.selectActivePage(MavenPomEditor.java:377)
	at org.eclipse.m2e.editor.pom.MavenPomEditor.addPages(MavenPomEditor.java:370)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:313)
	at org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:180)
	at org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:270)
	at org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:473)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1245)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1198)
	at org.eclipse.ui.internal.PartStack.presentationSelectionChanged(PartStack.java:834)
	at org.eclipse.ui.internal.PartStack.access$1(PartStack.java:823)
	at org.eclipse.ui.internal.PartStack$1.selectPart(PartStack.java:137)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation$1.handleEvent(TabbedStackPresentation.java:133)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:269)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:278)
	at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder.access$1(DefaultTabFolder.java:1)
	at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder$2.handleEvent(DefaultTabFolder.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:774)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:2746)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1433)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:257)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 08:11:21.388
!MESSAGE Resource '/SpringJpa2/pom.xml' does not exist.

!ENTRY org.eclipse.ui 4 0 2012-03-30 08:11:21.405
!MESSAGE Unable to create editor ID org.eclipse.m2e.editor.MavenPomEditor: An unexpected exception was thrown.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.m2e.editor.pom.MavenPomEditorPage.setActive(MavenPomEditorPage.java:213)
	at org.eclipse.ui.forms.editor.FormEditor.setActivePage(FormEditor.java:605)
	at org.eclipse.m2e.editor.pom.MavenPomEditor.setActivePage(MavenPomEditor.java:1041)
	at org.eclipse.m2e.editor.pom.MavenPomEditor.selectActivePage(MavenPomEditor.java:377)
	at org.eclipse.m2e.editor.pom.MavenPomEditor.addPages(MavenPomEditor.java:370)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:348)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:670)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:313)
	at org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:180)
	at org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:270)
	at org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:473)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1245)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1198)
	at org.eclipse.ui.internal.PartStack.presentationSelectionChanged(PartStack.java:834)
	at org.eclipse.ui.internal.PartStack.access$1(PartStack.java:823)
	at org.eclipse.ui.internal.PartStack$1.selectPart(PartStack.java:137)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation$1.handleEvent(TabbedStackPresentation.java:133)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:269)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:278)
	at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder.access$1(DefaultTabFolder.java:1)
	at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder$2.handleEvent(DefaultTabFolder.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:774)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:2746)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1433)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:257)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.ui 2 2 2012-03-30 08:11:21.441
!MESSAGE Ignored attempt to add saveable that was already registered
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: unknown saveable: org.eclipse.ui.internal.DefaultSaveable@2d8c63b1 from part: org.eclipse.ui.internal.ErrorEditorPart@2d8c63b1
	at org.eclipse.ui.internal.SaveablesList.logWarning(SaveablesList.java:187)
	at org.eclipse.ui.internal.SaveablesList.addModel(SaveablesList.java:117)
	at org.eclipse.ui.internal.SaveablesList.addModels(SaveablesList.java:289)
	at org.eclipse.ui.internal.SaveablesList.postOpen(SaveablesList.java:695)
	at org.eclipse.ui.internal.PartList.partOpened(PartList.java:234)
	at org.eclipse.ui.internal.PartList.access$0(PartList.java:210)
	at org.eclipse.ui.internal.PartList$1.propertyChanged(PartList.java:40)
	at org.eclipse.ui.internal.WorkbenchPartReference.fireInternalPropertyChange(WorkbenchPartReference.java:375)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:610)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:313)
	at org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:180)
	at org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:270)
	at org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:473)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1245)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1198)
	at org.eclipse.ui.internal.PartStack.presentationSelectionChanged(PartStack.java:834)
	at org.eclipse.ui.internal.PartStack.access$1(PartStack.java:823)
	at org.eclipse.ui.internal.PartStack$1.selectPart(PartStack.java:137)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation$1.handleEvent(TabbedStackPresentation.java:133)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:269)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:278)
	at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder.access$1(DefaultTabFolder.java:1)
	at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder$2.handleEvent(DefaultTabFolder.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:774)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:2746)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1433)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:257)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.core 4 4 2012-03-30 08:11:21.544
!MESSAGE can not calculate a model ID without a document reference
!STACK 0
java.lang.IllegalArgumentException: can not calculate a model ID without a document reference
	at org.eclipse.wst.sse.core.internal.FileBufferModelManager.calculateId(FileBufferModelManager.java:408)
	at org.eclipse.wst.sse.core.internal.model.ModelManagerImpl._getModelFor(ModelManagerImpl.java:613)
	at org.eclipse.wst.sse.core.internal.model.ModelManagerImpl.getModelForRead(ModelManagerImpl.java:1433)
	at org.eclipse.m2e.core.ui.internal.editing.PomEdits.performOnDOMDocument(PomEdits.java:384)
	at org.eclipse.m2e.editor.pom.MavenPomEditorPage.updateParentAction(MavenPomEditorPage.java:375)
	at org.eclipse.m2e.editor.pom.MavenPomEditorPage.access$2(MavenPomEditorPage.java:371)
	at org.eclipse.m2e.editor.pom.MavenPomEditorPage$4.run(MavenPomEditorPage.java:245)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4140)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.core 4 4 2012-03-30 08:11:21.635
!MESSAGE can not calculate a model ID without a document reference
!STACK 0
java.lang.IllegalArgumentException: can not calculate a model ID without a document reference
	at org.eclipse.wst.sse.core.internal.FileBufferModelManager.calculateId(FileBufferModelManager.java:408)
	at org.eclipse.wst.sse.core.internal.model.ModelManagerImpl._getModelFor(ModelManagerImpl.java:613)
	at org.eclipse.wst.sse.core.internal.model.ModelManagerImpl.getModelForRead(ModelManagerImpl.java:1433)
	at org.eclipse.m2e.core.ui.internal.editing.PomEdits.performOnDOMDocument(PomEdits.java:384)
	at org.eclipse.m2e.editor.pom.OverviewPage$17.run(OverviewPage.java:1091)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4140)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 08:11:21.640
!MESSAGE Failed to populate overview panel

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:17:48.497
!MESSAGE File /MvcDemo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:17:48.499
!MESSAGE File /MvcDemo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:17:49.064
!MESSAGE File /SpringCore/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:17:49.066
!MESSAGE File /SpringCore/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:17:49.621
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:17:49.623
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:17:50.026
!MESSAGE File /SpringJDBC/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:17:50.028
!MESSAGE File /SpringJDBC/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:17:50.443
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:17:50.445
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:17:51.290
!MESSAGE File /SpringMvc/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:17:51.292
!MESSAGE File /SpringMvc/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.wst.common.project.facet.core 4 0 2012-03-30 08:18:19.417
!MESSAGE Project facet grails.app has not been defined. It is used in plugin com.springsource.sts.server.tc.core.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:18:54.882
!MESSAGE File /SpringMVC/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:18:54.884
!MESSAGE File /SpringMVC/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:22:26.972
!MESSAGE CatalogItem org.eclipse.m2e.discovery.lifecyclemapping.m2e-egit does not contain lifecycle mapping metadata

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:22:27.008
!MESSAGE CatalogItem org.eclipse.m2e.discovery.lifecyclemapping.m2e-cvs does not contain lifecycle mapping metadata

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:22:27.011
!MESSAGE CatalogItem org.eclipse.m2e.discovery.lifecyclemapping.m2e-subversive does not contain lifecycle mapping metadata

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:22:27.014
!MESSAGE CatalogItem org.eclipse.m2e.discovery.lifecyclemapping.m2e-subclipse does not contain lifecycle mapping metadata

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:22:27.017
!MESSAGE CatalogItem org.eclipse.m2e.discovery.maven-runtime-3.0.3 does not contain lifecycle mapping metadata

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:22:27.035
!MESSAGE CatalogItem org.codehaus.groovy.m2eclipse does not contain lifecycle mapping metadata

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:22:46.130
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:22:46.178
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:22:47.543
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:22:47.547
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:26:03.343
!MESSAGE File /SpringSupport/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:26:03.436
!MESSAGE File /SpringSupport/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:28:16.694
!MESSAGE File /SpringJMS/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:28:16.695
!MESSAGE File /SpringJMS/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:49:47.925
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:49:47.936
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:49:49.078
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 08:49:49.116
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:06:58.790
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:06:59.186
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:07:00.292
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:07:02.985
!MESSAGE File /SpringMVCForm/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:07:02.987
!MESSAGE File /SpringMVCForm/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.core.resources 2 568 2012-03-30 09:07:03.360
!MESSAGE Problems encountered while setting project description.
!SUBENTRY 1 org.eclipse.core.resources 2 35 2012-03-30 09:07:03.360
!MESSAGE Cannot remove nature org.springframework.ide.eclipse.core.springnature because it is a prerequisite of nature com.springsource.sts.roo.core.nature.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:07:05.059
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:07:05.070
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:07:18.119
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:07:18.123
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:07:26.133
!MESSAGE File /SpringRemoting/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:07:26.136
!MESSAGE File /SpringRemoting/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.core 2 4 2012-03-30 09:07:26.326
!MESSAGE Unable to update Maven configuration
!SUBENTRY 1 org.eclipse.core.resources 2 568 2012-03-30 09:07:26.326
!MESSAGE Problems encountered while setting project description.
!SUBENTRY 2 org.eclipse.core.resources 2 35 2012-03-30 09:07:26.326
!MESSAGE Cannot remove nature org.springframework.ide.eclipse.core.springnature because it is a prerequisite of nature com.springsource.sts.roo.core.nature.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:08:01.655
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:08:01.701
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:08:06.010
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:08:06.014
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:15.719
!MESSAGE File /MvcDemo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:15.723
!MESSAGE File /MvcDemo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:16.148
!MESSAGE File /SpringAOP/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:16.153
!MESSAGE File /SpringAOP/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:16.880
!MESSAGE File /SpringCore/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:16.881
!MESSAGE File /SpringCore/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:17.185
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:17.186
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:17.447
!MESSAGE File /SpringJMS/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:17.449
!MESSAGE File /SpringJMS/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:17.748
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:17.750
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:18.130
!MESSAGE File /SpringMVCForm/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:18.132
!MESSAGE File /SpringMVCForm/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:18.540
!MESSAGE File /SpringMVC/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:18.547
!MESSAGE File /SpringMVC/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:18.997
!MESSAGE File /SpringRemoting/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:18.999
!MESSAGE File /SpringRemoting/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:19.453
!MESSAGE File /SpringSupport/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:13:19.455
!MESSAGE File /SpringSupport/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.core 2 4 2012-03-30 09:13:19.622
!MESSAGE Unable to update Maven configuration
!SUBENTRY 1 org.eclipse.core.resources 2 568 2012-03-30 09:13:19.622
!MESSAGE Problems encountered while setting project description.
!SUBENTRY 2 org.eclipse.core.resources 2 35 2012-03-30 09:13:19.622
!MESSAGE Cannot remove nature org.springframework.ide.eclipse.core.springnature because it is a prerequisite of nature com.springsource.sts.roo.core.nature.
!SUBENTRY 1 org.eclipse.core.resources 2 568 2012-03-30 09:13:19.622
!MESSAGE Problems encountered while setting project description.
!SUBENTRY 2 org.eclipse.core.resources 2 35 2012-03-30 09:13:19.622
!MESSAGE Cannot remove nature org.springframework.ide.eclipse.core.springnature because it is a prerequisite of nature com.springsource.sts.roo.core.nature.

!ENTRY org.eclipse.ui 4 4 2012-03-30 09:23:50.938
!MESSAGE "Format" did not complete normally.  Please see the log for more information.

!ENTRY org.eclipse.ui 4 0 2012-03-30 09:23:50.941
!MESSAGE Overlapping text edits
!STACK 0
org.eclipse.text.edits.MalformedTreeException: Overlapping text edits
	at org.eclipse.text.edits.TextEdit$InsertionComparator.compare(TextEdit.java:121)
	at java.util.Collections.indexedBinarySearch(Unknown Source)
	at java.util.Collections.binarySearch(Unknown Source)
	at org.eclipse.text.edits.TextEdit.computeInsertionIndex(TextEdit.java:796)
	at org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:781)
	at org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:335)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.indentIfNotAlreadyIndented(DefaultXMLPartitionFormatter.java:1260)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.indentIfPossible(DefaultXMLPartitionFormatter.java:1345)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.indentIfPossible(DefaultXMLPartitionFormatter.java:1280)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatEndTag(DefaultXMLPartitionFormatter.java:417)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatStartTag(DefaultXMLPartitionFormatter.java:615)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatRegion(DefaultXMLPartitionFormatter.java:448)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatStartTag(DefaultXMLPartitionFormatter.java:564)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatRegion(DefaultXMLPartitionFormatter.java:448)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatStartTag(DefaultXMLPartitionFormatter.java:564)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatRegion(DefaultXMLPartitionFormatter.java:448)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatSiblings(DefaultXMLPartitionFormatter.java:491)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.format(DefaultXMLPartitionFormatter.java:204)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.format(DefaultXMLPartitionFormatter.java:160)
	at org.eclipse.wst.xml.ui.internal.XMLFormattingStrategy.format(XMLFormattingStrategy.java:61)
	at org.eclipse.jface.text.formatter.MultiPassContentFormatter.formatMaster(MultiPassContentFormatter.java:193)
	at org.eclipse.wst.sse.ui.StructuredTextMultiPassContentFormatter.formatMaster(StructuredTextMultiPassContentFormatter.java:56)
	at org.eclipse.jface.text.formatter.MultiPassContentFormatter.format(MultiPassContentFormatter.java:142)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:531)
	at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:128)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:468)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:786)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:885)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:567)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:508)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1100)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1509)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4640)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4528)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:341)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4972)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2531)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.ui 4 4 2012-03-30 09:23:54.573
!MESSAGE "Format" did not complete normally.  Please see the log for more information.

!ENTRY org.eclipse.ui 4 0 2012-03-30 09:23:54.577
!MESSAGE Overlapping text edits
!STACK 0
org.eclipse.text.edits.MalformedTreeException: Overlapping text edits
	at org.eclipse.text.edits.TextEdit$InsertionComparator.compare(TextEdit.java:121)
	at java.util.Collections.indexedBinarySearch(Unknown Source)
	at java.util.Collections.binarySearch(Unknown Source)
	at org.eclipse.text.edits.TextEdit.computeInsertionIndex(TextEdit.java:796)
	at org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:781)
	at org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:335)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.indentIfNotAlreadyIndented(DefaultXMLPartitionFormatter.java:1260)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.indentIfPossible(DefaultXMLPartitionFormatter.java:1345)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.indentIfPossible(DefaultXMLPartitionFormatter.java:1280)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatEndTag(DefaultXMLPartitionFormatter.java:417)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatStartTag(DefaultXMLPartitionFormatter.java:615)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatRegion(DefaultXMLPartitionFormatter.java:448)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatStartTag(DefaultXMLPartitionFormatter.java:564)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatRegion(DefaultXMLPartitionFormatter.java:448)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatStartTag(DefaultXMLPartitionFormatter.java:564)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatRegion(DefaultXMLPartitionFormatter.java:448)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.formatSiblings(DefaultXMLPartitionFormatter.java:491)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.format(DefaultXMLPartitionFormatter.java:204)
	at org.eclipse.wst.xml.core.internal.formatter.DefaultXMLPartitionFormatter.format(DefaultXMLPartitionFormatter.java:160)
	at org.eclipse.wst.xml.ui.internal.XMLFormattingStrategy.format(XMLFormattingStrategy.java:61)
	at org.eclipse.jface.text.formatter.MultiPassContentFormatter.formatMaster(MultiPassContentFormatter.java:193)
	at org.eclipse.wst.sse.ui.StructuredTextMultiPassContentFormatter.formatMaster(StructuredTextMultiPassContentFormatter.java:56)
	at org.eclipse.jface.text.formatter.MultiPassContentFormatter.format(MultiPassContentFormatter.java:142)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:531)
	at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:128)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:468)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:786)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:885)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:567)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:508)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1100)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1509)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4640)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4528)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:341)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4972)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2531)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.core 4 4 2012-03-30 09:24:28.996
!MESSAGE assertion failed: 
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: assertion failed: 
	at org.eclipse.core.runtime.Assert.isTrue(Assert.java:110)
	at org.eclipse.core.runtime.Assert.isTrue(Assert.java:96)
	at org.eclipse.ui.internal.texteditor.quickdiff.DocumentLineDiffer.handleAboutToBeChanged(DocumentLineDiffer.java:794)
	at org.eclipse.ui.internal.texteditor.quickdiff.DocumentLineDiffer.documentAboutToBeChanged(DocumentLineDiffer.java:763)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireDocumentAboutToChange(BasicStructuredDocument.java:389)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireDocumentAboutToChanged(BasicStructuredDocument.java:1120)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1912)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2419)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$3(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$4.run(JobSafeStructuredDocument.java:163)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:171)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceSource(XMLModelUpdater.java:1612)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceAttr(XMLModelUpdater.java:1349)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.attrReplaced(DOMModelImpl.java:114)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.notifyAttrReplaced(ElementImpl.java:997)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.appendAttributeNode(ElementImpl.java:190)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.setAttribute(ElementImpl.java:1274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateDOMFeature(EMF2DOMAdapterImpl.java:1383)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateDOMFeature(EMF2DOMAdapterImpl.java:1621)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.notifyChanged(EMF2DOMAdapterImpl.java:1099)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:380)
	at org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.setID(TranslatorResourceImpl.java:344)
	at org.eclipse.wst.common.internal.emf.utilities.IDUtil.assignID(IDUtil.java:50)
	at org.eclipse.wst.common.internal.emf.utilities.IDUtil.getOrAssignID(IDUtil.java:41)
	at org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.getURIFragment(CompatibilityXMIResourceImpl.java:112)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.doBecomeProxy(ExtendedEcoreUtil.java:299)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.becomeProxy(ExtendedEcoreUtil.java:293)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.unload(ExtendedEcoreUtil.java:274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.removeMOFValue(EMF2DOMAdapterImpl.java:553)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:512)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature(EMF2DOMAdapterImpl.java:1014)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:989)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:973)
	at org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSEAdapter.notifyChanged(EMF2DOMSSEAdapter.java:230)
	at org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.notify(AbstractNotifier.java:202)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.notifyStructureChanged(XMLModelNotifierImpl.java:392)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.endChanging(XMLModelNotifierImpl.java:180)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.changedModel(DOMModelImpl.java:167)
	at org.eclipse.wst.sse.core.internal.model.AbstractStructuredModel$DocumentToModelNotifier.nodesReplaced(AbstractStructuredModel.java:151)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireEvent(BasicStructuredDocument.java:600)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireStructuredDocumentEvent(BasicStructuredDocument.java:1199)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1979)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2408)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$2(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$3.run(JobSafeStructuredDocument.java:141)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:144)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replace(BasicStructuredDocument.java:2368)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$0(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$1.run(JobSafeStructuredDocument.java:103)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replace(JobSafeStructuredDocument.java:106)
	at org.eclipse.jface.text.projection.ProjectionTextStore.replace(ProjectionTextStore.java:111)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1184)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1210)
	at org.eclipse.jface.text.projection.ProjectionDocument.replace(ProjectionDocument.java:629)
	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange(DefaultDocumentAdapter.java:248)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:7180)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:7994)
	at org.eclipse.swt.custom.StyledText.paste(StyledText.java:7236)
	at org.eclipse.jface.text.TextViewer.paste(TextViewer.java:4052)
	at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3990)
	at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:1016)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1535)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:442)
	at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:128)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:468)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:786)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:885)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:567)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:508)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1100)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1509)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4640)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4528)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:341)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4972)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2531)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.core 4 4 2012-03-30 09:24:29.004
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.projection.ProjectionDocument.normalize(ProjectionDocument.java:671)
	at org.eclipse.jface.text.projection.ProjectionDocument.masterDocumentAboutToBeChanged(ProjectionDocument.java:721)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.fireDocumentEvent(ProjectionDocumentManager.java:121)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.documentAboutToBeChanged(ProjectionDocumentManager.java:138)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireDocumentAboutToChange(BasicStructuredDocument.java:389)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireDocumentAboutToChanged(BasicStructuredDocument.java:1120)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1912)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2419)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$3(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$4.run(JobSafeStructuredDocument.java:163)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:171)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceSource(XMLModelUpdater.java:1612)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceAttr(XMLModelUpdater.java:1349)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.attrReplaced(DOMModelImpl.java:114)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.notifyAttrReplaced(ElementImpl.java:997)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.appendAttributeNode(ElementImpl.java:190)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.setAttribute(ElementImpl.java:1274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateDOMFeature(EMF2DOMAdapterImpl.java:1383)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateDOMFeature(EMF2DOMAdapterImpl.java:1621)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.notifyChanged(EMF2DOMAdapterImpl.java:1099)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:380)
	at org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.setID(TranslatorResourceImpl.java:344)
	at org.eclipse.wst.common.internal.emf.utilities.IDUtil.assignID(IDUtil.java:50)
	at org.eclipse.wst.common.internal.emf.utilities.IDUtil.getOrAssignID(IDUtil.java:41)
	at org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.getURIFragment(CompatibilityXMIResourceImpl.java:112)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.doBecomeProxy(ExtendedEcoreUtil.java:299)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.becomeProxy(ExtendedEcoreUtil.java:293)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.unload(ExtendedEcoreUtil.java:274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.removeMOFValue(EMF2DOMAdapterImpl.java:553)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:512)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature(EMF2DOMAdapterImpl.java:1014)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:989)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:973)
	at org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSEAdapter.notifyChanged(EMF2DOMSSEAdapter.java:230)
	at org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.notify(AbstractNotifier.java:202)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.notifyStructureChanged(XMLModelNotifierImpl.java:392)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.endChanging(XMLModelNotifierImpl.java:180)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.changedModel(DOMModelImpl.java:167)
	at org.eclipse.wst.sse.core.internal.model.AbstractStructuredModel$DocumentToModelNotifier.nodesReplaced(AbstractStructuredModel.java:151)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireEvent(BasicStructuredDocument.java:600)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireStructuredDocumentEvent(BasicStructuredDocument.java:1199)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1979)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2408)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$2(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$3.run(JobSafeStructuredDocument.java:141)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:144)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replace(BasicStructuredDocument.java:2368)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$0(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$1.run(JobSafeStructuredDocument.java:103)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replace(JobSafeStructuredDocument.java:106)
	at org.eclipse.jface.text.projection.ProjectionTextStore.replace(ProjectionTextStore.java:111)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1184)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1210)
	at org.eclipse.jface.text.projection.ProjectionDocument.replace(ProjectionDocument.java:629)
	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange(DefaultDocumentAdapter.java:248)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:7180)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:7994)
	at org.eclipse.swt.custom.StyledText.paste(StyledText.java:7236)
	at org.eclipse.jface.text.TextViewer.paste(TextViewer.java:4052)
	at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3990)
	at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:1016)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1535)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:442)
	at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:128)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:468)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:786)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:885)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:567)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:508)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1100)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1509)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4640)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4528)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:341)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4972)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2531)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.core 4 4 2012-03-30 09:24:29.019
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.projection.ProjectionDocument.normalize(ProjectionDocument.java:671)
	at org.eclipse.jface.text.projection.ProjectionDocument.masterDocumentAboutToBeChanged(ProjectionDocument.java:721)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.fireDocumentEvent(ProjectionDocumentManager.java:121)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.documentAboutToBeChanged(ProjectionDocumentManager.java:138)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireDocumentAboutToChange(BasicStructuredDocument.java:389)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireDocumentAboutToChanged(BasicStructuredDocument.java:1120)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1912)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2419)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$3(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$4.run(JobSafeStructuredDocument.java:163)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:171)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceSource(XMLModelUpdater.java:1612)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceAttr(XMLModelUpdater.java:1349)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.attrReplaced(DOMModelImpl.java:114)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.notifyAttrReplaced(ElementImpl.java:997)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.removeAttributeNode(ElementImpl.java:1116)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.removeAttribute(ElementImpl.java:1046)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateDOMFeature(EMF2DOMAdapterImpl.java:1385)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateDOMFeature(EMF2DOMAdapterImpl.java:1621)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.notifyChanged(EMF2DOMAdapterImpl.java:1099)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:380)
	at org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.setID(TranslatorResourceImpl.java:344)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.doBecomeProxy(ExtendedEcoreUtil.java:302)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.becomeProxy(ExtendedEcoreUtil.java:293)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.unload(ExtendedEcoreUtil.java:274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.removeMOFValue(EMF2DOMAdapterImpl.java:553)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:512)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature(EMF2DOMAdapterImpl.java:1014)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:989)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:973)
	at org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSEAdapter.notifyChanged(EMF2DOMSSEAdapter.java:230)
	at org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.notify(AbstractNotifier.java:202)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.notifyStructureChanged(XMLModelNotifierImpl.java:392)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.endChanging(XMLModelNotifierImpl.java:180)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.changedModel(DOMModelImpl.java:167)
	at org.eclipse.wst.sse.core.internal.model.AbstractStructuredModel$DocumentToModelNotifier.nodesReplaced(AbstractStructuredModel.java:151)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireEvent(BasicStructuredDocument.java:600)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireStructuredDocumentEvent(BasicStructuredDocument.java:1199)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1979)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2408)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$2(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$3.run(JobSafeStructuredDocument.java:141)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:144)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replace(BasicStructuredDocument.java:2368)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$0(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$1.run(JobSafeStructuredDocument.java:103)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replace(JobSafeStructuredDocument.java:106)
	at org.eclipse.jface.text.projection.ProjectionTextStore.replace(ProjectionTextStore.java:111)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1184)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1210)
	at org.eclipse.jface.text.projection.ProjectionDocument.replace(ProjectionDocument.java:629)
	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange(DefaultDocumentAdapter.java:248)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:7180)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:7994)
	at org.eclipse.swt.custom.StyledText.paste(StyledText.java:7236)
	at org.eclipse.jface.text.TextViewer.paste(TextViewer.java:4052)
	at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3990)
	at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:1016)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1535)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:442)
	at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:128)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:468)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:786)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:885)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:567)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:508)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1100)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1509)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4640)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4528)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:341)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4972)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2531)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.core 4 4 2012-03-30 09:24:29.028
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.projection.ProjectionDocument.normalize(ProjectionDocument.java:671)
	at org.eclipse.jface.text.projection.ProjectionDocument.masterDocumentAboutToBeChanged(ProjectionDocument.java:721)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.fireDocumentEvent(ProjectionDocumentManager.java:121)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.documentAboutToBeChanged(ProjectionDocumentManager.java:138)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireDocumentAboutToChange(BasicStructuredDocument.java:389)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireDocumentAboutToChanged(BasicStructuredDocument.java:1120)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1912)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2419)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$3(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$4.run(JobSafeStructuredDocument.java:163)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:171)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceSource(XMLModelUpdater.java:1612)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceAttr(XMLModelUpdater.java:1349)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.attrReplaced(DOMModelImpl.java:114)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.notifyAttrReplaced(ElementImpl.java:997)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.appendAttributeNode(ElementImpl.java:190)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.setAttribute(ElementImpl.java:1274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateDOMFeature(EMF2DOMAdapterImpl.java:1383)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateDOMFeature(EMF2DOMAdapterImpl.java:1621)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.notifyChanged(EMF2DOMAdapterImpl.java:1099)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:380)
	at org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.setID(TranslatorResourceImpl.java:344)
	at org.eclipse.wst.common.internal.emf.utilities.IDUtil.assignID(IDUtil.java:50)
	at org.eclipse.wst.common.internal.emf.utilities.IDUtil.getOrAssignID(IDUtil.java:41)
	at org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.getURIFragment(CompatibilityXMIResourceImpl.java:112)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.doBecomeProxy(ExtendedEcoreUtil.java:299)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.becomeProxy(ExtendedEcoreUtil.java:293)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.unload(ExtendedEcoreUtil.java:274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.removeMOFValue(EMF2DOMAdapterImpl.java:553)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:512)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature(EMF2DOMAdapterImpl.java:1014)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:989)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:973)
	at org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSEAdapter.notifyChanged(EMF2DOMSSEAdapter.java:230)
	at org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.notify(AbstractNotifier.java:202)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.notifyStructureChanged(XMLModelNotifierImpl.java:392)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.endChanging(XMLModelNotifierImpl.java:180)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.changedModel(DOMModelImpl.java:167)
	at org.eclipse.wst.sse.core.internal.model.AbstractStructuredModel$DocumentToModelNotifier.nodesReplaced(AbstractStructuredModel.java:151)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireEvent(BasicStructuredDocument.java:600)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireStructuredDocumentEvent(BasicStructuredDocument.java:1199)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1979)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2408)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$2(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$3.run(JobSafeStructuredDocument.java:141)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:144)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replace(BasicStructuredDocument.java:2368)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$0(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$1.run(JobSafeStructuredDocument.java:103)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replace(JobSafeStructuredDocument.java:106)
	at org.eclipse.jface.text.projection.ProjectionTextStore.replace(ProjectionTextStore.java:111)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1184)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1210)
	at org.eclipse.jface.text.projection.ProjectionDocument.replace(ProjectionDocument.java:629)
	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange(DefaultDocumentAdapter.java:248)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:7180)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:7994)
	at org.eclipse.swt.custom.StyledText.paste(StyledText.java:7236)
	at org.eclipse.jface.text.TextViewer.paste(TextViewer.java:4052)
	at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3990)
	at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:1016)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1535)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:442)
	at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:128)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:468)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:786)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:885)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:567)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:508)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1100)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1509)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4640)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4528)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:341)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4972)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2531)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.core 4 4 2012-03-30 09:24:29.038
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.projection.ProjectionDocument.normalize(ProjectionDocument.java:671)
	at org.eclipse.jface.text.projection.ProjectionDocument.masterDocumentAboutToBeChanged(ProjectionDocument.java:721)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.fireDocumentEvent(ProjectionDocumentManager.java:121)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.documentAboutToBeChanged(ProjectionDocumentManager.java:138)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireDocumentAboutToChange(BasicStructuredDocument.java:389)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireDocumentAboutToChanged(BasicStructuredDocument.java:1120)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1912)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2419)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$3(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$4.run(JobSafeStructuredDocument.java:163)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:171)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceSource(XMLModelUpdater.java:1612)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceAttr(XMLModelUpdater.java:1349)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.attrReplaced(DOMModelImpl.java:114)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.notifyAttrReplaced(ElementImpl.java:997)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.removeAttributeNode(ElementImpl.java:1116)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.removeAttribute(ElementImpl.java:1046)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateDOMFeature(EMF2DOMAdapterImpl.java:1385)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateDOMFeature(EMF2DOMAdapterImpl.java:1621)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.notifyChanged(EMF2DOMAdapterImpl.java:1099)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:380)
	at org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.setID(TranslatorResourceImpl.java:344)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.doBecomeProxy(ExtendedEcoreUtil.java:302)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.becomeProxy(ExtendedEcoreUtil.java:293)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.unload(ExtendedEcoreUtil.java:274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.removeMOFValue(EMF2DOMAdapterImpl.java:553)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:512)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature(EMF2DOMAdapterImpl.java:1014)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:989)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:973)
	at org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSEAdapter.notifyChanged(EMF2DOMSSEAdapter.java:230)
	at org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.notify(AbstractNotifier.java:202)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.notifyStructureChanged(XMLModelNotifierImpl.java:392)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.endChanging(XMLModelNotifierImpl.java:180)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.changedModel(DOMModelImpl.java:167)
	at org.eclipse.wst.sse.core.internal.model.AbstractStructuredModel$DocumentToModelNotifier.nodesReplaced(AbstractStructuredModel.java:151)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireEvent(BasicStructuredDocument.java:600)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireStructuredDocumentEvent(BasicStructuredDocument.java:1199)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1979)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2408)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$2(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$3.run(JobSafeStructuredDocument.java:141)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:144)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replace(BasicStructuredDocument.java:2368)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$0(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$1.run(JobSafeStructuredDocument.java:103)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replace(JobSafeStructuredDocument.java:106)
	at org.eclipse.jface.text.projection.ProjectionTextStore.replace(ProjectionTextStore.java:111)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1184)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1210)
	at org.eclipse.jface.text.projection.ProjectionDocument.replace(ProjectionDocument.java:629)
	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange(DefaultDocumentAdapter.java:248)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:7180)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:7994)
	at org.eclipse.swt.custom.StyledText.paste(StyledText.java:7236)
	at org.eclipse.jface.text.TextViewer.paste(TextViewer.java:4052)
	at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3990)
	at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:1016)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1535)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:442)
	at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:128)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:468)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:786)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:885)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:567)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:508)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1100)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1509)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4640)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4528)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:341)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4972)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2531)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.core 4 4 2012-03-30 09:24:29.054
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.projection.ProjectionDocument.normalize(ProjectionDocument.java:671)
	at org.eclipse.jface.text.projection.ProjectionDocument.masterDocumentAboutToBeChanged(ProjectionDocument.java:721)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.fireDocumentEvent(ProjectionDocumentManager.java:121)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.documentAboutToBeChanged(ProjectionDocumentManager.java:138)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireDocumentAboutToChange(BasicStructuredDocument.java:389)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireDocumentAboutToChanged(BasicStructuredDocument.java:1120)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1912)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2419)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$3(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$4.run(JobSafeStructuredDocument.java:163)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:171)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceSource(XMLModelUpdater.java:1612)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceAttr(XMLModelUpdater.java:1349)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.attrReplaced(DOMModelImpl.java:114)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.notifyAttrReplaced(ElementImpl.java:997)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.appendAttributeNode(ElementImpl.java:190)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.setAttribute(ElementImpl.java:1274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateDOMFeature(EMF2DOMAdapterImpl.java:1383)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateDOMFeature(EMF2DOMAdapterImpl.java:1621)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.notifyChanged(EMF2DOMAdapterImpl.java:1099)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:380)
	at org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.setID(TranslatorResourceImpl.java:344)
	at org.eclipse.wst.common.internal.emf.utilities.IDUtil.assignID(IDUtil.java:50)
	at org.eclipse.wst.common.internal.emf.utilities.IDUtil.getOrAssignID(IDUtil.java:41)
	at org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.getURIFragment(CompatibilityXMIResourceImpl.java:112)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.doBecomeProxy(ExtendedEcoreUtil.java:299)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.becomeProxy(ExtendedEcoreUtil.java:293)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.unload(ExtendedEcoreUtil.java:274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.removeMOFValue(EMF2DOMAdapterImpl.java:553)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:512)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature(EMF2DOMAdapterImpl.java:1014)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:989)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:973)
	at org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSEAdapter.notifyChanged(EMF2DOMSSEAdapter.java:230)
	at org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.notify(AbstractNotifier.java:202)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.notifyStructureChanged(XMLModelNotifierImpl.java:392)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.endChanging(XMLModelNotifierImpl.java:180)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.changedModel(DOMModelImpl.java:167)
	at org.eclipse.wst.sse.core.internal.model.AbstractStructuredModel$DocumentToModelNotifier.nodesReplaced(AbstractStructuredModel.java:151)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireEvent(BasicStructuredDocument.java:600)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireStructuredDocumentEvent(BasicStructuredDocument.java:1199)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1979)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2408)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$2(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$3.run(JobSafeStructuredDocument.java:141)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:144)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replace(BasicStructuredDocument.java:2368)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$0(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$1.run(JobSafeStructuredDocument.java:103)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replace(JobSafeStructuredDocument.java:106)
	at org.eclipse.jface.text.projection.ProjectionTextStore.replace(ProjectionTextStore.java:111)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1184)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1210)
	at org.eclipse.jface.text.projection.ProjectionDocument.replace(ProjectionDocument.java:629)
	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange(DefaultDocumentAdapter.java:248)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:7180)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:7994)
	at org.eclipse.swt.custom.StyledText.paste(StyledText.java:7236)
	at org.eclipse.jface.text.TextViewer.paste(TextViewer.java:4052)
	at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3990)
	at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:1016)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1535)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:442)
	at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:128)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:468)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:786)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:885)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:567)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:508)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1100)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1509)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4640)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4528)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:341)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4972)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2531)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.core 4 4 2012-03-30 09:24:29.063
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.projection.ProjectionDocument.normalize(ProjectionDocument.java:671)
	at org.eclipse.jface.text.projection.ProjectionDocument.masterDocumentAboutToBeChanged(ProjectionDocument.java:721)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.fireDocumentEvent(ProjectionDocumentManager.java:121)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.documentAboutToBeChanged(ProjectionDocumentManager.java:138)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireDocumentAboutToChange(BasicStructuredDocument.java:389)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireDocumentAboutToChanged(BasicStructuredDocument.java:1120)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1912)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2419)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$3(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$4.run(JobSafeStructuredDocument.java:163)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:171)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceSource(XMLModelUpdater.java:1612)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceAttr(XMLModelUpdater.java:1349)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.attrReplaced(DOMModelImpl.java:114)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.notifyAttrReplaced(ElementImpl.java:997)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.removeAttributeNode(ElementImpl.java:1116)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.removeAttribute(ElementImpl.java:1046)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateDOMFeature(EMF2DOMAdapterImpl.java:1385)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateDOMFeature(EMF2DOMAdapterImpl.java:1621)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.notifyChanged(EMF2DOMAdapterImpl.java:1099)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:380)
	at org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.setID(TranslatorResourceImpl.java:344)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.doBecomeProxy(ExtendedEcoreUtil.java:302)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.becomeProxy(ExtendedEcoreUtil.java:293)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.unload(ExtendedEcoreUtil.java:274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.removeMOFValue(EMF2DOMAdapterImpl.java:553)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:512)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature(EMF2DOMAdapterImpl.java:1014)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:989)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:973)
	at org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSEAdapter.notifyChanged(EMF2DOMSSEAdapter.java:230)
	at org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.notify(AbstractNotifier.java:202)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.notifyStructureChanged(XMLModelNotifierImpl.java:392)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.endChanging(XMLModelNotifierImpl.java:180)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.changedModel(DOMModelImpl.java:167)
	at org.eclipse.wst.sse.core.internal.model.AbstractStructuredModel$DocumentToModelNotifier.nodesReplaced(AbstractStructuredModel.java:151)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireEvent(BasicStructuredDocument.java:600)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireStructuredDocumentEvent(BasicStructuredDocument.java:1199)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1979)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2408)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$2(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$3.run(JobSafeStructuredDocument.java:141)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:144)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replace(BasicStructuredDocument.java:2368)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$0(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$1.run(JobSafeStructuredDocument.java:103)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replace(JobSafeStructuredDocument.java:106)
	at org.eclipse.jface.text.projection.ProjectionTextStore.replace(ProjectionTextStore.java:111)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1184)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1210)
	at org.eclipse.jface.text.projection.ProjectionDocument.replace(ProjectionDocument.java:629)
	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange(DefaultDocumentAdapter.java:248)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:7180)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:7994)
	at org.eclipse.swt.custom.StyledText.paste(StyledText.java:7236)
	at org.eclipse.jface.text.TextViewer.paste(TextViewer.java:4052)
	at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3990)
	at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:1016)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1535)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:442)
	at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:128)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:468)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:786)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:885)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:567)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:508)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1100)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1509)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4640)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4528)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:341)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4972)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2531)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.core 4 4 2012-03-30 09:24:29.071
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.projection.ProjectionDocument.normalize(ProjectionDocument.java:671)
	at org.eclipse.jface.text.projection.ProjectionDocument.masterDocumentAboutToBeChanged(ProjectionDocument.java:721)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.fireDocumentEvent(ProjectionDocumentManager.java:121)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.documentAboutToBeChanged(ProjectionDocumentManager.java:138)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireDocumentAboutToChange(BasicStructuredDocument.java:389)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireDocumentAboutToChanged(BasicStructuredDocument.java:1120)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1912)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2419)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$3(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$4.run(JobSafeStructuredDocument.java:163)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:171)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceSource(XMLModelUpdater.java:1612)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceAttr(XMLModelUpdater.java:1349)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.attrReplaced(DOMModelImpl.java:114)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.notifyAttrReplaced(ElementImpl.java:997)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.appendAttributeNode(ElementImpl.java:190)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.setAttribute(ElementImpl.java:1274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateDOMFeature(EMF2DOMAdapterImpl.java:1383)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateDOMFeature(EMF2DOMAdapterImpl.java:1621)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.notifyChanged(EMF2DOMAdapterImpl.java:1099)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:380)
	at org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.setID(TranslatorResourceImpl.java:344)
	at org.eclipse.wst.common.internal.emf.utilities.IDUtil.assignID(IDUtil.java:50)
	at org.eclipse.wst.common.internal.emf.utilities.IDUtil.getOrAssignID(IDUtil.java:41)
	at org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.getURIFragment(CompatibilityXMIResourceImpl.java:112)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.doBecomeProxy(ExtendedEcoreUtil.java:299)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.becomeProxy(ExtendedEcoreUtil.java:293)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.unload(ExtendedEcoreUtil.java:274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.removeMOFValue(EMF2DOMAdapterImpl.java:553)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:512)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature(EMF2DOMAdapterImpl.java:1014)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:989)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:973)
	at org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSEAdapter.notifyChanged(EMF2DOMSSEAdapter.java:230)
	at org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.notify(AbstractNotifier.java:202)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.notifyStructureChanged(XMLModelNotifierImpl.java:392)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.endChanging(XMLModelNotifierImpl.java:180)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.changedModel(DOMModelImpl.java:167)
	at org.eclipse.wst.sse.core.internal.model.AbstractStructuredModel$DocumentToModelNotifier.nodesReplaced(AbstractStructuredModel.java:151)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireEvent(BasicStructuredDocument.java:600)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireStructuredDocumentEvent(BasicStructuredDocument.java:1199)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1979)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2408)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$2(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$3.run(JobSafeStructuredDocument.java:141)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:144)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replace(BasicStructuredDocument.java:2368)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$0(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$1.run(JobSafeStructuredDocument.java:103)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replace(JobSafeStructuredDocument.java:106)
	at org.eclipse.jface.text.projection.ProjectionTextStore.replace(ProjectionTextStore.java:111)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1184)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1210)
	at org.eclipse.jface.text.projection.ProjectionDocument.replace(ProjectionDocument.java:629)
	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange(DefaultDocumentAdapter.java:248)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:7180)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:7994)
	at org.eclipse.swt.custom.StyledText.paste(StyledText.java:7236)
	at org.eclipse.jface.text.TextViewer.paste(TextViewer.java:4052)
	at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3990)
	at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:1016)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1535)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:442)
	at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:128)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:468)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:786)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:885)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:567)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:508)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1100)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1509)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4640)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4528)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:341)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4972)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2531)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.wst.sse.core 4 4 2012-03-30 09:24:29.077
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.projection.ProjectionDocument.normalize(ProjectionDocument.java:671)
	at org.eclipse.jface.text.projection.ProjectionDocument.masterDocumentAboutToBeChanged(ProjectionDocument.java:721)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.fireDocumentEvent(ProjectionDocumentManager.java:121)
	at org.eclipse.jface.text.projection.ProjectionDocumentManager.documentAboutToBeChanged(ProjectionDocumentManager.java:138)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireDocumentAboutToChange(BasicStructuredDocument.java:389)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireDocumentAboutToChanged(BasicStructuredDocument.java:1120)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1912)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2419)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$3(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$4.run(JobSafeStructuredDocument.java:163)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:171)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceSource(XMLModelUpdater.java:1612)
	at org.eclipse.wst.xml.core.internal.document.XMLModelUpdater.replaceAttr(XMLModelUpdater.java:1349)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.attrReplaced(DOMModelImpl.java:114)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.notifyAttrReplaced(ElementImpl.java:997)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.removeAttributeNode(ElementImpl.java:1116)
	at org.eclipse.wst.xml.core.internal.document.ElementImpl.removeAttribute(ElementImpl.java:1046)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateDOMFeature(EMF2DOMAdapterImpl.java:1385)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateDOMFeature(EMF2DOMAdapterImpl.java:1621)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.notifyChanged(EMF2DOMAdapterImpl.java:1099)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:380)
	at org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.setID(TranslatorResourceImpl.java:344)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.doBecomeProxy(ExtendedEcoreUtil.java:302)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.becomeProxy(ExtendedEcoreUtil.java:293)
	at org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.unload(ExtendedEcoreUtil.java:274)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.removeMOFValue(EMF2DOMAdapterImpl.java:553)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:512)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature(EMF2DOMAdapterImpl.java:1014)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:989)
	at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:973)
	at org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSEAdapter.notifyChanged(EMF2DOMSSEAdapter.java:230)
	at org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.notify(AbstractNotifier.java:202)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.notifyStructureChanged(XMLModelNotifierImpl.java:392)
	at org.eclipse.wst.xml.core.internal.document.XMLModelNotifierImpl.endChanging(XMLModelNotifierImpl.java:180)
	at org.eclipse.wst.xml.core.internal.document.DOMModelImpl.changedModel(DOMModelImpl.java:167)
	at org.eclipse.wst.sse.core.internal.model.AbstractStructuredModel$DocumentToModelNotifier.nodesReplaced(AbstractStructuredModel.java:151)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument._fireEvent(BasicStructuredDocument.java:600)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireStructuredDocumentEvent(BasicStructuredDocument.java:1199)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.internalReplaceText(BasicStructuredDocument.java:1979)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2423)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replaceText(BasicStructuredDocument.java:2408)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$2(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$3.run(JobSafeStructuredDocument.java:141)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replaceText(JobSafeStructuredDocument.java:144)
	at org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.replace(BasicStructuredDocument.java:2368)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.access$0(JobSafeStructuredDocument.java:1)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument$1.run(JobSafeStructuredDocument.java:103)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.wst.sse.ui.EditorExecutionContext.execute(EditorExecutionContext.java:149)
	at org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.replace(JobSafeStructuredDocument.java:106)
	at org.eclipse.jface.text.projection.ProjectionTextStore.replace(ProjectionTextStore.java:111)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1184)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1210)
	at org.eclipse.jface.text.projection.ProjectionDocument.replace(ProjectionDocument.java:629)
	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange(DefaultDocumentAdapter.java:248)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:7180)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:7994)
	at org.eclipse.swt.custom.StyledText.paste(StyledText.java:7236)
	at org.eclipse.jface.text.TextViewer.paste(TextViewer.java:4052)
	at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3990)
	at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:1016)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1535)
	at org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:442)
	at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:128)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:468)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:786)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:885)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:567)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:508)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1077)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1100)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1509)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4640)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4528)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:341)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4972)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2531)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:31:27.623
!MESSAGE Launch configuration SpringAop Tests references closed project SpringAOP

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:31:27.629
!MESSAGE Launch configuration SpringAop Tests references closed project SpringAOP

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:31:27.647
!MESSAGE Launch configuration SpringAop Tests references closed project SpringAOP

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:31:32.250
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:31:32.258
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:31:32.278
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:31:32.281
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:31:32.305
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:31:32.318
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.core.resources 4 274 2012-03-30 09:33:41.782
!MESSAGE Resource is out of sync with the file system: '/SpringMVC/target/classes/com/baselogic/demo/HomeController.class'.

!ENTRY org.eclipse.core.resources 4 274 2012-03-30 09:33:52.492
!MESSAGE Resource is out of sync with the file system: '/SpringMVC/target/classes/com/baselogic/demo/HomeController.class'.

!ENTRY org.eclipse.core.resources 4 274 2012-03-30 09:33:53.003
!MESSAGE Resource is out of sync with the file system: '/SpringMVC/target/classes/com/baselogic/demo/HomeController.class'.

!ENTRY org.eclipse.core.resources 4 274 2012-03-30 09:38:55.067
!MESSAGE Resource is out of sync with the file system: '/SpringMVC/target/classes/com/baselogic/demo/HomeController.class'.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:39:53.485
!MESSAGE Could not substitute variable ${workspace_loc:/SpringUtility}.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:39:53.558
!MESSAGE Could not substitute variable ${workspace_loc:/SpringUtility}.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:39:53.734
!MESSAGE Could not substitute variable ${workspace_loc:/SpringUtility}.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:39:53.804
!MESSAGE Could not substitute variable ${workspace_loc:/SpringUtility}.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:39:53.833
!MESSAGE Could not substitute variable ${workspace_loc:/SpringUtility}.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:39:53.838
!MESSAGE Could not substitute variable ${workspace_loc:/SpringUtility}.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:39:53.862
!MESSAGE Could not substitute variable ${workspace_loc:/SpringUtility}.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:44:14.870
!MESSAGE File /SpringMVCForm/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:44:14.873
!MESSAGE File /SpringMVCForm/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:44:17.169
!MESSAGE Problems encountered while setting project description.

!ENTRY org.eclipse.wst.server.core 4 0 2012-03-30 09:44:44.152
!MESSAGE Publishing failed
!SUBENTRY 1 org.eclipse.core.resources 4 274 2012-03-30 09:44:44.152
!MESSAGE Resource is out of sync with the file system: '/SpringMVC/target/classes/com/baselogic/demo/HomeController.class'.
!SUBENTRY 1 org.eclipse.jst.server.tomcat.core 4 0 2012-03-30 09:44:44.152
!MESSAGE Publishing failed with multiple errors
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:44.152
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/controllers/HomeController.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:44.152
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/controllers/PageController.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:44.152
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/remote/GreetingComponent.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:44.152
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/remote/GreetingComponentImpl.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:44.152
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/remote/GreetingServiceEndpoint.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:44.152
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/util/AppUtils.class'.

!ENTRY org.eclipse.wst.server.core 4 0 2012-03-30 09:44:57.179
!MESSAGE Publishing failed
!SUBENTRY 1 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.179
!MESSAGE Resource is out of sync with the file system: '/SpringMVC/target/classes/com/baselogic/demo/HomeController.class'.
!SUBENTRY 1 org.eclipse.jst.server.tomcat.core 4 0 2012-03-30 09:44:57.179
!MESSAGE Publishing failed with multiple errors
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.179
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/controllers/HomeController.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.179
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/controllers/PageController.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.179
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/remote/GreetingComponent.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.179
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/remote/GreetingComponentImpl.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.179
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/remote/GreetingServiceEndpoint.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.179
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/util/AppUtils.class'.

!ENTRY org.eclipse.wst.server.core 4 0 2012-03-30 09:44:57.238
!MESSAGE Publishing failed
!SUBENTRY 1 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.238
!MESSAGE Resource is out of sync with the file system: '/SpringMVC/target/classes/com/baselogic/demo/HomeController.class'.
!SUBENTRY 1 org.eclipse.jst.server.tomcat.core 4 0 2012-03-30 09:44:57.238
!MESSAGE Publishing failed with multiple errors
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.238
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/controllers/HomeController.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.238
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/controllers/PageController.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.238
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/remote/GreetingComponent.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.238
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/remote/GreetingComponentImpl.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.238
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/remote/GreetingServiceEndpoint.class'.
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-03-30 09:44:57.239
!MESSAGE Resource is out of sync with the file system: '/MvcDemo/target/classes/com/baselogic/demo/util/AppUtils.class'.

!ENTRY org.eclipse.wst.server.core 4 0 2012-03-30 09:44:59.327
!MESSAGE Server VMware vFabric tc Server Developer Edition v2.6 failed to start.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:47:31.504
!MESSAGE File /SpringMVCForm/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:47:31.506
!MESSAGE File /SpringMVCForm/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:47:31.934
!MESSAGE File /SpringRemoting/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:47:31.935
!MESSAGE File /SpringRemoting/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.core 2 4 2012-03-30 09:47:32.123
!MESSAGE Unable to update Maven configuration
!SUBENTRY 1 org.eclipse.core.resources 2 568 2012-03-30 09:47:32.123
!MESSAGE Problems encountered while setting project description.
!SUBENTRY 2 org.eclipse.core.resources 2 35 2012-03-30 09:47:32.123
!MESSAGE Cannot remove nature org.springframework.ide.eclipse.core.springnature because it is a prerequisite of nature com.springsource.sts.roo.core.nature.
!SUBENTRY 1 org.eclipse.core.resources 2 568 2012-03-30 09:47:32.123
!MESSAGE Problems encountered while setting project description.
!SUBENTRY 2 org.eclipse.core.resources 2 35 2012-03-30 09:47:32.123
!MESSAGE Cannot remove nature org.springframework.ide.eclipse.core.springnature because it is a prerequisite of nature com.springsource.sts.roo.core.nature.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:49:16.956
!MESSAGE Launch configuration SpringAop Tests references closed project SpringAOP

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:49:16.959
!MESSAGE Launch configuration SpringAop Tests references closed project SpringAOP

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:49:16.968
!MESSAGE Launch configuration SpringAop Tests references closed project SpringAOP

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:49:27.006
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:49:27.010
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:49:27.023
!MESSAGE Launch configuration SimpleComponent references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:49:27.028
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:49:27.033
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:49:27.066
!MESSAGE Launch configuration SpringCore Tests references closed project SpringCore

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:48.824
!MESSAGE File /MvcDemo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:48.826
!MESSAGE File /MvcDemo/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:49.185
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:49.186
!MESSAGE File /SpringHibernate/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:49.495
!MESSAGE File /SpringJMS/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:49.496
!MESSAGE File /SpringJMS/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:49.762
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:49.763
!MESSAGE File /SpringJPA/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:50.136
!MESSAGE File /SpringMVCForm/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:50.138
!MESSAGE File /SpringMVCForm/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:50.457
!MESSAGE File /SpringMVC/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:50.459
!MESSAGE File /SpringMVC/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:50.949
!MESSAGE File /SpringRemoting/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:50:50.953
!MESSAGE File /SpringRemoting/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.core 2 4 2012-03-30 09:50:51.154
!MESSAGE Unable to update Maven configuration
!SUBENTRY 1 org.eclipse.core.resources 2 568 2012-03-30 09:50:51.154
!MESSAGE Problems encountered while setting project description.
!SUBENTRY 2 org.eclipse.core.resources 2 35 2012-03-30 09:50:51.154
!MESSAGE Cannot remove nature org.springframework.ide.eclipse.core.springnature because it is a prerequisite of nature com.springsource.sts.roo.core.nature.
!SUBENTRY 1 org.eclipse.core.resources 2 568 2012-03-30 09:50:51.154
!MESSAGE Problems encountered while setting project description.
!SUBENTRY 2 org.eclipse.core.resources 2 35 2012-03-30 09:50:51.154
!MESSAGE Cannot remove nature org.springframework.ide.eclipse.core.springnature because it is a prerequisite of nature com.springsource.sts.roo.core.nature.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:51:27.606
!MESSAGE File /SpringMVCForm/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:51:27.612
!MESSAGE File /SpringMVCForm/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.core 2 4 2012-03-30 09:51:27.739
!MESSAGE Unable to update Maven configuration
!SUBENTRY 1 org.eclipse.core.resources 2 568 2012-03-30 09:51:27.740
!MESSAGE Problems encountered while setting project description.
!SUBENTRY 2 org.eclipse.core.resources 2 35 2012-03-30 09:51:27.740
!MESSAGE Cannot remove nature org.springframework.ide.eclipse.core.springnature because it is a prerequisite of nature com.springsource.sts.roo.core.nature.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:52:01.496
!MESSAGE File /SpringRemoting/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:52:01.498
!MESSAGE File /SpringRemoting/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.core 2 4 2012-03-30 09:52:01.604
!MESSAGE Unable to update Maven configuration
!SUBENTRY 1 org.eclipse.core.resources 2 568 2012-03-30 09:52:01.604
!MESSAGE Problems encountered while setting project description.
!SUBENTRY 2 org.eclipse.core.resources 2 35 2012-03-30 09:52:01.604
!MESSAGE Cannot remove nature org.springframework.ide.eclipse.core.springnature because it is a prerequisite of nature com.springsource.sts.roo.core.nature.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:52:48.216
!MESSAGE File /SpringRemoting/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2012-03-30 09:52:48.217
!MESSAGE File /SpringRemoting/src/main/aspect does not exist yet. Create it and re-run configuration.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2012-03-30 09:52:51.501
!MESSAGE Problems encountered while setting project description.

!ENTRY org.eclipse.wst.server.core 4 0 2012-03-30 10:00:03.810
!MESSAGE Server VMware vFabric tc Server Developer Edition v2.6 failed to start.

!ENTRY org.eclipse.wst.server.core 4 0 2012-03-30 10:00:50.244
!MESSAGE Server VMware vFabric tc Server Developer Edition v2.6 failed to start.

!ENTRY org.eclipse.wst.server.core 4 0 2012-03-30 10:01:15.873
!MESSAGE Server VMware vFabric tc Server Developer Edition v2.6 failed to start.

!ENTRY org.eclipse.wst.server.core 4 0 2012-03-30 10:01:56.579
!MESSAGE Server VMware vFabric tc Server Developer Edition v2.6 failed to start.
