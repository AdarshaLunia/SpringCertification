package com.baselogic.service;

//Static imports
import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.*;
import static org.mockito.BDDMockito.given;
import static org.mockito.Matchers.any;
import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.*;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;

import org.mockito.Mock;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.core.classloader.annotations.SuppressStaticInitializationFor;
import org.powermock.modules.junit4.PowerMockRunner;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.service.ExampleService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.baselogic.service.ExampleServiceImpl;
import com.baselogic.util.ContextUtils;

import junit.framework.TestCase;

@RunWith(PowerMockRunner.class)
@SuppressStaticInitializationFor("com.baselogic.util.ExampleUtils")
@PrepareForTest({ ContextUtils.class })
public class OrderStaticMockServiceTests {

	private OrderServiceImpl orderService;
	
	@Mock
	OrderDAO orderDao;
	
	@Before
	public void beforeEachUnitTest(){
		orderService = new OrderServiceImpl();
	}

	@After
	public void afterEachUnitTest(){
		orderService = null;
	}

	//----- Test methods ----------------------------------------------------//    

	@Test
	public void testMockOrderDao() throws Exception {
		Order order = new Order();
		order.setCustomer("Mick");
		when(orderDao.placeOrder(any(Order.class))).thenReturn(order);
		
		orderService.orderDao = orderDao;
		
		Order newOrder = orderService.placeOrder(order);
		
		assertThat(newOrder.getCustomer(), is("Mick"));
	}

	//----- Mock Test methods ----------------------------------------------------//
	/*
	 * Mockito:
	 * http://code.google.com/p/mockito/
	 * 
	 * PowerMock:
	 * http://code.google.com/p/powermock/
	 * 
	 * PowerMock Mockito Extensions:
	 * http://code.google.com/p/powermock/wiki/MockitoUsage13
	 */

	@Test // basic
	public void simpleMock() throws Exception {}

	@Test // basic
	public void partialMock() throws Exception {}

	@Test // basic
	public void staticMock() throws Exception {}

	@Test //basic
	public void mockException() throws Exception {}

	@Test //basic
	public void mockNotInvoked() throws Exception {}


	@Test // int
	public void multipleCallsToMock() throws Exception {}

	@Test //int
	public void mockMultipleExceptions() throws Exception {}

	@Test //int
	public void mockUnImplementedService() throws Exception { /*UnImplementedService.getUnImplementedMessage()*/}

	
	@Test //adv
	public void timeDelayMock() throws Exception {}

	@Test //adv
	public void privatePartialMock() throws Exception {}

	@Test //adv
	public void privateRemoteMock() throws Exception {}




} // the end...
