package com.baselogic.service;

import java.util.Random;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.baselogic.dao.OrderDAO;
import com.baselogic.domain.Order;
import com.baselogic.util.ExampleUtils;


/**
 * {@link ExampleService} with hard-coded input data.
 */
@Component
public class OrderServiceGoodDesignImpl implements OrderService {

	@Autowired
	protected OrderDAO orderDao;

	@Autowired
	protected OrderDAO aliasedDao;
	
	@Autowired
	String message;
	
	/**
	 * Reads next record from input
	 */
	public String getMessage() {
		return message;	
	}
	
	public Order placeOrder(Order order){
		return orderDao.placeOrder(order);
	}

	//----- Mockable methods --------------------------------------------------------//    
	public static String staticFunction(){
		return "OrderServiceImpl: staticFunction";
	}
	
	public String partialFunction(){
		return "OrderServiceImpl: partialFunction";
	}
	
	ExampleUtils utils = new ExampleUtils();

	public String nestedFunction(){
		
		String result = "OrderServiceImpl: nestedFunction()";
		
		result += privateFunction();
		
		result += partialFunction();
		
		result += ExampleUtils.staticFunction();
		
		result += utils.nestedFunction();
		
		result += utils.nestedFunctionTwo();
		
		return result;
		
	}

	private static String privateFunction() throws RuntimeException {
		return "OrderServiceImpl: privateFunction";
	}
	

}
